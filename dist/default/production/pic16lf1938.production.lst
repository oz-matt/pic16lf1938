

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Mar 12 16:55:32 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16LF1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	intentry,global,class=CODE,delta=2
    89                           	dabs	1,0x620,48
    90                           	dabs	1,0x5B9,55
    91                           	dabs	1,0x2389,0,_UbxReceiver
    92                           	dabs	1,0x7E,2
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  0110                     	;# 
   145  0111                     	;# 
   146  0112                     	;# 
   147  0113                     	;# 
   148  0114                     	;# 
   149  0115                     	;# 
   150  0116                     	;# 
   151  0117                     	;# 
   152  0118                     	;# 
   153  0119                     	;# 
   154  011A                     	;# 
   155  011B                     	;# 
   156  011D                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0191                     	;# 
   160  0191                     	;# 
   161  0192                     	;# 
   162  0193                     	;# 
   163  0193                     	;# 
   164  0193                     	;# 
   165  0194                     	;# 
   166  0195                     	;# 
   167  0196                     	;# 
   168  0199                     	;# 
   169  019A                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  019C                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019F                     	;# 
   179  020D                     	;# 
   180  0210                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0217                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0294                     	;# 
   194  0295                     	;# 
   195  0295                     	;# 
   196  0296                     	;# 
   197  0298                     	;# 
   198  0298                     	;# 
   199  0299                     	;# 
   200  029A                     	;# 
   201  029B                     	;# 
   202  029C                     	;# 
   203  029C                     	;# 
   204  029D                     	;# 
   205  029E                     	;# 
   206  029F                     	;# 
   207  0311                     	;# 
   208  0311                     	;# 
   209  0312                     	;# 
   210  0313                     	;# 
   211  0314                     	;# 
   212  0315                     	;# 
   213  0315                     	;# 
   214  0316                     	;# 
   215  0318                     	;# 
   216  0318                     	;# 
   217  0319                     	;# 
   218  031A                     	;# 
   219  031C                     	;# 
   220  031C                     	;# 
   221  031D                     	;# 
   222  031E                     	;# 
   223  0394                     	;# 
   224  0395                     	;# 
   225  0396                     	;# 
   226  0415                     	;# 
   227  0416                     	;# 
   228  0417                     	;# 
   229  041C                     	;# 
   230  041D                     	;# 
   231  041E                     	;# 
   232  0791                     	;# 
   233  0792                     	;# 
   234  0793                     	;# 
   235  0794                     	;# 
   236  0795                     	;# 
   237  0798                     	;# 
   238  0799                     	;# 
   239  07A0                     	;# 
   240  07A1                     	;# 
   241  07A3                     	;# 
   242  07A4                     	;# 
   243  07A6                     	;# 
   244  07A7                     	;# 
   245  07A9                     	;# 
   246  07AA                     	;# 
   247  0FE4                     	;# 
   248  0FE5                     	;# 
   249  0FE6                     	;# 
   250  0FE7                     	;# 
   251  0FE8                     	;# 
   252  0FE9                     	;# 
   253  0FEA                     	;# 
   254  0FEB                     	;# 
   255  0FED                     	;# 
   256  0FEE                     	;# 
   257  0FEF                     	;# 
   258  0000                     	;# 
   259  0001                     	;# 
   260  0002                     	;# 
   261  0003                     	;# 
   262  0004                     	;# 
   263  0005                     	;# 
   264  0006                     	;# 
   265  0007                     	;# 
   266  0008                     	;# 
   267  0009                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  000D                     	;# 
   272  000E                     	;# 
   273  0010                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  001A                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  0110                     	;# 
   310  0111                     	;# 
   311  0112                     	;# 
   312  0113                     	;# 
   313  0114                     	;# 
   314  0115                     	;# 
   315  0116                     	;# 
   316  0117                     	;# 
   317  0118                     	;# 
   318  0119                     	;# 
   319  011A                     	;# 
   320  011B                     	;# 
   321  011D                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0191                     	;# 
   325  0191                     	;# 
   326  0192                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0193                     	;# 
   330  0194                     	;# 
   331  0195                     	;# 
   332  0196                     	;# 
   333  0199                     	;# 
   334  019A                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019B                     	;# 
   338  019B                     	;# 
   339  019C                     	;# 
   340  019C                     	;# 
   341  019D                     	;# 
   342  019E                     	;# 
   343  019F                     	;# 
   344  020D                     	;# 
   345  0210                     	;# 
   346  0211                     	;# 
   347  0212                     	;# 
   348  0213                     	;# 
   349  0214                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0291                     	;# 
   355  0291                     	;# 
   356  0292                     	;# 
   357  0293                     	;# 
   358  0294                     	;# 
   359  0295                     	;# 
   360  0295                     	;# 
   361  0296                     	;# 
   362  0298                     	;# 
   363  0298                     	;# 
   364  0299                     	;# 
   365  029A                     	;# 
   366  029B                     	;# 
   367  029C                     	;# 
   368  029C                     	;# 
   369  029D                     	;# 
   370  029E                     	;# 
   371  029F                     	;# 
   372  0311                     	;# 
   373  0311                     	;# 
   374  0312                     	;# 
   375  0313                     	;# 
   376  0314                     	;# 
   377  0315                     	;# 
   378  0315                     	;# 
   379  0316                     	;# 
   380  0318                     	;# 
   381  0318                     	;# 
   382  0319                     	;# 
   383  031A                     	;# 
   384  031C                     	;# 
   385  031C                     	;# 
   386  031D                     	;# 
   387  031E                     	;# 
   388  0394                     	;# 
   389  0395                     	;# 
   390  0396                     	;# 
   391  0415                     	;# 
   392  0416                     	;# 
   393  0417                     	;# 
   394  041C                     	;# 
   395  041D                     	;# 
   396  041E                     	;# 
   397  0791                     	;# 
   398  0792                     	;# 
   399  0793                     	;# 
   400  0794                     	;# 
   401  0795                     	;# 
   402  0798                     	;# 
   403  0799                     	;# 
   404  07A0                     	;# 
   405  07A1                     	;# 
   406  07A3                     	;# 
   407  07A4                     	;# 
   408  07A6                     	;# 
   409  07A7                     	;# 
   410  07A9                     	;# 
   411  07AA                     	;# 
   412  0FE4                     	;# 
   413  0FE5                     	;# 
   414  0FE6                     	;# 
   415  0FE7                     	;# 
   416  0FE8                     	;# 
   417  0FE9                     	;# 
   418  0FEA                     	;# 
   419  0FEB                     	;# 
   420  0FED                     	;# 
   421  0FEE                     	;# 
   422  0FEF                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  000D                     	;# 
   437  000E                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  008C                     	;# 
   454  008D                     	;# 
   455  008E                     	;# 
   456  0090                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0095                     	;# 
   461  0096                     	;# 
   462  0097                     	;# 
   463  0098                     	;# 
   464  0099                     	;# 
   465  009A                     	;# 
   466  009B                     	;# 
   467  009B                     	;# 
   468  009C                     	;# 
   469  009D                     	;# 
   470  009E                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  0110                     	;# 
   475  0111                     	;# 
   476  0112                     	;# 
   477  0113                     	;# 
   478  0114                     	;# 
   479  0115                     	;# 
   480  0116                     	;# 
   481  0117                     	;# 
   482  0118                     	;# 
   483  0119                     	;# 
   484  011A                     	;# 
   485  011B                     	;# 
   486  011D                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  0191                     	;# 
   490  0191                     	;# 
   491  0192                     	;# 
   492  0193                     	;# 
   493  0193                     	;# 
   494  0193                     	;# 
   495  0194                     	;# 
   496  0195                     	;# 
   497  0196                     	;# 
   498  0199                     	;# 
   499  019A                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019C                     	;# 
   505  019C                     	;# 
   506  019D                     	;# 
   507  019E                     	;# 
   508  019F                     	;# 
   509  020D                     	;# 
   510  0210                     	;# 
   511  0211                     	;# 
   512  0212                     	;# 
   513  0213                     	;# 
   514  0214                     	;# 
   515  0215                     	;# 
   516  0215                     	;# 
   517  0216                     	;# 
   518  0217                     	;# 
   519  0291                     	;# 
   520  0291                     	;# 
   521  0292                     	;# 
   522  0293                     	;# 
   523  0294                     	;# 
   524  0295                     	;# 
   525  0295                     	;# 
   526  0296                     	;# 
   527  0298                     	;# 
   528  0298                     	;# 
   529  0299                     	;# 
   530  029A                     	;# 
   531  029B                     	;# 
   532  029C                     	;# 
   533  029C                     	;# 
   534  029D                     	;# 
   535  029E                     	;# 
   536  029F                     	;# 
   537  0311                     	;# 
   538  0311                     	;# 
   539  0312                     	;# 
   540  0313                     	;# 
   541  0314                     	;# 
   542  0315                     	;# 
   543  0315                     	;# 
   544  0316                     	;# 
   545  0318                     	;# 
   546  0318                     	;# 
   547  0319                     	;# 
   548  031A                     	;# 
   549  031C                     	;# 
   550  031C                     	;# 
   551  031D                     	;# 
   552  031E                     	;# 
   553  0394                     	;# 
   554  0395                     	;# 
   555  0396                     	;# 
   556  0415                     	;# 
   557  0416                     	;# 
   558  0417                     	;# 
   559  041C                     	;# 
   560  041D                     	;# 
   561  041E                     	;# 
   562  0791                     	;# 
   563  0792                     	;# 
   564  0793                     	;# 
   565  0794                     	;# 
   566  0795                     	;# 
   567  0798                     	;# 
   568  0799                     	;# 
   569  07A0                     	;# 
   570  07A1                     	;# 
   571  07A3                     	;# 
   572  07A4                     	;# 
   573  07A6                     	;# 
   574  07A7                     	;# 
   575  07A9                     	;# 
   576  07AA                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000D                     	;# 
   602  000E                     	;# 
   603  0010                     	;# 
   604  0011                     	;# 
   605  0012                     	;# 
   606  0013                     	;# 
   607  0015                     	;# 
   608  0016                     	;# 
   609  0016                     	;# 
   610  0017                     	;# 
   611  0018                     	;# 
   612  0019                     	;# 
   613  001A                     	;# 
   614  001B                     	;# 
   615  001C                     	;# 
   616  001E                     	;# 
   617  001F                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  0090                     	;# 
   622  0091                     	;# 
   623  0092                     	;# 
   624  0093                     	;# 
   625  0095                     	;# 
   626  0096                     	;# 
   627  0097                     	;# 
   628  0098                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009B                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  010C                     	;# 
   637  010D                     	;# 
   638  010E                     	;# 
   639  0110                     	;# 
   640  0111                     	;# 
   641  0112                     	;# 
   642  0113                     	;# 
   643  0114                     	;# 
   644  0115                     	;# 
   645  0116                     	;# 
   646  0117                     	;# 
   647  0118                     	;# 
   648  0119                     	;# 
   649  011A                     	;# 
   650  011B                     	;# 
   651  011D                     	;# 
   652  018C                     	;# 
   653  018D                     	;# 
   654  0191                     	;# 
   655  0191                     	;# 
   656  0192                     	;# 
   657  0193                     	;# 
   658  0193                     	;# 
   659  0193                     	;# 
   660  0194                     	;# 
   661  0195                     	;# 
   662  0196                     	;# 
   663  0199                     	;# 
   664  019A                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019B                     	;# 
   668  019B                     	;# 
   669  019C                     	;# 
   670  019C                     	;# 
   671  019D                     	;# 
   672  019E                     	;# 
   673  019F                     	;# 
   674  020D                     	;# 
   675  0210                     	;# 
   676  0211                     	;# 
   677  0212                     	;# 
   678  0213                     	;# 
   679  0214                     	;# 
   680  0215                     	;# 
   681  0215                     	;# 
   682  0216                     	;# 
   683  0217                     	;# 
   684  0291                     	;# 
   685  0291                     	;# 
   686  0292                     	;# 
   687  0293                     	;# 
   688  0294                     	;# 
   689  0295                     	;# 
   690  0295                     	;# 
   691  0296                     	;# 
   692  0298                     	;# 
   693  0298                     	;# 
   694  0299                     	;# 
   695  029A                     	;# 
   696  029B                     	;# 
   697  029C                     	;# 
   698  029C                     	;# 
   699  029D                     	;# 
   700  029E                     	;# 
   701  029F                     	;# 
   702  0311                     	;# 
   703  0311                     	;# 
   704  0312                     	;# 
   705  0313                     	;# 
   706  0314                     	;# 
   707  0315                     	;# 
   708  0315                     	;# 
   709  0316                     	;# 
   710  0318                     	;# 
   711  0318                     	;# 
   712  0319                     	;# 
   713  031A                     	;# 
   714  031C                     	;# 
   715  031C                     	;# 
   716  031D                     	;# 
   717  031E                     	;# 
   718  0394                     	;# 
   719  0395                     	;# 
   720  0396                     	;# 
   721  0415                     	;# 
   722  0416                     	;# 
   723  0417                     	;# 
   724  041C                     	;# 
   725  041D                     	;# 
   726  041E                     	;# 
   727  0791                     	;# 
   728  0792                     	;# 
   729  0793                     	;# 
   730  0794                     	;# 
   731  0795                     	;# 
   732  0798                     	;# 
   733  0799                     	;# 
   734  07A0                     	;# 
   735  07A1                     	;# 
   736  07A3                     	;# 
   737  07A4                     	;# 
   738  07A6                     	;# 
   739  07A7                     	;# 
   740  07A9                     	;# 
   741  07AA                     	;# 
   742  0FE4                     	;# 
   743  0FE5                     	;# 
   744  0FE6                     	;# 
   745  0FE7                     	;# 
   746  0FE8                     	;# 
   747  0FE9                     	;# 
   748  0FEA                     	;# 
   749  0FEB                     	;# 
   750  0FED                     	;# 
   751  0FEE                     	;# 
   752  0FEF                     	;# 
   753  0000                     	;# 
   754  0001                     	;# 
   755  0002                     	;# 
   756  0003                     	;# 
   757  0004                     	;# 
   758  0005                     	;# 
   759  0006                     	;# 
   760  0007                     	;# 
   761  0008                     	;# 
   762  0009                     	;# 
   763  000A                     	;# 
   764  000B                     	;# 
   765  000C                     	;# 
   766  000D                     	;# 
   767  000E                     	;# 
   768  0010                     	;# 
   769  0011                     	;# 
   770  0012                     	;# 
   771  0013                     	;# 
   772  0015                     	;# 
   773  0016                     	;# 
   774  0016                     	;# 
   775  0017                     	;# 
   776  0018                     	;# 
   777  0019                     	;# 
   778  001A                     	;# 
   779  001B                     	;# 
   780  001C                     	;# 
   781  001E                     	;# 
   782  001F                     	;# 
   783  008C                     	;# 
   784  008D                     	;# 
   785  008E                     	;# 
   786  0090                     	;# 
   787  0091                     	;# 
   788  0092                     	;# 
   789  0093                     	;# 
   790  0095                     	;# 
   791  0096                     	;# 
   792  0097                     	;# 
   793  0098                     	;# 
   794  0099                     	;# 
   795  009A                     	;# 
   796  009B                     	;# 
   797  009B                     	;# 
   798  009C                     	;# 
   799  009D                     	;# 
   800  009E                     	;# 
   801  010C                     	;# 
   802  010D                     	;# 
   803  010E                     	;# 
   804  0110                     	;# 
   805  0111                     	;# 
   806  0112                     	;# 
   807  0113                     	;# 
   808  0114                     	;# 
   809  0115                     	;# 
   810  0116                     	;# 
   811  0117                     	;# 
   812  0118                     	;# 
   813  0119                     	;# 
   814  011A                     	;# 
   815  011B                     	;# 
   816  011D                     	;# 
   817  018C                     	;# 
   818  018D                     	;# 
   819  0191                     	;# 
   820  0191                     	;# 
   821  0192                     	;# 
   822  0193                     	;# 
   823  0193                     	;# 
   824  0193                     	;# 
   825  0194                     	;# 
   826  0195                     	;# 
   827  0196                     	;# 
   828  0199                     	;# 
   829  019A                     	;# 
   830  019B                     	;# 
   831  019B                     	;# 
   832  019B                     	;# 
   833  019B                     	;# 
   834  019C                     	;# 
   835  019C                     	;# 
   836  019D                     	;# 
   837  019E                     	;# 
   838  019F                     	;# 
   839  020D                     	;# 
   840  0210                     	;# 
   841  0211                     	;# 
   842  0212                     	;# 
   843  0213                     	;# 
   844  0214                     	;# 
   845  0215                     	;# 
   846  0215                     	;# 
   847  0216                     	;# 
   848  0217                     	;# 
   849  0291                     	;# 
   850  0291                     	;# 
   851  0292                     	;# 
   852  0293                     	;# 
   853  0294                     	;# 
   854  0295                     	;# 
   855  0295                     	;# 
   856  0296                     	;# 
   857  0298                     	;# 
   858  0298                     	;# 
   859  0299                     	;# 
   860  029A                     	;# 
   861  029B                     	;# 
   862  029C                     	;# 
   863  029C                     	;# 
   864  029D                     	;# 
   865  029E                     	;# 
   866  029F                     	;# 
   867  0311                     	;# 
   868  0311                     	;# 
   869  0312                     	;# 
   870  0313                     	;# 
   871  0314                     	;# 
   872  0315                     	;# 
   873  0315                     	;# 
   874  0316                     	;# 
   875  0318                     	;# 
   876  0318                     	;# 
   877  0319                     	;# 
   878  031A                     	;# 
   879  031C                     	;# 
   880  031C                     	;# 
   881  031D                     	;# 
   882  031E                     	;# 
   883  0394                     	;# 
   884  0395                     	;# 
   885  0396                     	;# 
   886  0415                     	;# 
   887  0416                     	;# 
   888  0417                     	;# 
   889  041C                     	;# 
   890  041D                     	;# 
   891  041E                     	;# 
   892  0791                     	;# 
   893  0792                     	;# 
   894  0793                     	;# 
   895  0794                     	;# 
   896  0795                     	;# 
   897  0798                     	;# 
   898  0799                     	;# 
   899  07A0                     	;# 
   900  07A1                     	;# 
   901  07A3                     	;# 
   902  07A4                     	;# 
   903  07A6                     	;# 
   904  07A7                     	;# 
   905  07A9                     	;# 
   906  07AA                     	;# 
   907  0FE4                     	;# 
   908  0FE5                     	;# 
   909  0FE6                     	;# 
   910  0FE7                     	;# 
   911  0FE8                     	;# 
   912  0FE9                     	;# 
   913  0FEA                     	;# 
   914  0FEB                     	;# 
   915  0FED                     	;# 
   916  0FEE                     	;# 
   917  0FEF                     	;# 
   918  0000                     	;# 
   919  0001                     	;# 
   920  0002                     	;# 
   921  0003                     	;# 
   922  0004                     	;# 
   923  0005                     	;# 
   924  0006                     	;# 
   925  0007                     	;# 
   926  0008                     	;# 
   927  0009                     	;# 
   928  000A                     	;# 
   929  000B                     	;# 
   930  000C                     	;# 
   931  000D                     	;# 
   932  000E                     	;# 
   933  0010                     	;# 
   934  0011                     	;# 
   935  0012                     	;# 
   936  0013                     	;# 
   937  0015                     	;# 
   938  0016                     	;# 
   939  0016                     	;# 
   940  0017                     	;# 
   941  0018                     	;# 
   942  0019                     	;# 
   943  001A                     	;# 
   944  001B                     	;# 
   945  001C                     	;# 
   946  001E                     	;# 
   947  001F                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  008E                     	;# 
   951  0090                     	;# 
   952  0091                     	;# 
   953  0092                     	;# 
   954  0093                     	;# 
   955  0095                     	;# 
   956  0096                     	;# 
   957  0097                     	;# 
   958  0098                     	;# 
   959  0099                     	;# 
   960  009A                     	;# 
   961  009B                     	;# 
   962  009B                     	;# 
   963  009C                     	;# 
   964  009D                     	;# 
   965  009E                     	;# 
   966  010C                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  0110                     	;# 
   970  0111                     	;# 
   971  0112                     	;# 
   972  0113                     	;# 
   973  0114                     	;# 
   974  0115                     	;# 
   975  0116                     	;# 
   976  0117                     	;# 
   977  0118                     	;# 
   978  0119                     	;# 
   979  011A                     	;# 
   980  011B                     	;# 
   981  011D                     	;# 
   982  018C                     	;# 
   983  018D                     	;# 
   984  0191                     	;# 
   985  0191                     	;# 
   986  0192                     	;# 
   987  0193                     	;# 
   988  0193                     	;# 
   989  0193                     	;# 
   990  0194                     	;# 
   991  0195                     	;# 
   992  0196                     	;# 
   993  0199                     	;# 
   994  019A                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019C                     	;# 
  1000  019C                     	;# 
  1001  019D                     	;# 
  1002  019E                     	;# 
  1003  019F                     	;# 
  1004  020D                     	;# 
  1005  0210                     	;# 
  1006  0211                     	;# 
  1007  0212                     	;# 
  1008  0213                     	;# 
  1009  0214                     	;# 
  1010  0215                     	;# 
  1011  0215                     	;# 
  1012  0216                     	;# 
  1013  0217                     	;# 
  1014  0291                     	;# 
  1015  0291                     	;# 
  1016  0292                     	;# 
  1017  0293                     	;# 
  1018  0294                     	;# 
  1019  0295                     	;# 
  1020  0295                     	;# 
  1021  0296                     	;# 
  1022  0298                     	;# 
  1023  0298                     	;# 
  1024  0299                     	;# 
  1025  029A                     	;# 
  1026  029B                     	;# 
  1027  029C                     	;# 
  1028  029C                     	;# 
  1029  029D                     	;# 
  1030  029E                     	;# 
  1031  029F                     	;# 
  1032  0311                     	;# 
  1033  0311                     	;# 
  1034  0312                     	;# 
  1035  0313                     	;# 
  1036  0314                     	;# 
  1037  0315                     	;# 
  1038  0315                     	;# 
  1039  0316                     	;# 
  1040  0318                     	;# 
  1041  0318                     	;# 
  1042  0319                     	;# 
  1043  031A                     	;# 
  1044  031C                     	;# 
  1045  031C                     	;# 
  1046  031D                     	;# 
  1047  031E                     	;# 
  1048  0394                     	;# 
  1049  0395                     	;# 
  1050  0396                     	;# 
  1051  0415                     	;# 
  1052  0416                     	;# 
  1053  0417                     	;# 
  1054  041C                     	;# 
  1055  041D                     	;# 
  1056  041E                     	;# 
  1057  0791                     	;# 
  1058  0792                     	;# 
  1059  0793                     	;# 
  1060  0794                     	;# 
  1061  0795                     	;# 
  1062  0798                     	;# 
  1063  0799                     	;# 
  1064  07A0                     	;# 
  1065  07A1                     	;# 
  1066  07A3                     	;# 
  1067  07A4                     	;# 
  1068  07A6                     	;# 
  1069  07A7                     	;# 
  1070  07A9                     	;# 
  1071  07AA                     	;# 
  1072  0FE4                     	;# 
  1073  0FE5                     	;# 
  1074  0FE6                     	;# 
  1075  0FE7                     	;# 
  1076  0FE8                     	;# 
  1077  0FE9                     	;# 
  1078  0FEA                     	;# 
  1079  0FEB                     	;# 
  1080  0FED                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083  0000                     	;# 
  1084  0001                     	;# 
  1085  0002                     	;# 
  1086  0003                     	;# 
  1087  0004                     	;# 
  1088  0005                     	;# 
  1089  0006                     	;# 
  1090  0007                     	;# 
  1091  0008                     	;# 
  1092  0009                     	;# 
  1093  000A                     	;# 
  1094  000B                     	;# 
  1095  000C                     	;# 
  1096  000D                     	;# 
  1097  000E                     	;# 
  1098  0010                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0013                     	;# 
  1102  0015                     	;# 
  1103  0016                     	;# 
  1104  0016                     	;# 
  1105  0017                     	;# 
  1106  0018                     	;# 
  1107  0019                     	;# 
  1108  001A                     	;# 
  1109  001B                     	;# 
  1110  001C                     	;# 
  1111  001E                     	;# 
  1112  001F                     	;# 
  1113  008C                     	;# 
  1114  008D                     	;# 
  1115  008E                     	;# 
  1116  0090                     	;# 
  1117  0091                     	;# 
  1118  0092                     	;# 
  1119  0093                     	;# 
  1120  0095                     	;# 
  1121  0096                     	;# 
  1122  0097                     	;# 
  1123  0098                     	;# 
  1124  0099                     	;# 
  1125  009A                     	;# 
  1126  009B                     	;# 
  1127  009B                     	;# 
  1128  009C                     	;# 
  1129  009D                     	;# 
  1130  009E                     	;# 
  1131  010C                     	;# 
  1132  010D                     	;# 
  1133  010E                     	;# 
  1134  0110                     	;# 
  1135  0111                     	;# 
  1136  0112                     	;# 
  1137  0113                     	;# 
  1138  0114                     	;# 
  1139  0115                     	;# 
  1140  0116                     	;# 
  1141  0117                     	;# 
  1142  0118                     	;# 
  1143  0119                     	;# 
  1144  011A                     	;# 
  1145  011B                     	;# 
  1146  011D                     	;# 
  1147  018C                     	;# 
  1148  018D                     	;# 
  1149  0191                     	;# 
  1150  0191                     	;# 
  1151  0192                     	;# 
  1152  0193                     	;# 
  1153  0193                     	;# 
  1154  0193                     	;# 
  1155  0194                     	;# 
  1156  0195                     	;# 
  1157  0196                     	;# 
  1158  0199                     	;# 
  1159  019A                     	;# 
  1160  019B                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019C                     	;# 
  1165  019C                     	;# 
  1166  019D                     	;# 
  1167  019E                     	;# 
  1168  019F                     	;# 
  1169  020D                     	;# 
  1170  0210                     	;# 
  1171  0211                     	;# 
  1172  0212                     	;# 
  1173  0213                     	;# 
  1174  0214                     	;# 
  1175  0215                     	;# 
  1176  0215                     	;# 
  1177  0216                     	;# 
  1178  0217                     	;# 
  1179  0291                     	;# 
  1180  0291                     	;# 
  1181  0292                     	;# 
  1182  0293                     	;# 
  1183  0294                     	;# 
  1184  0295                     	;# 
  1185  0295                     	;# 
  1186  0296                     	;# 
  1187  0298                     	;# 
  1188  0298                     	;# 
  1189  0299                     	;# 
  1190  029A                     	;# 
  1191  029B                     	;# 
  1192  029C                     	;# 
  1193  029C                     	;# 
  1194  029D                     	;# 
  1195  029E                     	;# 
  1196  029F                     	;# 
  1197  0311                     	;# 
  1198  0311                     	;# 
  1199  0312                     	;# 
  1200  0313                     	;# 
  1201  0314                     	;# 
  1202  0315                     	;# 
  1203  0315                     	;# 
  1204  0316                     	;# 
  1205  0318                     	;# 
  1206  0318                     	;# 
  1207  0319                     	;# 
  1208  031A                     	;# 
  1209  031C                     	;# 
  1210  031C                     	;# 
  1211  031D                     	;# 
  1212  031E                     	;# 
  1213  0394                     	;# 
  1214  0395                     	;# 
  1215  0396                     	;# 
  1216  0415                     	;# 
  1217  0416                     	;# 
  1218  0417                     	;# 
  1219  041C                     	;# 
  1220  041D                     	;# 
  1221  041E                     	;# 
  1222  0791                     	;# 
  1223  0792                     	;# 
  1224  0793                     	;# 
  1225  0794                     	;# 
  1226  0795                     	;# 
  1227  0798                     	;# 
  1228  0799                     	;# 
  1229  07A0                     	;# 
  1230  07A1                     	;# 
  1231  07A3                     	;# 
  1232  07A4                     	;# 
  1233  07A6                     	;# 
  1234  07A7                     	;# 
  1235  07A9                     	;# 
  1236  07AA                     	;# 
  1237  0FE4                     	;# 
  1238  0FE5                     	;# 
  1239  0FE6                     	;# 
  1240  0FE7                     	;# 
  1241  0FE8                     	;# 
  1242  0FE9                     	;# 
  1243  0FEA                     	;# 
  1244  0FEB                     	;# 
  1245  0FED                     	;# 
  1246  0FEE                     	;# 
  1247  0FEF                     	;# 
  1248  0000                     	;# 
  1249  0001                     	;# 
  1250  0002                     	;# 
  1251  0003                     	;# 
  1252  0004                     	;# 
  1253  0005                     	;# 
  1254  0006                     	;# 
  1255  0007                     	;# 
  1256  0008                     	;# 
  1257  0009                     	;# 
  1258  000A                     	;# 
  1259  000B                     	;# 
  1260  000C                     	;# 
  1261  000D                     	;# 
  1262  000E                     	;# 
  1263  0010                     	;# 
  1264  0011                     	;# 
  1265  0012                     	;# 
  1266  0013                     	;# 
  1267  0015                     	;# 
  1268  0016                     	;# 
  1269  0016                     	;# 
  1270  0017                     	;# 
  1271  0018                     	;# 
  1272  0019                     	;# 
  1273  001A                     	;# 
  1274  001B                     	;# 
  1275  001C                     	;# 
  1276  001E                     	;# 
  1277  001F                     	;# 
  1278  008C                     	;# 
  1279  008D                     	;# 
  1280  008E                     	;# 
  1281  0090                     	;# 
  1282  0091                     	;# 
  1283  0092                     	;# 
  1284  0093                     	;# 
  1285  0095                     	;# 
  1286  0096                     	;# 
  1287  0097                     	;# 
  1288  0098                     	;# 
  1289  0099                     	;# 
  1290  009A                     	;# 
  1291  009B                     	;# 
  1292  009B                     	;# 
  1293  009C                     	;# 
  1294  009D                     	;# 
  1295  009E                     	;# 
  1296  010C                     	;# 
  1297  010D                     	;# 
  1298  010E                     	;# 
  1299  0110                     	;# 
  1300  0111                     	;# 
  1301  0112                     	;# 
  1302  0113                     	;# 
  1303  0114                     	;# 
  1304  0115                     	;# 
  1305  0116                     	;# 
  1306  0117                     	;# 
  1307  0118                     	;# 
  1308  0119                     	;# 
  1309  011A                     	;# 
  1310  011B                     	;# 
  1311  011D                     	;# 
  1312  018C                     	;# 
  1313  018D                     	;# 
  1314  0191                     	;# 
  1315  0191                     	;# 
  1316  0192                     	;# 
  1317  0193                     	;# 
  1318  0193                     	;# 
  1319  0193                     	;# 
  1320  0194                     	;# 
  1321  0195                     	;# 
  1322  0196                     	;# 
  1323  0199                     	;# 
  1324  019A                     	;# 
  1325  019B                     	;# 
  1326  019B                     	;# 
  1327  019B                     	;# 
  1328  019B                     	;# 
  1329  019C                     	;# 
  1330  019C                     	;# 
  1331  019D                     	;# 
  1332  019E                     	;# 
  1333  019F                     	;# 
  1334  020D                     	;# 
  1335  0210                     	;# 
  1336  0211                     	;# 
  1337  0212                     	;# 
  1338  0213                     	;# 
  1339  0214                     	;# 
  1340  0215                     	;# 
  1341  0215                     	;# 
  1342  0216                     	;# 
  1343  0217                     	;# 
  1344  0291                     	;# 
  1345  0291                     	;# 
  1346  0292                     	;# 
  1347  0293                     	;# 
  1348  0294                     	;# 
  1349  0295                     	;# 
  1350  0295                     	;# 
  1351  0296                     	;# 
  1352  0298                     	;# 
  1353  0298                     	;# 
  1354  0299                     	;# 
  1355  029A                     	;# 
  1356  029B                     	;# 
  1357  029C                     	;# 
  1358  029C                     	;# 
  1359  029D                     	;# 
  1360  029E                     	;# 
  1361  029F                     	;# 
  1362  0311                     	;# 
  1363  0311                     	;# 
  1364  0312                     	;# 
  1365  0313                     	;# 
  1366  0314                     	;# 
  1367  0315                     	;# 
  1368  0315                     	;# 
  1369  0316                     	;# 
  1370  0318                     	;# 
  1371  0318                     	;# 
  1372  0319                     	;# 
  1373  031A                     	;# 
  1374  031C                     	;# 
  1375  031C                     	;# 
  1376  031D                     	;# 
  1377  031E                     	;# 
  1378  0394                     	;# 
  1379  0395                     	;# 
  1380  0396                     	;# 
  1381  0415                     	;# 
  1382  0416                     	;# 
  1383  0417                     	;# 
  1384  041C                     	;# 
  1385  041D                     	;# 
  1386  041E                     	;# 
  1387  0791                     	;# 
  1388  0792                     	;# 
  1389  0793                     	;# 
  1390  0794                     	;# 
  1391  0795                     	;# 
  1392  0798                     	;# 
  1393  0799                     	;# 
  1394  07A0                     	;# 
  1395  07A1                     	;# 
  1396  07A3                     	;# 
  1397  07A4                     	;# 
  1398  07A6                     	;# 
  1399  07A7                     	;# 
  1400  07A9                     	;# 
  1401  07AA                     	;# 
  1402  0FE4                     	;# 
  1403  0FE5                     	;# 
  1404  0FE6                     	;# 
  1405  0FE7                     	;# 
  1406  0FE8                     	;# 
  1407  0FE9                     	;# 
  1408  0FEA                     	;# 
  1409  0FEB                     	;# 
  1410  0FED                     	;# 
  1411  0FEE                     	;# 
  1412  0FEF                     	;# 
  1413  0000                     	;# 
  1414  0001                     	;# 
  1415  0002                     	;# 
  1416  0003                     	;# 
  1417  0004                     	;# 
  1418  0005                     	;# 
  1419  0006                     	;# 
  1420  0007                     	;# 
  1421  0008                     	;# 
  1422  0009                     	;# 
  1423  000A                     	;# 
  1424  000B                     	;# 
  1425  000C                     	;# 
  1426  000D                     	;# 
  1427  000E                     	;# 
  1428  0010                     	;# 
  1429  0011                     	;# 
  1430  0012                     	;# 
  1431  0013                     	;# 
  1432  0015                     	;# 
  1433  0016                     	;# 
  1434  0016                     	;# 
  1435  0017                     	;# 
  1436  0018                     	;# 
  1437  0019                     	;# 
  1438  001A                     	;# 
  1439  001B                     	;# 
  1440  001C                     	;# 
  1441  001E                     	;# 
  1442  001F                     	;# 
  1443  008C                     	;# 
  1444  008D                     	;# 
  1445  008E                     	;# 
  1446  0090                     	;# 
  1447  0091                     	;# 
  1448  0092                     	;# 
  1449  0093                     	;# 
  1450  0095                     	;# 
  1451  0096                     	;# 
  1452  0097                     	;# 
  1453  0098                     	;# 
  1454  0099                     	;# 
  1455  009A                     	;# 
  1456  009B                     	;# 
  1457  009B                     	;# 
  1458  009C                     	;# 
  1459  009D                     	;# 
  1460  009E                     	;# 
  1461  010C                     	;# 
  1462  010D                     	;# 
  1463  010E                     	;# 
  1464  0110                     	;# 
  1465  0111                     	;# 
  1466  0112                     	;# 
  1467  0113                     	;# 
  1468  0114                     	;# 
  1469  0115                     	;# 
  1470  0116                     	;# 
  1471  0117                     	;# 
  1472  0118                     	;# 
  1473  0119                     	;# 
  1474  011A                     	;# 
  1475  011B                     	;# 
  1476  011D                     	;# 
  1477  018C                     	;# 
  1478  018D                     	;# 
  1479  0191                     	;# 
  1480  0191                     	;# 
  1481  0192                     	;# 
  1482  0193                     	;# 
  1483  0193                     	;# 
  1484  0193                     	;# 
  1485  0194                     	;# 
  1486  0195                     	;# 
  1487  0196                     	;# 
  1488  0199                     	;# 
  1489  019A                     	;# 
  1490  019B                     	;# 
  1491  019B                     	;# 
  1492  019B                     	;# 
  1493  019B                     	;# 
  1494  019C                     	;# 
  1495  019C                     	;# 
  1496  019D                     	;# 
  1497  019E                     	;# 
  1498  019F                     	;# 
  1499  020D                     	;# 
  1500  0210                     	;# 
  1501  0211                     	;# 
  1502  0212                     	;# 
  1503  0213                     	;# 
  1504  0214                     	;# 
  1505  0215                     	;# 
  1506  0215                     	;# 
  1507  0216                     	;# 
  1508  0217                     	;# 
  1509  0291                     	;# 
  1510  0291                     	;# 
  1511  0292                     	;# 
  1512  0293                     	;# 
  1513  0294                     	;# 
  1514  0295                     	;# 
  1515  0295                     	;# 
  1516  0296                     	;# 
  1517  0298                     	;# 
  1518  0298                     	;# 
  1519  0299                     	;# 
  1520  029A                     	;# 
  1521  029B                     	;# 
  1522  029C                     	;# 
  1523  029C                     	;# 
  1524  029D                     	;# 
  1525  029E                     	;# 
  1526  029F                     	;# 
  1527  0311                     	;# 
  1528  0311                     	;# 
  1529  0312                     	;# 
  1530  0313                     	;# 
  1531  0314                     	;# 
  1532  0315                     	;# 
  1533  0315                     	;# 
  1534  0316                     	;# 
  1535  0318                     	;# 
  1536  0318                     	;# 
  1537  0319                     	;# 
  1538  031A                     	;# 
  1539  031C                     	;# 
  1540  031C                     	;# 
  1541  031D                     	;# 
  1542  031E                     	;# 
  1543  0394                     	;# 
  1544  0395                     	;# 
  1545  0396                     	;# 
  1546  0415                     	;# 
  1547  0416                     	;# 
  1548  0417                     	;# 
  1549  041C                     	;# 
  1550  041D                     	;# 
  1551  041E                     	;# 
  1552  0791                     	;# 
  1553  0792                     	;# 
  1554  0793                     	;# 
  1555  0794                     	;# 
  1556  0795                     	;# 
  1557  0798                     	;# 
  1558  0799                     	;# 
  1559  07A0                     	;# 
  1560  07A1                     	;# 
  1561  07A3                     	;# 
  1562  07A4                     	;# 
  1563  07A6                     	;# 
  1564  07A7                     	;# 
  1565  07A9                     	;# 
  1566  07AA                     	;# 
  1567  0FE4                     	;# 
  1568  0FE5                     	;# 
  1569  0FE6                     	;# 
  1570  0FE7                     	;# 
  1571  0FE8                     	;# 
  1572  0FE9                     	;# 
  1573  0FEA                     	;# 
  1574  0FEB                     	;# 
  1575  0FED                     	;# 
  1576  0FEE                     	;# 
  1577  0FEF                     	;# 
  1578  0000                     	;# 
  1579  0001                     	;# 
  1580  0002                     	;# 
  1581  0003                     	;# 
  1582  0004                     	;# 
  1583  0005                     	;# 
  1584  0006                     	;# 
  1585  0007                     	;# 
  1586  0008                     	;# 
  1587  0009                     	;# 
  1588  000A                     	;# 
  1589  000B                     	;# 
  1590  000C                     	;# 
  1591  000D                     	;# 
  1592  000E                     	;# 
  1593  0010                     	;# 
  1594  0011                     	;# 
  1595  0012                     	;# 
  1596  0013                     	;# 
  1597  0015                     	;# 
  1598  0016                     	;# 
  1599  0016                     	;# 
  1600  0017                     	;# 
  1601  0018                     	;# 
  1602  0019                     	;# 
  1603  001A                     	;# 
  1604  001B                     	;# 
  1605  001C                     	;# 
  1606  001E                     	;# 
  1607  001F                     	;# 
  1608  008C                     	;# 
  1609  008D                     	;# 
  1610  008E                     	;# 
  1611  0090                     	;# 
  1612  0091                     	;# 
  1613  0092                     	;# 
  1614  0093                     	;# 
  1615  0095                     	;# 
  1616  0096                     	;# 
  1617  0097                     	;# 
  1618  0098                     	;# 
  1619  0099                     	;# 
  1620  009A                     	;# 
  1621  009B                     	;# 
  1622  009B                     	;# 
  1623  009C                     	;# 
  1624  009D                     	;# 
  1625  009E                     	;# 
  1626  010C                     	;# 
  1627  010D                     	;# 
  1628  010E                     	;# 
  1629  0110                     	;# 
  1630  0111                     	;# 
  1631  0112                     	;# 
  1632  0113                     	;# 
  1633  0114                     	;# 
  1634  0115                     	;# 
  1635  0116                     	;# 
  1636  0117                     	;# 
  1637  0118                     	;# 
  1638  0119                     	;# 
  1639  011A                     	;# 
  1640  011B                     	;# 
  1641  011D                     	;# 
  1642  018C                     	;# 
  1643  018D                     	;# 
  1644  0191                     	;# 
  1645  0191                     	;# 
  1646  0192                     	;# 
  1647  0193                     	;# 
  1648  0193                     	;# 
  1649  0193                     	;# 
  1650  0194                     	;# 
  1651  0195                     	;# 
  1652  0196                     	;# 
  1653  0199                     	;# 
  1654  019A                     	;# 
  1655  019B                     	;# 
  1656  019B                     	;# 
  1657  019B                     	;# 
  1658  019B                     	;# 
  1659  019C                     	;# 
  1660  019C                     	;# 
  1661  019D                     	;# 
  1662  019E                     	;# 
  1663  019F                     	;# 
  1664  020D                     	;# 
  1665  0210                     	;# 
  1666  0211                     	;# 
  1667  0212                     	;# 
  1668  0213                     	;# 
  1669  0214                     	;# 
  1670  0215                     	;# 
  1671  0215                     	;# 
  1672  0216                     	;# 
  1673  0217                     	;# 
  1674  0291                     	;# 
  1675  0291                     	;# 
  1676  0292                     	;# 
  1677  0293                     	;# 
  1678  0294                     	;# 
  1679  0295                     	;# 
  1680  0295                     	;# 
  1681  0296                     	;# 
  1682  0298                     	;# 
  1683  0298                     	;# 
  1684  0299                     	;# 
  1685  029A                     	;# 
  1686  029B                     	;# 
  1687  029C                     	;# 
  1688  029C                     	;# 
  1689  029D                     	;# 
  1690  029E                     	;# 
  1691  029F                     	;# 
  1692  0311                     	;# 
  1693  0311                     	;# 
  1694  0312                     	;# 
  1695  0313                     	;# 
  1696  0314                     	;# 
  1697  0315                     	;# 
  1698  0315                     	;# 
  1699  0316                     	;# 
  1700  0318                     	;# 
  1701  0318                     	;# 
  1702  0319                     	;# 
  1703  031A                     	;# 
  1704  031C                     	;# 
  1705  031C                     	;# 
  1706  031D                     	;# 
  1707  031E                     	;# 
  1708  0394                     	;# 
  1709  0395                     	;# 
  1710  0396                     	;# 
  1711  0415                     	;# 
  1712  0416                     	;# 
  1713  0417                     	;# 
  1714  041C                     	;# 
  1715  041D                     	;# 
  1716  041E                     	;# 
  1717  0791                     	;# 
  1718  0792                     	;# 
  1719  0793                     	;# 
  1720  0794                     	;# 
  1721  0795                     	;# 
  1722  0798                     	;# 
  1723  0799                     	;# 
  1724  07A0                     	;# 
  1725  07A1                     	;# 
  1726  07A3                     	;# 
  1727  07A4                     	;# 
  1728  07A6                     	;# 
  1729  07A7                     	;# 
  1730  07A9                     	;# 
  1731  07AA                     	;# 
  1732  0FE4                     	;# 
  1733  0FE5                     	;# 
  1734  0FE6                     	;# 
  1735  0FE7                     	;# 
  1736  0FE8                     	;# 
  1737  0FE9                     	;# 
  1738  0FEA                     	;# 
  1739  0FEB                     	;# 
  1740  0FED                     	;# 
  1741  0FEE                     	;# 
  1742  0FEF                     	;_UbxReceiver
  1743                           
  1744                           	psect	idataBANK1
  1745  08F4                     __pidataBANK1:	
  1746                           
  1747                           ;initializer for eeprom_write_defaults@F3293
  1748  08F4  3400               	retlw	0
  1749  08F5  34FF               	retlw	255
  1750  08F6  3400               	retlw	0
  1751  08F7  3400               	retlw	0
  1752                           
  1753                           ;initializer for _ubx_poll_status
  1754  08F8  3408               	retlw	8
  1755  08F9  34B5               	retlw	181
  1756  08FA  3462               	retlw	98
  1757  08FB  3401               	retlw	1
  1758  08FC  3403               	retlw	3
  1759  08FD  3400               	retlw	0
  1760  08FE  3400               	retlw	0
  1761  08FF  3404               	retlw	4
  1762  0900  340D               	retlw	13
  1763                           
  1764                           	psect	idataBANK2
  1765  0E0D                     __pidataBANK2:	
  1766                           
  1767                           ;initializer for _ubx_poll_posllr
  1768  0E0D  3408               	retlw	8
  1769  0E0E  34B5               	retlw	181
  1770  0E0F  3462               	retlw	98
  1771  0E10  3401               	retlw	1
  1772  0E11  3402               	retlw	2
  1773  0E12  3400               	retlw	0
  1774  0E13  3400               	retlw	0
  1775  0E14  3403               	retlw	3
  1776  0E15  340A               	retlw	10
  1777                           
  1778                           ;initializer for _data
  1779  0E16  3410               	retlw	16
  1780  0E17  3411               	retlw	17
  1781  0E18  3412               	retlw	18
  1782  0E19  3413               	retlw	19
  1783  0E1A  3414               	retlw	20
  1784  0E1B  3415               	retlw	21
  1785  0E1C  3416               	retlw	22
  1786  0E1D  3417               	retlw	23
  1787                           
  1788                           ;initializer for _ubx_disable_gxgga
  1789  0E1E  340B               	retlw	11
  1790  0E1F  34B5               	retlw	181
  1791  0E20  3462               	retlw	98
  1792  0E21  3406               	retlw	6
  1793  0E22  3401               	retlw	1
  1794  0E23  3403               	retlw	3
  1795  0E24  3400               	retlw	0
  1796  0E25  34F0               	retlw	240
  1797  0E26  3400               	retlw	0
  1798  0E27  3400               	retlw	0
  1799  0E28  34FA               	retlw	250
  1800  0E29  340F               	retlw	15
  1801                           
  1802                           ;initializer for _ubx_disable_gxgll
  1803  0E2A  340B               	retlw	11
  1804  0E2B  34B5               	retlw	181
  1805  0E2C  3462               	retlw	98
  1806  0E2D  3406               	retlw	6
  1807  0E2E  3401               	retlw	1
  1808  0E2F  3403               	retlw	3
  1809  0E30  3400               	retlw	0
  1810  0E31  34F0               	retlw	240
  1811  0E32  3401               	retlw	1
  1812  0E33  3400               	retlw	0
  1813  0E34  34FB               	retlw	251
  1814  0E35  3411               	retlw	17
  1815                           
  1816                           ;initializer for _ubx_disable_gxgsa
  1817  0E36  340B               	retlw	11
  1818  0E37  34B5               	retlw	181
  1819  0E38  3462               	retlw	98
  1820  0E39  3406               	retlw	6
  1821  0E3A  3401               	retlw	1
  1822  0E3B  3403               	retlw	3
  1823  0E3C  3400               	retlw	0
  1824  0E3D  34F0               	retlw	240
  1825  0E3E  3402               	retlw	2
  1826  0E3F  3400               	retlw	0
  1827  0E40  34FC               	retlw	252
  1828  0E41  3413               	retlw	19
  1829                           
  1830                           ;initializer for _ubx_disable_gxgsv
  1831  0E42  340B               	retlw	11
  1832  0E43  34B5               	retlw	181
  1833  0E44  3462               	retlw	98
  1834  0E45  3406               	retlw	6
  1835  0E46  3401               	retlw	1
  1836  0E47  3403               	retlw	3
  1837  0E48  3400               	retlw	0
  1838  0E49  34F0               	retlw	240
  1839  0E4A  3403               	retlw	3
  1840  0E4B  3400               	retlw	0
  1841  0E4C  34FD               	retlw	253
  1842  0E4D  3415               	retlw	21
  1843                           
  1844                           ;initializer for _ubx_poll_pvt
  1845  0E4E  3408               	retlw	8
  1846  0E4F  34B5               	retlw	181
  1847  0E50  3462               	retlw	98
  1848  0E51  3401               	retlw	1
  1849  0E52  3407               	retlw	7
  1850  0E53  3400               	retlw	0
  1851  0E54  3400               	retlw	0
  1852  0E55  3408               	retlw	8
  1853  0E56  3419               	retlw	25
  1854                           
  1855                           	psect	idataBANK3
  1856  0AEA                     __pidataBANK3:	
  1857                           
  1858                           ;initializer for _ubx_nmea_disable_ack
  1859  0AEA  34B5               	retlw	181
  1860  0AEB  3462               	retlw	98
  1861  0AEC  3405               	retlw	5
  1862  0AED  3401               	retlw	1
  1863  0AEE  3402               	retlw	2
  1864  0AEF  3400               	retlw	0
  1865  0AF0  3406               	retlw	6
  1866  0AF1  3401               	retlw	1
  1867  0AF2  340F               	retlw	15
  1868  0AF3  3438               	retlw	56
  1869                           
  1870                           ;initializer for _ubx_disable_gxrmc
  1871  0AF4  340B               	retlw	11
  1872  0AF5  34B5               	retlw	181
  1873  0AF6  3462               	retlw	98
  1874  0AF7  3406               	retlw	6
  1875  0AF8  3401               	retlw	1
  1876  0AF9  3403               	retlw	3
  1877  0AFA  3400               	retlw	0
  1878  0AFB  34F0               	retlw	240
  1879  0AFC  3404               	retlw	4
  1880  0AFD  3400               	retlw	0
  1881  0AFE  34FE               	retlw	254
  1882  0AFF  3417               	retlw	23
  1883                           
  1884                           ;initializer for _ubx_disable_gxvtg
  1885  0B00  340B               	retlw	11
  1886  0B01  34B5               	retlw	181
  1887  0B02  3462               	retlw	98
  1888  0B03  3406               	retlw	6
  1889  0B04  3401               	retlw	1
  1890  0B05  3403               	retlw	3
  1891  0B06  3400               	retlw	0
  1892  0B07  34F0               	retlw	240
  1893  0B08  3405               	retlw	5
  1894  0B09  3400               	retlw	0
  1895  0B0A  34FF               	retlw	255
  1896  0B0B  3419               	retlw	25
  1897                           
  1898                           	psect	stringtext
  1899  0082                     __pstringtext:	
  1900  0082                     _dpowers:	
  1901  0082  3401               	retlw	1
  1902  0083  3400               	retlw	0
  1903  0084  340A               	retlw	10
  1904  0085  3400               	retlw	0
  1905  0086  3464               	retlw	100
  1906  0087  3400               	retlw	0
  1907  0088  34E8               	retlw	232
  1908  0089  3403               	retlw	3
  1909  008A  3410               	retlw	16
  1910  008B  3427               	retlw	39
  1911  008C                     __end_of_dpowers:	
  1912  000C                     _PORTA	set	12
  1913  000D                     _PORTB	set	13
  1914  000E                     _PORTC	set	14
  1915  001B                     _PR2	set	27
  1916  001C                     _T2CON	set	28
  1917  0015                     _TMR0	set	21
  1918  005F                     _GIE	set	95
  1919  005E                     _PEIE	set	94
  1920  008D                     _RCIF	set	141
  1921  005D                     _TMR0IE	set	93
  1922  005A                     _TMR0IF	set	90
  1923  00E2                     _TMR2ON	set	226
  1924  0099                     _OSCCON	set	153
  1925  008C                     _TRISA	set	140
  1926  008D                     _TRISB	set	141
  1927  008E                     _TRISC	set	142
  1928  0097                     _WDTCON	set	151
  1929  04A8                     _PS0	set	1192
  1930  04A9                     _PS1	set	1193
  1931  04AA                     _PS2	set	1194
  1932  04AB                     _PSA	set	1195
  1933  048D                     _RCIE	set	1165
  1934  04AD                     _TMR0CS	set	1197
  1935  04AC                     _TMR0SE	set	1196
  1936  0111                     _CM1CON0	set	273
  1937  0112                     _CM1CON1	set	274
  1938  0117                     _FVRCON	set	279
  1939  010C                     _LATA	set	268
  1940  010D                     _LATB	set	269
  1941  08BE                     _FVRRDY	set	2238
  1942  018C                     _ANSELA	set	396
  1943  0199                     _RCREG	set	409
  1944  019B                     _SP1BRGL	set	411
  1945  019A                     _TXREG	set	410
  1946  0CFB                     _BRG16	set	3323
  1947  0CF2                     _BRGH	set	3314
  1948  0CEC                     _CREN	set	3308
  1949  0CEF                     _SPEN	set	3311
  1950  0CF4                     _SYNC	set	3316
  1951  0CF1                     _TRMT	set	3313
  1952  0CF5                     _TXEN	set	3317
  1953  0212                     _SSPADD	set	530
  1954  0211                     _SSPBUF	set	529
  1955  0215                     _SSPCON1	set	533
  1956  0214                     _SSPSTAT	set	532
  1957  10B5                     _ACKDT	set	4277
  1958  10B4                     _ACKEN	set	4276
  1959  10B6                     _ACKSTAT	set	4278
  1960  10B2                     _PEN	set	4274
  1961  10B3                     _RCEN	set	4275
  1962  10A2                     _R_nW	set	4258
  1963  10B0                     _SEN	set	4272
  1964  0293                     _CCP1CON	set	659
  1965  029A                     _CCP2CON	set	666
  1966  0291                     _CCPR1L	set	657
  1967  0298                     _CCPR2L	set	664
  1968  008C                     STR_17:	
  1969  008C  3457               	retlw	87	;'W'
  1970  008D  3461               	retlw	97	;'a'
  1971  008E  3469               	retlw	105	;'i'
  1972  008F  3474               	retlw	116	;'t'
  1973  0090  3469               	retlw	105	;'i'
  1974  0091  346E               	retlw	110	;'n'
  1975  0092  3467               	retlw	103	;'g'
  1976  0093  3420               	retlw	32	;' '
  1977  0094  3466               	retlw	102	;'f'
  1978  0095  346F               	retlw	111	;'o'
  1979  0096  3472               	retlw	114	;'r'
  1980  0097  3420               	retlw	32	;' '
  1981  0098  344E               	retlw	78	;'N'
  1982  0099  3452               	retlw	82	;'R'
  1983  009A  3446               	retlw	70	;'F'
  1984  009B  3435               	retlw	53	;'5'
  1985  009C  3432               	retlw	50	;'2'
  1986  009D  3420               	retlw	32	;' '
  1987  009E  3474               	retlw	116	;'t'
  1988  009F  346F               	retlw	111	;'o'
  1989  00A0  3420               	retlw	32	;' '
  1990  00A1  3463               	retlw	99	;'c'
  1991  00A2  346F               	retlw	111	;'o'
  1992  00A3  346D               	retlw	109	;'m'
  1993  00A4  3470               	retlw	112	;'p'
  1994  00A5  346C               	retlw	108	;'l'
  1995  00A6  3465               	retlw	101	;'e'
  1996  00A7  3474               	retlw	116	;'t'
  1997  00A8  3465               	retlw	101	;'e'
  1998  00A9  3420               	retlw	32	;' '
  1999  00AA  3427               	retlw	39	;'''
  2000  00AB  3433               	retlw	51	;'3'
  2001  00AC  3447               	retlw	71	;'G'
  2002  00AD  344E               	retlw	78	;'N'
  2003  00AE  3441               	retlw	65	;'A'
  2004  00AF  3456               	retlw	86	;'V'
  2005  00B0  3427               	retlw	39	;'''
  2006  00B1  3420               	retlw	32	;' '
  2007  00B2  3463               	retlw	99	;'c'
  2008  00B3  346F               	retlw	111	;'o'
  2009  00B4  3464               	retlw	100	;'d'
  2010  00B5  3465               	retlw	101	;'e'
  2011  00B6  342E               	retlw	46	;'.'
  2012  00B7  342E               	retlw	46	;'.'
  2013  00B8  342E               	retlw	46	;'.'
  2014  00B9  340D               	retlw	13
  2015  00BA  340A               	retlw	10
  2016  00BB  3400               	retlw	0
  2017  00BC                     STR_18:	
  2018  00BC  342E               	retlw	46	;'.'
  2019  00BD  342E               	retlw	46	;'.'
  2020  00BE  342E               	retlw	46	;'.'
  2021  00BF  3420               	retlw	32	;' '
  2022  00C0  344E               	retlw	78	;'N'
  2023  00C1  3452               	retlw	82	;'R'
  2024  00C2  3446               	retlw	70	;'F'
  2025  00C3  3435               	retlw	53	;'5'
  2026  00C4  3432               	retlw	50	;'2'
  2027  00C5  3420               	retlw	32	;' '
  2028  00C6  3468               	retlw	104	;'h'
  2029  00C7  3461               	retlw	97	;'a'
  2030  00C8  3473               	retlw	115	;'s'
  2031  00C9  3420               	retlw	32	;' '
  2032  00CA  3463               	retlw	99	;'c'
  2033  00CB  346F               	retlw	111	;'o'
  2034  00CC  346D               	retlw	109	;'m'
  2035  00CD  3470               	retlw	112	;'p'
  2036  00CE  346C               	retlw	108	;'l'
  2037  00CF  3465               	retlw	101	;'e'
  2038  00D0  3474               	retlw	116	;'t'
  2039  00D1  3465               	retlw	101	;'e'
  2040  00D2  3464               	retlw	100	;'d'
  2041  00D3  3420               	retlw	32	;' '
  2042  00D4  3427               	retlw	39	;'''
  2043  00D5  3433               	retlw	51	;'3'
  2044  00D6  3447               	retlw	71	;'G'
  2045  00D7  344E               	retlw	78	;'N'
  2046  00D8  3441               	retlw	65	;'A'
  2047  00D9  3456               	retlw	86	;'V'
  2048  00DA  3427               	retlw	39	;'''
  2049  00DB  3420               	retlw	32	;' '
  2050  00DC  3463               	retlw	99	;'c'
  2051  00DD  346F               	retlw	111	;'o'
  2052  00DE  3464               	retlw	100	;'d'
  2053  00DF  3465               	retlw	101	;'e'
  2054  00E0  340D               	retlw	13
  2055  00E1  340A               	retlw	10
  2056  00E2  3400               	retlw	0
  2057  00E3                     STR_13:	
  2058  00E3  3452               	retlw	82	;'R'
  2059  00E4  3465               	retlw	101	;'e'
  2060  00E5  3473               	retlw	115	;'s'
  2061  00E6  3465               	retlw	101	;'e'
  2062  00E7  3474               	retlw	116	;'t'
  2063  00E8  3474               	retlw	116	;'t'
  2064  00E9  3469               	retlw	105	;'i'
  2065  00EA  346E               	retlw	110	;'n'
  2066  00EB  3467               	retlw	103	;'g'
  2067  00EC  3420               	retlw	32	;' '
  2068  00ED  3469               	retlw	105	;'i'
  2069  00EE  346E               	retlw	110	;'n'
  2070  00EF  3473               	retlw	115	;'s'
  2071  00F0  3474               	retlw	116	;'t'
  2072  00F1  3472               	retlw	114	;'r'
  2073  00F2  3475               	retlw	117	;'u'
  2074  00F3  3463               	retlw	99	;'c'
  2075  00F4  3474               	retlw	116	;'t'
  2076  00F5  3469               	retlw	105	;'i'
  2077  00F6  346F               	retlw	111	;'o'
  2078  00F7  346E               	retlw	110	;'n'
  2079  00F8  3420               	retlw	32	;' '
  2080  00F9  3470               	retlw	112	;'p'
  2081  00FA  3474               	retlw	116	;'t'
  2082  00FB  3472               	retlw	114	;'r'
  2083  00FC  3420               	retlw	32	;' '
  2084  00FD  3474               	retlw	116	;'t'
  2085  00FE  346F               	retlw	111	;'o'
  2086  00FF  3420               	retlw	32	;' '
  2087  0100  3430               	retlw	48	;'0'
  2088  0101  3478               	retlw	120	;'x'
  2089  0102  3435               	retlw	53	;'5'
  2090  0103  3430               	retlw	48	;'0'
  2091  0104  342E               	retlw	46	;'.'
  2092  0105  340D               	retlw	13
  2093  0106  340A               	retlw	10
  2094  0107  3400               	retlw	0
  2095  0108                     STR_24:	
  2096  0108  3447               	retlw	71	;'G'
  2097  0109  3465               	retlw	101	;'e'
  2098  010A  3474               	retlw	116	;'t'
  2099  010B  3474               	retlw	116	;'t'
  2100  010C  3469               	retlw	105	;'i'
  2101  010D  346E               	retlw	110	;'n'
  2102  010E  3467               	retlw	103	;'g'
  2103  010F  3420               	retlw	32	;' '
  2104  0110  346E               	retlw	110	;'n'
  2105  0111  3465               	retlw	101	;'e'
  2106  0112  3478               	retlw	120	;'x'
  2107  0113  3474               	retlw	116	;'t'
  2108  0114  3420               	retlw	32	;' '
  2109  0115  3443               	retlw	67	;'C'
  2110  0116  3454               	retlw	84	;'T'
  2111  0117  3449               	retlw	73	;'I'
  2112  0118  3420               	retlw	32	;' '
  2113  0119  3469               	retlw	105	;'i'
  2114  011A  346E               	retlw	110	;'n'
  2115  011B  3473               	retlw	115	;'s'
  2116  011C  3474               	retlw	116	;'t'
  2117  011D  3472               	retlw	114	;'r'
  2118  011E  3475               	retlw	117	;'u'
  2119  011F  3463               	retlw	99	;'c'
  2120  0120  3474               	retlw	116	;'t'
  2121  0121  3469               	retlw	105	;'i'
  2122  0122  346F               	retlw	111	;'o'
  2123  0123  346E               	retlw	110	;'n'
  2124  0124  342E               	retlw	46	;'.'
  2125  0125  342E               	retlw	46	;'.'
  2126  0126  342E               	retlw	46	;'.'
  2127  0127  340D               	retlw	13
  2128  0128  340A               	retlw	10
  2129  0129  3400               	retlw	0
  2130  012A                     STR_11:	
  2131  012A  3457               	retlw	87	;'W'
  2132  012B  3461               	retlw	97	;'a'
  2133  012C  3469               	retlw	105	;'i'
  2134  012D  3474               	retlw	116	;'t'
  2135  012E  3469               	retlw	105	;'i'
  2136  012F  346E               	retlw	110	;'n'
  2137  0130  3467               	retlw	103	;'g'
  2138  0131  3420               	retlw	32	;' '
  2139  0132  3466               	retlw	102	;'f'
  2140  0133  346F               	retlw	111	;'o'
  2141  0134  3472               	retlw	114	;'r'
  2142  0135  3420               	retlw	32	;' '
  2143  0136  344E               	retlw	78	;'N'
  2144  0137  3452               	retlw	82	;'R'
  2145  0138  3446               	retlw	70	;'F'
  2146  0139  3435               	retlw	53	;'5'
  2147  013A  3432               	retlw	50	;'2'
  2148  013B  3420               	retlw	32	;' '
  2149  013C  3474               	retlw	116	;'t'
  2150  013D  346F               	retlw	111	;'o'
  2151  013E  3420               	retlw	32	;' '
  2152  013F  3466               	retlw	102	;'f'
  2153  0140  3469               	retlw	105	;'i'
  2154  0141  346E               	retlw	110	;'n'
  2155  0142  3469               	retlw	105	;'i'
  2156  0143  3473               	retlw	115	;'s'
  2157  0144  3468               	retlw	104	;'h'
  2158  0145  342E               	retlw	46	;'.'
  2159  0146  342E               	retlw	46	;'.'
  2160  0147  342E               	retlw	46	;'.'
  2161  0148  340D               	retlw	13
  2162  0149  340A               	retlw	10
  2163  014A  3400               	retlw	0
  2164  014B                     STR_14:	
  2165  014B  3452               	retlw	82	;'R'
  2166  014C  3475               	retlw	117	;'u'
  2167  014D  346E               	retlw	110	;'n'
  2168  014E  346E               	retlw	110	;'n'
  2169  014F  3469               	retlw	105	;'i'
  2170  0150  346E               	retlw	110	;'n'
  2171  0151  3467               	retlw	103	;'g'
  2172  0152  3420               	retlw	32	;' '
  2173  0153  3469               	retlw	105	;'i'
  2174  0154  346E               	retlw	110	;'n'
  2175  0155  3473               	retlw	115	;'s'
  2176  0156  3474               	retlw	116	;'t'
  2177  0157  3472               	retlw	114	;'r'
  2178  0158  3475               	retlw	117	;'u'
  2179  0159  3463               	retlw	99	;'c'
  2180  015A  3474               	retlw	116	;'t'
  2181  015B  3469               	retlw	105	;'i'
  2182  015C  346F               	retlw	111	;'o'
  2183  015D  346E               	retlw	110	;'n'
  2184  015E  3420               	retlw	32	;' '
  2185  015F  3427               	retlw	39	;'''
  2186  0160  3433               	retlw	51	;'3'
  2187  0161  3447               	retlw	71	;'G'
  2188  0162  344E               	retlw	78	;'N'
  2189  0163  3441               	retlw	65	;'A'
  2190  0164  3456               	retlw	86	;'V'
  2191  0165  3427               	retlw	39	;'''
  2192  0166  342E               	retlw	46	;'.'
  2193  0167  340D               	retlw	13
  2194  0168  340A               	retlw	10
  2195  0169  3400               	retlw	0
  2196  016A                     STR_22:	
  2197  016A  3453               	retlw	83	;'S'
  2198  016B  3474               	retlw	116	;'t'
  2199  016C  3461               	retlw	97	;'a'
  2200  016D  3472               	retlw	114	;'r'
  2201  016E  3474               	retlw	116	;'t'
  2202  016F  3469               	retlw	105	;'i'
  2203  0170  346E               	retlw	110	;'n'
  2204  0171  3467               	retlw	103	;'g'
  2205  0172  3420               	retlw	32	;' '
  2206  0173  3443               	retlw	67	;'C'
  2207  0174  3454               	retlw	84	;'T'
  2208  0175  3444               	retlw	68	;'D'
  2209  0176  344E               	retlw	78	;'N'
  2210  0177  3420               	retlw	32	;' '
  2211  0178  3474               	retlw	116	;'t'
  2212  0179  3469               	retlw	105	;'i'
  2213  017A  346D               	retlw	109	;'m'
  2214  017B  3465               	retlw	101	;'e'
  2215  017C  3472               	retlw	114	;'r'
  2216  017D  3420               	retlw	32	;' '
  2217  017E  3461               	retlw	97	;'a'
  2218  017F  3474               	retlw	116	;'t'
  2219  0180  3420               	retlw	32	;' '
  2220  0181  3432               	retlw	50	;'2'
  2221  0182  3435               	retlw	53	;'5'
  2222  0183  3435               	retlw	53	;'5'
  2223  0184  342E               	retlw	46	;'.'
  2224  0185  340D               	retlw	13
  2225  0186  340A               	retlw	10
  2226  0187  3400               	retlw	0
  2227  0188                     STR_25:	
  2228  0188  3445               	retlw	69	;'E'
  2229  0189  346E               	retlw	110	;'n'
  2230  018A  3464               	retlw	100	;'d'
  2231  018B  3420               	retlw	32	;' '
  2232  018C  346F               	retlw	111	;'o'
  2233  018D  3466               	retlw	102	;'f'
  2234  018E  3420               	retlw	32	;' '
  2235  018F  3469               	retlw	105	;'i'
  2236  0190  346E               	retlw	110	;'n'
  2237  0191  3473               	retlw	115	;'s'
  2238  0192  3474               	retlw	116	;'t'
  2239  0193  3472               	retlw	114	;'r'
  2240  0194  3475               	retlw	117	;'u'
  2241  0195  3463               	retlw	99	;'c'
  2242  0196  3474               	retlw	116	;'t'
  2243  0197  3469               	retlw	105	;'i'
  2244  0198  346F               	retlw	111	;'o'
  2245  0199  346E               	retlw	110	;'n'
  2246  019A  3420               	retlw	32	;' '
  2247  019B  3470               	retlw	112	;'p'
  2248  019C  3461               	retlw	97	;'a'
  2249  019D  3474               	retlw	116	;'t'
  2250  019E  3474               	retlw	116	;'t'
  2251  019F  3465               	retlw	101	;'e'
  2252  01A0  3472               	retlw	114	;'r'
  2253  01A1  346E               	retlw	110	;'n'
  2254  01A2  342E               	retlw	46	;'.'
  2255  01A3  340D               	retlw	13
  2256  01A4  340A               	retlw	10
  2257  01A5  3400               	retlw	0
  2258  01A6                     STR_23:	
  2259  01A6  3453               	retlw	83	;'S'
  2260  01A7  3474               	retlw	116	;'t'
  2261  01A8  3461               	retlw	97	;'a'
  2262  01A9  3472               	retlw	114	;'r'
  2263  01AA  3474               	retlw	116	;'t'
  2264  01AB  3469               	retlw	105	;'i'
  2265  01AC  346E               	retlw	110	;'n'
  2266  01AD  3467               	retlw	103	;'g'
  2267  01AE  3420               	retlw	32	;' '
  2268  01AF  3443               	retlw	67	;'C'
  2269  01B0  3454               	retlw	84	;'T'
  2270  01B1  3444               	retlw	68	;'D'
  2271  01B2  344E               	retlw	78	;'N'
  2272  01B3  3420               	retlw	32	;' '
  2273  01B4  3474               	retlw	116	;'t'
  2274  01B5  3469               	retlw	105	;'i'
  2275  01B6  346D               	retlw	109	;'m'
  2276  01B7  3465               	retlw	101	;'e'
  2277  01B8  3472               	retlw	114	;'r'
  2278  01B9  3420               	retlw	32	;' '
  2279  01BA  3461               	retlw	97	;'a'
  2280  01BB  3474               	retlw	116	;'t'
  2281  01BC  3420               	retlw	32	;' '
  2282  01BD  3472               	retlw	114	;'r'
  2283  01BE  342E               	retlw	46	;'.'
  2284  01BF  340D               	retlw	13
  2285  01C0  340A               	retlw	10
  2286  01C1  3400               	retlw	0
  2287  01C2                     STR_1:	
  2288  01C2  3454               	retlw	84	;'T'
  2289  01C3  3468               	retlw	104	;'h'
  2290  01C4  3469               	retlw	105	;'i'
  2291  01C5  3473               	retlw	115	;'s'
  2292  01C6  3420               	retlw	32	;' '
  2293  01C7  3469               	retlw	105	;'i'
  2294  01C8  3473               	retlw	115	;'s'
  2295  01C9  3420               	retlw	32	;' '
  2296  01CA  3474               	retlw	116	;'t'
  2297  01CB  3468               	retlw	104	;'h'
  2298  01CC  3465               	retlw	101	;'e'
  2299  01CD  3420               	retlw	32	;' '
  2300  01CE  3466               	retlw	102	;'f'
  2301  01CF  3469               	retlw	105	;'i'
  2302  01D0  3472               	retlw	114	;'r'
  2303  01D1  3473               	retlw	115	;'s'
  2304  01D2  3474               	retlw	116	;'t'
  2305  01D3  3420               	retlw	32	;' '
  2306  01D4  3470               	retlw	112	;'p'
  2307  01D5  3477               	retlw	119	;'w'
  2308  01D6  3472               	retlw	114	;'r'
  2309  01D7  3475               	retlw	117	;'u'
  2310  01D8  3470               	retlw	112	;'p'
  2311  01D9  342E               	retlw	46	;'.'
  2312  01DA  340D               	retlw	13
  2313  01DB  340A               	retlw	10
  2314  01DC  3400               	retlw	0
  2315  01DD                     STR_15:	
  2316  01DD  3457               	retlw	87	;'W'
  2317  01DE  3461               	retlw	97	;'a'
  2318  01DF  3469               	retlw	105	;'i'
  2319  01E0  3474               	retlw	116	;'t'
  2320  01E1  3469               	retlw	105	;'i'
  2321  01E2  346E               	retlw	110	;'n'
  2322  01E3  3467               	retlw	103	;'g'
  2323  01E4  3420               	retlw	32	;' '
  2324  01E5  3466               	retlw	102	;'f'
  2325  01E6  346F               	retlw	111	;'o'
  2326  01E7  3472               	retlw	114	;'r'
  2327  01E8  3420               	retlw	32	;' '
  2328  01E9  3447               	retlw	71	;'G'
  2329  01EA  3450               	retlw	80	;'P'
  2330  01EB  3453               	retlw	83	;'S'
  2331  01EC  3420               	retlw	32	;' '
  2332  01ED  3466               	retlw	102	;'f'
  2333  01EE  3469               	retlw	105	;'i'
  2334  01EF  3478               	retlw	120	;'x'
  2335  01F0  342E               	retlw	46	;'.'
  2336  01F1  342E               	retlw	46	;'.'
  2337  01F2  342E               	retlw	46	;'.'
  2338  01F3  340D               	retlw	13
  2339  01F4  340A               	retlw	10
  2340  01F5  3400               	retlw	0
  2341  01F6                     STR_12:	
  2342  01F6  342E               	retlw	46	;'.'
  2343  01F7  342E               	retlw	46	;'.'
  2344  01F8  342E               	retlw	46	;'.'
  2345  01F9  344E               	retlw	78	;'N'
  2346  01FA  3452               	retlw	82	;'R'
  2347  01FB  3446               	retlw	70	;'F'
  2348  01FC  3435               	retlw	53	;'5'
  2349  01FD  3432               	retlw	50	;'2'
  2350  01FE  3420               	retlw	32	;' '
  2351  01FF  3468               	retlw	104	;'h'
  2352  0200  3461               	retlw	97	;'a'
  2353  0201  3473               	retlw	115	;'s'
  2354  0202  3420               	retlw	32	;' '
  2355  0203  3466               	retlw	102	;'f'
  2356  0204  3469               	retlw	105	;'i'
  2357  0205  346E               	retlw	110	;'n'
  2358  0206  3469               	retlw	105	;'i'
  2359  0207  3473               	retlw	115	;'s'
  2360  0208  3468               	retlw	104	;'h'
  2361  0209  3465               	retlw	101	;'e'
  2362  020A  3464               	retlw	100	;'d'
  2363  020B  342E               	retlw	46	;'.'
  2364  020C  340D               	retlw	13
  2365  020D  340A               	retlw	10
  2366  020E  3400               	retlw	0
  2367  020F                     STR_20:	
  2368  020F  3450               	retlw	80	;'P'
  2369  0210  3472               	retlw	114	;'r'
  2370  0211  3465               	retlw	101	;'e'
  2371  0212  3470               	retlw	112	;'p'
  2372  0213  3461               	retlw	97	;'a'
  2373  0214  3472               	retlw	114	;'r'
  2374  0215  3469               	retlw	105	;'i'
  2375  0216  346E               	retlw	110	;'n'
  2376  0217  3467               	retlw	103	;'g'
  2377  0218  3420               	retlw	32	;' '
  2378  0219  3474               	retlw	116	;'t'
  2379  021A  346F               	retlw	111	;'o'
  2380  021B  3420               	retlw	32	;' '
  2381  021C  3473               	retlw	115	;'s'
  2382  021D  346C               	retlw	108	;'l'
  2383  021E  3465               	retlw	101	;'e'
  2384  021F  3465               	retlw	101	;'e'
  2385  0220  3470               	retlw	112	;'p'
  2386  0221  3420               	retlw	32	;' '
  2387  0222  3477               	retlw	119	;'w'
  2388  0223  3469               	retlw	105	;'i'
  2389  0224  3474               	retlw	116	;'t'
  2390  0225  3468               	retlw	104	;'h'
  2391  0226  3400               	retlw	0
  2392  0227                     STR_4:	
  2393  0227  3445               	retlw	69	;'E'
  2394  0228  346E               	retlw	110	;'n'
  2395  0229  3474               	retlw	116	;'t'
  2396  022A  3465               	retlw	101	;'e'
  2397  022B  3472               	retlw	114	;'r'
  2398  022C  3469               	retlw	105	;'i'
  2399  022D  346E               	retlw	110	;'n'
  2400  022E  3467               	retlw	103	;'g'
  2401  022F  3420               	retlw	32	;' '
  2402  0230  3443               	retlw	67	;'C'
  2403  0231  3454               	retlw	84	;'T'
  2404  0232  3449               	retlw	73	;'I'
  2405  0233  3420               	retlw	32	;' '
  2406  0234  346D               	retlw	109	;'m'
  2407  0235  346F               	retlw	111	;'o'
  2408  0236  3464               	retlw	100	;'d'
  2409  0237  3465               	retlw	101	;'e'
  2410  0238  342E               	retlw	46	;'.'
  2411  0239  340D               	retlw	13
  2412  023A  340A               	retlw	10
  2413  023B  3400               	retlw	0
  2414  023C                     STR_5:	
  2415  023C  3452               	retlw	82	;'R'
  2416  023D  3465               	retlw	101	;'e'
  2417  023E  3461               	retlw	97	;'a'
  2418  023F  3463               	retlw	99	;'c'
  2419  0240  3468               	retlw	104	;'h'
  2420  0241  3465               	retlw	101	;'e'
  2421  0242  3464               	retlw	100	;'d'
  2422  0243  3420               	retlw	32	;' '
  2423  0244  3445               	retlw	69	;'E'
  2424  0245  346E               	retlw	110	;'n'
  2425  0246  3464               	retlw	100	;'d'
  2426  0247  342E               	retlw	46	;'.'
  2427  0248  342E               	retlw	46	;'.'
  2428  0249  342E               	retlw	46	;'.'
  2429  024A  343F               	retlw	63	;'?'
  2430  024B  343F               	retlw	63	;'?'
  2431  024C  343F               	retlw	63	;'?'
  2432  024D  343F               	retlw	63	;'?'
  2433  024E  340D               	retlw	13
  2434  024F  340A               	retlw	10
  2435  0250  3400               	retlw	0
  2436  0251                     STR_10:	
  2437  0251  3435               	retlw	53	;'5'
  2438  0252  3420               	retlw	32	;' '
  2439  0253  342D               	retlw	45	;'-'
  2440  0254  3420               	retlw	32	;' '
  2441  0255  3447               	retlw	71	;'G'
  2442  0256  3450               	retlw	80	;'P'
  2443  0257  3453               	retlw	83	;'S'
  2444  0258  3420               	retlw	32	;' '
  2445  0259  3443               	retlw	67	;'C'
  2446  025A  346F               	retlw	111	;'o'
  2447  025B  346D               	retlw	109	;'m'
  2448  025C  346D               	retlw	109	;'m'
  2449  025D  3420               	retlw	32	;' '
  2450  025E  344C               	retlw	76	;'L'
  2451  025F  346F               	retlw	111	;'o'
  2452  0260  3463               	retlw	99	;'c'
  2453  0261  346B               	retlw	107	;'k'
  2454  0262  340D               	retlw	13
  2455  0263  340A               	retlw	10
  2456  0264  3400               	retlw	0
  2457  0265                     STR_6:	
  2458  0265  3425               	retlw	37	;'%'
  2459  0266  3464               	retlw	100	;'d'
  2460  0267  343A               	retlw	58	;':'
  2461  0268  3425               	retlw	37	;'%'
  2462  0269  3464               	retlw	100	;'d'
  2463  026A  343A               	retlw	58	;':'
  2464  026B  3425               	retlw	37	;'%'
  2465  026C  3464               	retlw	100	;'d'
  2466  026D  3420               	retlw	32	;' '
  2467  026E  3425               	retlw	37	;'%'
  2468  026F  3464               	retlw	100	;'d'
  2469  0270  342D               	retlw	45	;'-'
  2470  0271  3425               	retlw	37	;'%'
  2471  0272  3464               	retlw	100	;'d'
  2472  0273  342D               	retlw	45	;'-'
  2473  0274  3425               	retlw	37	;'%'
  2474  0275  3464               	retlw	100	;'d'
  2475  0276  340D               	retlw	13
  2476  0277  340A               	retlw	10
  2477  0278  3400               	retlw	0
  2478  0279                     STR_16:	
  2479  0279  342E               	retlw	46	;'.'
  2480  027A  342E               	retlw	46	;'.'
  2481  027B  342E               	retlw	46	;'.'
  2482  027C  3420               	retlw	32	;' '
  2483  027D  3447               	retlw	71	;'G'
  2484  027E  346F               	retlw	111	;'o'
  2485  027F  3474               	retlw	116	;'t'
  2486  0280  3420               	retlw	32	;' '
  2487  0281  3447               	retlw	71	;'G'
  2488  0282  3450               	retlw	80	;'P'
  2489  0283  3453               	retlw	83	;'S'
  2490  0284  3420               	retlw	32	;' '
  2491  0285  3466               	retlw	102	;'f'
  2492  0286  3469               	retlw	105	;'i'
  2493  0287  3478               	retlw	120	;'x'
  2494  0288  342E               	retlw	46	;'.'
  2495  0289  340D               	retlw	13
  2496  028A  340A               	retlw	10
  2497  028B  3400               	retlw	0
  2498  028C                     STR_21:	
  2499  028C  3461               	retlw	97	;'a'
  2500  028D  3473               	retlw	115	;'s'
  2501  028E  3420               	retlw	32	;' '
  2502  028F  3473               	retlw	115	;'s'
  2503  0290  346C               	retlw	108	;'l'
  2504  0291  3465               	retlw	101	;'e'
  2505  0292  3465               	retlw	101	;'e'
  2506  0293  3470               	retlw	112	;'p'
  2507  0294  3420               	retlw	32	;' '
  2508  0295  3476               	retlw	118	;'v'
  2509  0296  3461               	retlw	97	;'a'
  2510  0297  3472               	retlw	114	;'r'
  2511  0298  3473               	retlw	115	;'s'
  2512  0299  342E               	retlw	46	;'.'
  2513  029A  340D               	retlw	13
  2514  029B  340A               	retlw	10
  2515  029C  3400               	retlw	0
  2516  029D                     STR_9:	
  2517  029D  3434               	retlw	52	;'4'
  2518  029E  3420               	retlw	32	;' '
  2519  029F  342D               	retlw	45	;'-'
  2520  02A0  3420               	retlw	32	;' '
  2521  02A1  3455               	retlw	85	;'U'
  2522  02A2  346E               	retlw	110	;'n'
  2523  02A3  3469               	retlw	105	;'i'
  2524  02A4  346D               	retlw	109	;'m'
  2525  02A5  3470               	retlw	112	;'p'
  2526  02A6  3420               	retlw	32	;' '
  2527  02A7  344C               	retlw	76	;'L'
  2528  02A8  346F               	retlw	111	;'o'
  2529  02A9  3463               	retlw	99	;'c'
  2530  02AA  346B               	retlw	107	;'k'
  2531  02AB  340D               	retlw	13
  2532  02AC  340A               	retlw	10
  2533  02AD  3400               	retlw	0
  2534  02AE                     STR_7:	
  2535  02AE  3431               	retlw	49	;'1'
  2536  02AF  3420               	retlw	32	;' '
  2537  02B0  342D               	retlw	45	;'-'
  2538  02B1  3420               	retlw	32	;' '
  2539  02B2  3448               	retlw	72	;'H'
  2540  02B3  3461               	retlw	97	;'a'
  2541  02B4  3472               	retlw	114	;'r'
  2542  02B5  3464               	retlw	100	;'d'
  2543  02B6  3420               	retlw	32	;' '
  2544  02B7  344C               	retlw	76	;'L'
  2545  02B8  346F               	retlw	111	;'o'
  2546  02B9  3463               	retlw	99	;'c'
  2547  02BA  346B               	retlw	107	;'k'
  2548  02BB  340D               	retlw	13
  2549  02BC  340A               	retlw	10
  2550  02BD  3400               	retlw	0
  2551  02BE                     STR_8:	
  2552  02BE  3432               	retlw	50	;'2'
  2553  02BF  3420               	retlw	32	;' '
  2554  02C0  342D               	retlw	45	;'-'
  2555  02C1  3420               	retlw	32	;' '
  2556  02C2  3449               	retlw	73	;'I'
  2557  02C3  3432               	retlw	50	;'2'
  2558  02C4  3443               	retlw	67	;'C'
  2559  02C5  3420               	retlw	32	;' '
  2560  02C6  344C               	retlw	76	;'L'
  2561  02C7  346F               	retlw	111	;'o'
  2562  02C8  3463               	retlw	99	;'c'
  2563  02C9  346B               	retlw	107	;'k'
  2564  02CA  340D               	retlw	13
  2565  02CB  340A               	retlw	10
  2566  02CC  3400               	retlw	0
  2567  02CD                     STR_3:	
  2568  02CD  3453               	retlw	83	;'S'
  2569  02CE  346C               	retlw	108	;'l'
  2570  02CF  3465               	retlw	101	;'e'
  2571  02D0  3465               	retlw	101	;'e'
  2572  02D1  3470               	retlw	112	;'p'
  2573  02D2  3420               	retlw	32	;' '
  2574  02D3  3465               	retlw	101	;'e'
  2575  02D4  3472               	retlw	114	;'r'
  2576  02D5  3472               	retlw	114	;'r'
  2577  02D6  346F               	retlw	111	;'o'
  2578  02D7  3472               	retlw	114	;'r'
  2579  02D8  342E               	retlw	46	;'.'
  2580  02D9  340D               	retlw	13
  2581  02DA  340A               	retlw	10
  2582  02DB  3400               	retlw	0
  2583  02DC                     STR_2:	
  2584  02DC  3454               	retlw	84	;'T'
  2585  02DD  3443               	retlw	67	;'C'
  2586  02DE  3420               	retlw	32	;' '
  2587  02DF  3469               	retlw	105	;'i'
  2588  02E0  3473               	retlw	115	;'s'
  2589  02E1  3420               	retlw	32	;' '
  2590  02E2  3468               	retlw	104	;'h'
  2591  02E3  3469               	retlw	105	;'i'
  2592  02E4  3467               	retlw	103	;'g'
  2593  02E5  3468               	retlw	104	;'h'
  2594  02E6  342E               	retlw	46	;'.'
  2595  02E7  340D               	retlw	13
  2596  02E8  340A               	retlw	10
  2597  02E9  3400               	retlw	0
  2598  02EA                     STR_19:	
  2599  02EA  346E               	retlw	110	;'n'
  2600  02EB  343D               	retlw	61	;'='
  2601  02EC  3425               	retlw	37	;'%'
  2602  02ED  3464               	retlw	100	;'d'
  2603  02EE  3471               	retlw	113	;'q'
  2604  02EF  343D               	retlw	61	;'='
  2605  02F0  3425               	retlw	37	;'%'
  2606  02F1  3464               	retlw	100	;'d'
  2607  02F2  3472               	retlw	114	;'r'
  2608  02F3  343D               	retlw	61	;'='
  2609  02F4  3425               	retlw	37	;'%'
  2610  02F5  3464               	retlw	100	;'d'
  2611  02F6  3400               	retlw	0
  2612                           
  2613                           ; #config settings
  2614  0000                     
  2615                           	psect	cinit
  2616  003E                     start_initialization:	
  2617  003E                     __initialization:		;BIGRAM
  2618                           
  2619                           ; Clear objects allocated to BIGRAM
  2620  003E  3089               	movlw	low (0+9097)
  2621  003F  0084               	movwf	4
  2622  0040  3023               	movlw	high (0+9097)
  2623  0041  0085               	movwf	5
  2624  0042  3067               	movlw	103
  2625  0043  00FE               	movwf	btemp
  2626  0044  3000               	movlw	0
  2627  0045  00FF               	movwf	btemp+1
  2628  0046  3188  20DB  3180   	fcall	clear_ram0
  2629                           
  2630                           ; Clear objects allocated to COMMON
  2631  0049  01FA               	clrf	__pbssCOMMON& (0+127)
  2632                           
  2633                           ; Clear objects allocated to BANK1
  2634  004A  30A0               	movlw	low __pbssBANK1
  2635  004B  0084               	movwf	4
  2636  004C  3000               	movlw	high __pbssBANK1
  2637  004D  0085               	movwf	5
  2638  004E  3031               	movlw	49
  2639  004F  00FE               	movwf	btemp
  2640  0050  3000               	movlw	0
  2641  0051  00FF               	movwf	btemp+1
  2642  0052  3188  20DB  3180   	fcall	clear_ram0
  2643                           
  2644                           ; Initialize objects allocated to BANK1
  2645  0055  30F4               	movlw	low __pidataBANK1
  2646  0056  0084               	movwf	4
  2647  0057  3088               	movlw	(high __pidataBANK1)| (0+128)
  2648  0058  0085               	movwf	5
  2649  0059  30E3               	movlw	low __pdataBANK1
  2650  005A  0086               	movwf	6
  2651  005B  3000               	movlw	high __pdataBANK1
  2652  005C  0087               	movwf	7
  2653  005D  3000               	movlw	0
  2654  005E  00FF               	movwf	btemp+1
  2655  005F  300D               	movlw	13
  2656  0060  3188  20CF  3180   	fcall	init_ram
  2657                           
  2658                           ; Initialize objects allocated to BANK2
  2659  0063  300D               	movlw	low __pidataBANK2
  2660  0064  0084               	movwf	4
  2661  0065  308E               	movlw	(high __pidataBANK2)| (0+128)
  2662  0066  0085               	movwf	5
  2663  0067  3020               	movlw	low __pdataBANK2
  2664  0068  0086               	movwf	6
  2665  0069  3001               	movlw	high __pdataBANK2
  2666  006A  0087               	movwf	7
  2667  006B  3000               	movlw	0
  2668  006C  00FF               	movwf	btemp+1
  2669  006D  304A               	movlw	74
  2670  006E  3188  20CF  3180   	fcall	init_ram
  2671                           
  2672                           ; Initialize objects allocated to BANK3
  2673  0071  30EA               	movlw	low __pidataBANK3
  2674  0072  0084               	movwf	4
  2675  0073  308A               	movlw	(high __pidataBANK3)| (0+128)
  2676  0074  0085               	movwf	5
  2677  0075  30A0               	movlw	low __pdataBANK3
  2678  0076  0086               	movwf	6
  2679  0077  3001               	movlw	high __pdataBANK3
  2680  0078  0087               	movwf	7
  2681  0079  3000               	movlw	0
  2682  007A  00FF               	movwf	btemp+1
  2683  007B  3022               	movlw	34
  2684  007C  3188  20CF         	fcall	init_ram
  2685  007E                     end_of_initialization:	
  2686                           ;End of C runtime variable initialization code
  2687                           
  2688  007E                     __end_of__initialization:	
  2689  007E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2690  007F  0020               	movlb	0
  2691  0080  3186  2EC2         	ljmp	_main	;jump to C main() function
  2692                           
  2693                           	psect	bssCOMMON
  2694  007A                     __pbssCOMMON:	
  2695  007A                     _tmr0_overflow:	
  2696  007A                     	ds	1
  2697                           
  2698                           	psect	bssBANK1
  2699  00A0                     __pbssBANK1:	
  2700  00A0                     _GpsMinimum:	
  2701  00A0                     	ds	31
  2702  00BF                     eeprom_write_defaults@F3295:	
  2703  00BF                     	ds	8
  2704  00C7                     _PicTime:	
  2705  00C7                     	ds	6
  2706  00CD                     sleep_start@F3275:	
  2707  00CD                     	ds	4
  2708                           
  2709                           	psect	dataBANK1
  2710  00E3                     __pdataBANK1:	
  2711  00E3                     eeprom_write_defaults@F3293:	
  2712  00E3                     	ds	4
  2713  00E7                     _ubx_poll_status:	
  2714  00E7                     	ds	9
  2715                           
  2716                           	psect	dataBANK2
  2717  0120                     __pdataBANK2:	
  2718  0120                     _ubx_poll_posllr:	
  2719  0120                     	ds	9
  2720  0129                     _data:	
  2721  0129                     	ds	8
  2722  0131                     _ubx_disable_gxgga:	
  2723  0131                     	ds	12
  2724  013D                     _ubx_disable_gxgll:	
  2725  013D                     	ds	12
  2726  0149                     _ubx_disable_gxgsa:	
  2727  0149                     	ds	12
  2728  0155                     _ubx_disable_gxgsv:	
  2729  0155                     	ds	12
  2730  0161                     _ubx_poll_pvt:	
  2731  0161                     	ds	9
  2732                           
  2733                           	psect	dataBANK3
  2734  01A0                     __pdataBANK3:	
  2735  01A0                     _ubx_nmea_disable_ack:	
  2736  01A0                     	ds	10
  2737  01AA                     _ubx_disable_gxrmc:	
  2738  01AA                     	ds	12
  2739  01B6                     _ubx_disable_gxvtg:	
  2740  01B6                     	ds	12
  2741                           
  2742                           	psect	clrtext
  2743  08DB                     clear_ram0:	
  2744                           ;	Called with FSR0 containing the base address, and
  2745                           ;	btemp/btemp+1 has the size to clear
  2746                           
  2747  08DB  0064               	clrwdt	;clear the watchdog before getting into this loop
  2748  08DC                     clrloop0:	
  2749  08DC  0180               	clrf	0	;clear RAM location pointed to by FSR
  2750  08DD  3101               	addfsr 0,1
  2751  08DE  3001               	movlw	1
  2752  08DF  02FE               	subwf	126,f
  2753  08E0  3000               	movlw	0
  2754  08E1  3BFF               	subwfb	127,f
  2755  08E2  087F               	movf	127,w
  2756  08E3  047E               	iorwf	126,w
  2757  08E4  1903               	btfsc	3,2
  2758  08E5  3400               	retlw	0	;all done for this memory range, return
  2759  08E6  28DC               	goto	clrloop0	;have we reached the end yet?
  2760                           
  2761                           	psect	inittext
  2762  08CF                     init_ram:	
  2763  08CF  00FE               	movwf	126
  2764  08D0                     initloop:	
  2765  08D0  0012               	moviw fsr0++
  2766  08D1  001E               	movwi fsr1++
  2767  08D2  3001               	movlw	1
  2768  08D3  02FE               	subwf	126,f
  2769  08D4  3000               	movlw	0
  2770  08D5  3BFF               	subwfb	127,f
  2771  08D6  087F               	movf	127,w
  2772  08D7  047E               	iorwf	126,w
  2773  08D8  1903               	btfsc	3,2
  2774  08D9  3400               	retlw	0
  2775  08DA  28D0               	goto	initloop
  2776                           
  2777                           	psect	cstackBANK2
  2778  016A                     __pcstackBANK2:	
  2779  016A                     main@mode:	
  2780                           
  2781                           ; 1 bytes @ 0x0
  2782  016A                     	ds	1
  2783                           
  2784                           	psect	cstackBANK1
  2785  00D1                     __pcstackBANK1:	
  2786  00D1                     ??_cti_instruction_loop:	
  2787                           
  2788                           ; 1 bytes @ 0x0
  2789  00D1                     	ds	5
  2790  00D6                     cti_instruction_loop@n:	
  2791                           
  2792                           ; 2 bytes @ 0x5
  2793  00D6                     	ds	2
  2794  00D8                     cti_instruction_loop@instruction:	
  2795                           
  2796                           ; 1 bytes @ 0x7
  2797  00D8                     	ds	1
  2798  00D9                     cti_instruction_loop@low_n:	
  2799                           
  2800                           ; 1 bytes @ 0x8
  2801  00D9                     	ds	1
  2802  00DA                     cti_instruction_loop@high_n:	
  2803                           
  2804                           ; 1 bytes @ 0x9
  2805  00DA                     	ds	1
  2806  00DB                     cti_instruction_loop@next_instruction_address:	
  2807                           
  2808                           ; 1 bytes @ 0xA
  2809  00DB                     	ds	1
  2810  00DC                     sleep_start@sleep_vals:	
  2811                           
  2812                           ; 4 bytes @ 0xB
  2813  00DC                     	ds	4
  2814  00E0                     ??_main:	
  2815                           
  2816                           ; 1 bytes @ 0xF
  2817  00E0                     	ds	3
  2818                           
  2819                           	psect	cstackCOMMON
  2820  0070                     __pcstackCOMMON:	
  2821  0070                     ?_pic_init:	
  2822  0070                     ?_is_this_the_first_pwrup:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825  0070                     ?_first_pwrup_calls:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828  0070                     ?_is_usb_plugged_in:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831  0070                     ?_is_tc_high:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834  0070                     ?_sleep_start:	
  2835                           ; 1 bytes @ 0x0
  2836                           
  2837  0070                     ?_am1805_are_we_asleep:	
  2838                           ; 1 bytes @ 0x0
  2839                           
  2840  0070                     ?_am1805_sleep_error:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843  0070                     ?_let_nrf_update_eeprom:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846  0070                     ?_reset_instruction_ptr:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849  0070                     ?_eeprom_single_read:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852  0070                     ?_cti_instruction_loop:	
  2853                           ; 1 bytes @ 0x0
  2854                           
  2855  0070                     ?_hard_lockup:	
  2856                           ; 1 bytes @ 0x0
  2857                           
  2858  0070                     ?_blink:	
  2859                           ; 1 bytes @ 0x0
  2860                           
  2861  0070                     ?_hard_lockup_uart:	
  2862                           ; 1 bytes @ 0x0
  2863                           
  2864  0070                     ?_ubx_silence_nmea:	
  2865                           ; 1 bytes @ 0x0
  2866                           
  2867  0070                     ?_have_3d_fix:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870  0070                     ?_update_gps_fix_data:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873  0070                     ?_ISR:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876  0070                     ??_ISR:	
  2877                           ; 1 bytes @ 0x0
  2878                           
  2879  0070                     ?_main:	
  2880                           ; 1 bytes @ 0x0
  2881                           
  2882  0070                     ?_i2c_start:	
  2883                           ; 1 bytes @ 0x0
  2884                           
  2885  0070                     ?_i2c_stop:	
  2886                           ; 1 bytes @ 0x0
  2887                           
  2888  0070                     ?_i2c_wait_for_ack:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891  0070                     ?_i2c_gen_read:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  0070                     ?_i2c_get_read_data:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  0070                     ?_i2c_write_data:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  0070                     ?_i2c_send_ack:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  0070                     ?_i2c_send_nack:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  0070                     ?_uart_write:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0070                     ?_send_am1805_read:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912  0070                     ?_send_am1805_write:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915  0070                     ?_am1805_write_defaults:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918  0070                     ?_am1805_start_ctdn_tmr:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921  0070                     ?_am1805_initiate_ctdn_sleep:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  0070                     ?_am1805_write_pgm_time:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927  0070                     ?_send_eeprom_read:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  0070                     ?_send_eeprom_write:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  0070                     ?_eeprom_write_defaults:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936  0070                     ?_eeprom_write_gps_minimum:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  0070                     ?_eeprom_write_nrf52_sig_byte:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  0070                     ?_error_blaster:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945  0070                     ?_setup_io:	
  2946                           ; 1 bytes @ 0x0
  2947                           
  2948  0070                     ?_setup_fvrc:	
  2949                           ; 1 bytes @ 0x0
  2950                           
  2951  0070                     ?_eusart_init:	
  2952                           ; 1 bytes @ 0x0
  2953                           
  2954  0070                     ?_i2c_init:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0070                     ?_setup_interrupts:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960  0070                     ?_timer0_init:	
  2961                           ; 1 bytes @ 0x0
  2962                           
  2963  0070                     ?_pwm_init:	
  2964                           ; 1 bytes @ 0x0
  2965                           
  2966  0070                     ?_is_nrfcomplete_high:	
  2967                           ; 1 bytes @ 0x0
  2968                           
  2969  0070                     ?_adjusted_start:	
  2970                           ; 1 bytes @ 0x0
  2971                           
  2972  0070                     ?_i3gnav:	
  2973                           ; 1 bytes @ 0x0
  2974                           
  2975  0070                     ?_reset_ubx_struct:	
  2976                           ; 1 bytes @ 0x0
  2977                           
  2978  0070                     ?_eval_ubx_buf_for_fix:	
  2979                           ; 1 bytes @ 0x0
  2980                           
  2981  0070                     ?_get_pvt_str:	
  2982                           ; 1 bytes @ 0x0
  2983                           
  2984  0070                     ?_sort_pvt_data_into_gps_struct:	
  2985                           ; 1 bytes @ 0x0
  2986                           
  2987                           
  2988                           ; 1 bytes @ 0x0
  2989  0070                     	ds	3
  2990  0073                     ??_is_usb_plugged_in:	
  2991  0073                     ??_is_tc_high:	
  2992                           ; 1 bytes @ 0x3
  2993                           
  2994  0073                     ??_am1805_sleep_error:	
  2995                           ; 1 bytes @ 0x3
  2996                           
  2997  0073                     ??_blink:	
  2998                           ; 1 bytes @ 0x3
  2999                           
  3000  0073                     ?_strcpy:	
  3001                           ; 1 bytes @ 0x3
  3002                           
  3003  0073                     ?_set_led_duty:	
  3004                           ; 1 bytes @ 0x3
  3005                           
  3006  0073                     ??_i2c_get_read_data:	
  3007                           ; 1 bytes @ 0x3
  3008                           
  3009  0073                     ??_send_eeprom_read:	
  3010                           ; 1 bytes @ 0x3
  3011                           
  3012  0073                     ??_send_eeprom_write:	
  3013                           ; 1 bytes @ 0x3
  3014                           
  3015  0073                     ??_setup_io:	
  3016                           ; 1 bytes @ 0x3
  3017                           
  3018  0073                     ??_setup_fvrc:	
  3019                           ; 1 bytes @ 0x3
  3020                           
  3021  0073                     ??_eusart_init:	
  3022                           ; 1 bytes @ 0x3
  3023                           
  3024  0073                     ??_i2c_init:	
  3025                           ; 1 bytes @ 0x3
  3026                           
  3027  0073                     ??_setup_interrupts:	
  3028                           ; 1 bytes @ 0x3
  3029                           
  3030  0073                     ??_timer0_init:	
  3031                           ; 1 bytes @ 0x3
  3032                           
  3033  0073                     ??_is_nrfcomplete_high:	
  3034                           ; 1 bytes @ 0x3
  3035                           
  3036  0073                     ??_eval_ubx_buf_for_fix:	
  3037                           ; 1 bytes @ 0x3
  3038                           
  3039  0073                     ??_sort_pvt_data_into_gps_struct:	
  3040                           ; 1 bytes @ 0x3
  3041                           
  3042  0073                     ?_memset:	
  3043                           ; 1 bytes @ 0x3
  3044                           
  3045  0073                     ?___lwdiv:	
  3046                           ; 2 bytes @ 0x3
  3047                           
  3048  0073                     set_led_duty@duty:	
  3049                           ; 2 bytes @ 0x3
  3050                           
  3051  0073                     ___lwdiv@divisor:	
  3052                           ; 2 bytes @ 0x3
  3053                           
  3054  0073                     memset@p1:	
  3055                           ; 2 bytes @ 0x3
  3056                           
  3057  0073                     strcpy@from:	
  3058                           ; 2 bytes @ 0x3
  3059                           
  3060                           
  3061                           ; 2 bytes @ 0x3
  3062  0073                     	ds	1
  3063  0074                     i2c_get_read_data@latest_byte:	
  3064                           
  3065                           ; 1 bytes @ 0x4
  3066  0074                     	ds	1
  3067  0075                     ??_strcpy:	
  3068  0075                     ??_set_led_duty:	
  3069                           ; 1 bytes @ 0x5
  3070                           
  3071  0075                     ___lwdiv@dividend:	
  3072                           ; 1 bytes @ 0x5
  3073                           
  3074  0075                     memset@c:	
  3075                           ; 2 bytes @ 0x5
  3076                           
  3077                           
  3078                           ; 2 bytes @ 0x5
  3079  0075                     	ds	1
  3080  0076                     strcpy@cp:	
  3081                           
  3082                           ; 1 bytes @ 0x6
  3083  0076                     	ds	1
  3084  0077                     ??___lwdiv:	
  3085  0077                     set_led_duty@color:	
  3086                           ; 1 bytes @ 0x7
  3087                           
  3088  0077                     strcpy@to:	
  3089                           ; 1 bytes @ 0x7
  3090                           
  3091  0077                     memset@n:	
  3092                           ; 1 bytes @ 0x7
  3093                           
  3094                           
  3095                           ; 2 bytes @ 0x7
  3096  0077                     	ds	1
  3097  0078                     ??_pic_init:	
  3098  0078                     ??_pwm_init:	
  3099                           ; 1 bytes @ 0x8
  3100                           
  3101  0078                     ??___lwmod:	
  3102                           ; 1 bytes @ 0x8
  3103                           
  3104  0078                     hard_lockup_uart@i:	
  3105                           ; 1 bytes @ 0x8
  3106                           
  3107                           
  3108                           ; 1 bytes @ 0x8
  3109  0078                     	ds	1
  3110  0079                     ??_memset:	
  3111  0079                     ??_uart_write:	
  3112                           ; 1 bytes @ 0x9
  3113                           
  3114  0079                     ??_reset_ubx_struct:	
  3115                           ; 1 bytes @ 0x9
  3116                           
  3117  0079                     uart_write@data:	
  3118                           ; 1 bytes @ 0x9
  3119                           
  3120  0079                     ___lwmod@counter:	
  3121                           ; 1 bytes @ 0x9
  3122                           
  3123                           
  3124                           ; 1 bytes @ 0x9
  3125  0079                     	ds	1
  3126  007A                     ??_is_this_the_first_pwrup:	
  3127  007A                     ??_first_pwrup_calls:	
  3128                           ; 1 bytes @ 0xA
  3129                           
  3130  007A                     ??_update_gps_fix_data:	
  3131                           ; 1 bytes @ 0xA
  3132                           
  3133  007A                     ??_i2c_start:	
  3134                           ; 1 bytes @ 0xA
  3135                           
  3136  007A                     ??_i2c_stop:	
  3137                           ; 1 bytes @ 0xA
  3138                           
  3139  007A                     ??_i2c_wait_for_ack:	
  3140                           ; 1 bytes @ 0xA
  3141                           
  3142  007A                     ??_i2c_gen_read:	
  3143                           ; 1 bytes @ 0xA
  3144                           
  3145  007A                     ??_i2c_write_data:	
  3146                           ; 1 bytes @ 0xA
  3147                           
  3148  007A                     ??_i2c_send_ack:	
  3149                           ; 1 bytes @ 0xA
  3150                           
  3151  007A                     ??_i2c_send_nack:	
  3152                           ; 1 bytes @ 0xA
  3153                           
  3154  007A                     ??_send_am1805_read:	
  3155                           ; 1 bytes @ 0xA
  3156                           
  3157  007A                     ??_send_am1805_write:	
  3158                           ; 1 bytes @ 0xA
  3159                           
  3160  007A                     ??_am1805_write_to_addr:	
  3161                           ; 1 bytes @ 0xA
  3162                           
  3163  007A                     ??_am1805_write_pgm_time:	
  3164                           ; 1 bytes @ 0xA
  3165                           
  3166  007A                     ??_eeprom_single_write:	
  3167                           ; 1 bytes @ 0xA
  3168                           
  3169  007A                     ??_error_blaster:	
  3170                           ; 1 bytes @ 0xA
  3171                           
  3172  007A                     ??_adjusted_start:	
  3173                           ; 1 bytes @ 0xA
  3174                           
  3175  007A                     ??_ubx_send_str:	
  3176                           ; 1 bytes @ 0xA
  3177                           
  3178                           
  3179                           	psect	cstackBANK0
  3180  0020                     __pcstackBANK0:	
  3181                           ; 1 bytes @ 0xA
  3182                           
  3183  0020                     ??_hard_lockup_uart:	
  3184  0020                     ___lwdiv@counter:	
  3185                           ; 1 bytes @ 0x0
  3186                           
  3187  0020                     memset@p:	
  3188                           ; 1 bytes @ 0x0
  3189                           
  3190                           
  3191                           ; 2 bytes @ 0x0
  3192  0020                     	ds	1
  3193  0021                     ___lwdiv@quotient:	
  3194                           
  3195                           ; 2 bytes @ 0x1
  3196  0021                     	ds	2
  3197  0023                     ?_uart_write_string:	
  3198  0023                     ?_ubx_send_str:	
  3199                           ; 1 bytes @ 0x3
  3200                           
  3201  0023                     ?___lwmod:	
  3202                           ; 1 bytes @ 0x3
  3203                           
  3204  0023                     uart_write_string@str:	
  3205                           ; 2 bytes @ 0x3
  3206                           
  3207  0023                     ubx_send_str@str:	
  3208                           ; 2 bytes @ 0x3
  3209                           
  3210  0023                     ___lwmod@divisor:	
  3211                           ; 2 bytes @ 0x3
  3212                           
  3213                           
  3214                           ; 2 bytes @ 0x3
  3215  0023                     	ds	2
  3216  0025                     ??_uart_write_string:	
  3217  0025                     ubx_send_str@i:	
  3218                           ; 1 bytes @ 0x5
  3219                           
  3220  0025                     ___lwmod@dividend:	
  3221                           ; 2 bytes @ 0x5
  3222                           
  3223                           
  3224                           ; 2 bytes @ 0x5
  3225  0025                     	ds	1
  3226  0026                     uart_write_string@i:	
  3227                           
  3228                           ; 2 bytes @ 0x6
  3229  0026                     	ds	1
  3230  0027                     ??_ubx_silence_nmea:	
  3231  0027                     ?_ubx_send_and_recv:	
  3232                           ; 1 bytes @ 0x7
  3233                           
  3234  0027                     ?_sprintf:	
  3235                           ; 1 bytes @ 0x7
  3236                           
  3237  0027                     ubx_send_and_recv@ubx_cmd:	
  3238                           ; 2 bytes @ 0x7
  3239                           
  3240  0027                     sprintf@f:	
  3241                           ; 2 bytes @ 0x7
  3242                           
  3243                           
  3244                           ; 2 bytes @ 0x7
  3245  0027                     	ds	1
  3246  0028                     error_blaster@str:	
  3247                           
  3248                           ; 20 bytes @ 0x8
  3249  0028                     	ds	1
  3250  0029                     ubx_send_and_recv@response_time:	
  3251                           
  3252                           ; 1 bytes @ 0x9
  3253  0029                     	ds	1
  3254  002A                     ubx_send_and_recv@expected_len:	
  3255                           
  3256                           ; 1 bytes @ 0xA
  3257  002A                     	ds	1
  3258  002B                     ??_ubx_send_and_recv:	
  3259                           
  3260                           ; 1 bytes @ 0xB
  3261  002B                     	ds	2
  3262  002D                     ubx_send_and_recv@i:	
  3263                           
  3264                           ; 1 bytes @ 0xD
  3265  002D                     	ds	8
  3266  0035                     ??_sprintf:	
  3267                           
  3268                           ; 1 bytes @ 0x15
  3269  0035                     	ds	4
  3270  0039                     sprintf@ap:	
  3271                           
  3272                           ; 1 bytes @ 0x19
  3273  0039                     	ds	1
  3274  003A                     sprintf@flag:	
  3275                           
  3276                           ; 1 bytes @ 0x1A
  3277  003A                     	ds	1
  3278  003B                     sprintf@prec:	
  3279                           
  3280                           ; 1 bytes @ 0x1B
  3281  003B                     	ds	1
  3282  003C                     error_blaster@err_num:	
  3283  003C                     sprintf@val:	
  3284                           ; 1 bytes @ 0x1C
  3285                           
  3286                           
  3287                           ; 2 bytes @ 0x1C
  3288  003C                     	ds	1
  3289  003D                     ??_hard_lockup:	
  3290                           
  3291                           ; 1 bytes @ 0x1D
  3292  003D                     	ds	1
  3293  003E                     sprintf@sp:	
  3294                           
  3295                           ; 1 bytes @ 0x1E
  3296  003E                     	ds	1
  3297  003F                     sprintf@c:	
  3298                           
  3299                           ; 1 bytes @ 0x1F
  3300  003F                     	ds	1
  3301  0040                     hard_lockup@i:	
  3302                           
  3303                           ; 1 bytes @ 0x20
  3304  0040                     	ds	1
  3305  0041                     hard_lockup@err_num:	
  3306                           
  3307                           ; 1 bytes @ 0x21
  3308  0041                     	ds	1
  3309  0042                     ??_have_3d_fix:	
  3310  0042                     ??_get_pvt_str:	
  3311                           ; 1 bytes @ 0x22
  3312                           
  3313  0042                     i2c_write_data@data:	
  3314                           ; 1 bytes @ 0x22
  3315                           
  3316                           
  3317                           ; 1 bytes @ 0x22
  3318  0042                     	ds	1
  3319  0043                     ??_am1805_are_we_asleep:	
  3320  0043                     ??_eeprom_single_read:	
  3321                           ; 1 bytes @ 0x23
  3322                           
  3323  0043                     ?_am1805_write_to_addr:	
  3324                           ; 1 bytes @ 0x23
  3325                           
  3326  0043                     ?_eeprom_single_write:	
  3327                           ; 1 bytes @ 0x23
  3328                           
  3329  0043                     ?_eeprom_page_write:	
  3330                           ; 1 bytes @ 0x23
  3331                           
  3332  0043                     ?_eeprom_seq_read:	
  3333                           ; 1 bytes @ 0x23
  3334                           
  3335  0043                     am1805_write_to_addr@addr:	
  3336                           ; 1 bytes @ 0x23
  3337                           
  3338  0043                     eeprom_single_write@addr:	
  3339                           ; 1 bytes @ 0x23
  3340                           
  3341  0043                     eeprom_page_write@page_data:	
  3342                           ; 1 bytes @ 0x23
  3343                           
  3344  0043                     eeprom_seq_read@return_data:	
  3345                           ; 1 bytes @ 0x23
  3346                           
  3347                           
  3348                           ; 1 bytes @ 0x23
  3349  0043                     	ds	1
  3350  0044                     am1805_write_to_addr@data:	
  3351  0044                     am1805_are_we_asleep@val:	
  3352                           ; 1 bytes @ 0x24
  3353                           
  3354  0044                     eeprom_single_write@data:	
  3355                           ; 1 bytes @ 0x24
  3356                           
  3357  0044                     eeprom_single_read@addr:	
  3358                           ; 1 bytes @ 0x24
  3359                           
  3360  0044                     eeprom_page_write@len:	
  3361                           ; 1 bytes @ 0x24
  3362                           
  3363  0044                     eeprom_seq_read@len:	
  3364                           ; 1 bytes @ 0x24
  3365                           
  3366  0044                     get_pvt_str@err_ctr:	
  3367                           ; 1 bytes @ 0x24
  3368                           
  3369  0044                     have_3d_fix@err_ctr:	
  3370                           ; 1 bytes @ 0x24
  3371                           
  3372                           
  3373                           ; 1 bytes @ 0x24
  3374  0044                     	ds	1
  3375  0045                     ??_reset_instruction_ptr:	
  3376  0045                     ??_am1805_write_defaults:	
  3377                           ; 1 bytes @ 0x25
  3378                           
  3379  0045                     ??_am1805_start_ctdn_tmr:	
  3380                           ; 1 bytes @ 0x25
  3381                           
  3382  0045                     ??_am1805_initiate_ctdn_sleep:	
  3383                           ; 1 bytes @ 0x25
  3384                           
  3385  0045                     ??_eeprom_page_write:	
  3386                           ; 1 bytes @ 0x25
  3387                           
  3388  0045                     ??_eeprom_seq_read:	
  3389                           ; 1 bytes @ 0x25
  3390                           
  3391  0045                     ??_eeprom_write_nrf52_sig_byte:	
  3392                           ; 1 bytes @ 0x25
  3393                           
  3394  0045                     eeprom_single_read@ret:	
  3395                           ; 1 bytes @ 0x25
  3396                           
  3397                           
  3398                           ; 1 bytes @ 0x25
  3399  0045                     	ds	1
  3400  0046                     eeprom_write_nrf52_sig_byte@sig_byte:	
  3401                           
  3402                           ; 1 bytes @ 0x26
  3403  0046                     	ds	1
  3404  0047                     ??_let_nrf_update_eeprom:	
  3405  0047                     eeprom_page_write@page:	
  3406                           ; 1 bytes @ 0x27
  3407                           
  3408  0047                     eeprom_seq_read@start_addr:	
  3409                           ; 1 bytes @ 0x27
  3410                           
  3411                           
  3412                           ; 1 bytes @ 0x27
  3413  0047                     	ds	1
  3414  0048                     am1805_start_ctdn_tmr@amt_time:	
  3415  0048                     eeprom_page_write@start_addr:	
  3416                           ; 1 bytes @ 0x28
  3417                           
  3418  0048                     eeprom_seq_read@i:	
  3419                           ; 1 bytes @ 0x28
  3420                           
  3421                           
  3422                           ; 1 bytes @ 0x28
  3423  0048                     	ds	1
  3424  0049                     ?_idsn:	
  3425  0049                     eeprom_page_write@i:	
  3426                           ; 1 bytes @ 0x29
  3427                           
  3428  0049                     idsn@n:	
  3429                           ; 1 bytes @ 0x29
  3430                           
  3431                           
  3432                           ; 2 bytes @ 0x29
  3433  0049                     	ds	1
  3434  004A                     ??_eeprom_write_defaults:	
  3435  004A                     ??_eeprom_write_gps_minimum:	
  3436                           ; 1 bytes @ 0x2A
  3437                           
  3438                           
  3439                           ; 1 bytes @ 0x2A
  3440  004A                     	ds	1
  3441  004B                     ??_idsn:	
  3442                           
  3443                           ; 1 bytes @ 0x2B
  3444  004B                     	ds	1
  3445  004C                     eeprom_write_defaults@sp_defaults:	
  3446  004C                     eeprom_write_gps_minimum@gpspage1:	
  3447                           ; 8 bytes @ 0x2C
  3448                           
  3449                           
  3450                           ; 8 bytes @ 0x2C
  3451  004C                     	ds	3
  3452  004F                     idsn@debug:	
  3453                           
  3454                           ; 20 bytes @ 0x2F
  3455  004F                     	ds	5
  3456  0054                     eeprom_write_defaults@sleep_defaults:	
  3457  0054                     eeprom_write_gps_minimum@gpspage2:	
  3458                           ; 4 bytes @ 0x34
  3459                           
  3460                           
  3461                           ; 8 bytes @ 0x34
  3462  0054                     	ds	8
  3463  005C                     eeprom_write_gps_minimum@gpspage3:	
  3464                           
  3465                           ; 8 bytes @ 0x3C
  3466  005C                     	ds	7
  3467  0063                     idsn@quotient:	
  3468                           
  3469                           ; 1 bytes @ 0x43
  3470  0063                     	ds	1
  3471  0064                     idsn@remainder:	
  3472  0064                     eeprom_write_gps_minimum@gpspage4:	
  3473                           ; 1 bytes @ 0x44
  3474                           
  3475                           
  3476                           ; 7 bytes @ 0x44
  3477  0064                     	ds	7
  3478  006B                     ??_i3gnav:	
  3479                           
  3480                           ; 1 bytes @ 0x4B
  3481  006B                     	ds	3
  3482  006E                     ??_sleep_start:	
  3483                           
  3484                           ; 1 bytes @ 0x4E
  3485  006E                     	ds	2
  3486                           
  3487                           	psect	maintext
  3488  06C2                     __pmaintext:	
  3489 ;;
  3490 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3491 ;;
  3492 ;; *************** function _main *****************
  3493 ;; Defined at:
  3494 ;;		line 68 in file "src/main.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  mode            1    0[BANK2 ] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : B1F/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3511 ;;      Totals:         0       0       3       1       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;Total ram usage:        4 bytes
  3513 ;; Hardware stack levels required when called:   14
  3514 ;; This function calls:
  3515 ;;		_am1805_are_we_asleep
  3516 ;;		_am1805_sleep_error
  3517 ;;		_blink
  3518 ;;		_cti_instruction_loop
  3519 ;;		_eeprom_single_read
  3520 ;;		_first_pwrup_calls
  3521 ;;		_hard_lockup
  3522 ;;		_is_tc_high
  3523 ;;		_is_this_the_first_pwrup
  3524 ;;		_is_usb_plugged_in
  3525 ;;		_let_nrf_update_eeprom
  3526 ;;		_pic_init
  3527 ;;		_reset_instruction_ptr
  3528 ;;		_sleep_start
  3529 ;;		_uart_write_string
  3530 ;; This function is called by:
  3531 ;;		Startup code after reset
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function _main
  3537  06C2                     _main:	
  3538                           
  3539                           ;main.c: 70: pic_init();
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3543  06C2  318A  22A9  3186   	fcall	_pic_init
  3544                           
  3545                           ;main.c: 72: if (is_this_the_first_pwrup()) {
  3546  06C5  3188  20B8  3186   	fcall	_is_this_the_first_pwrup
  3547  06C8  3A00               	xorlw	0
  3548  06C9  1903               	skipnz
  3549  06CA  2ED6               	goto	l4242
  3550                           
  3551                           ;main.c: 73: uart_write_string("This is the first pwrup.\r\n");
  3552  06CB  30C2               	movlw	low (STR_1| (0+32768))
  3553  06CC  0020               	movlb	0	; select bank0
  3554  06CD  00A3               	movwf	uart_write_string@str
  3555  06CE  3081               	movlw	high (STR_1| (0+32768))
  3556  06CF  00A4               	movwf	uart_write_string@str+1
  3557  06D0  318A  2234  3186   	fcall	_uart_write_string
  3558                           
  3559                           ;main.c: 74: first_pwrup_calls();
  3560  06D3  3188  207D  3186   	fcall	_first_pwrup_calls
  3561  06D6                     l4242:	
  3562                           
  3563                           ;main.c: 75: }
  3564                           ;main.c: 79: if (is_usb_plugged_in());
  3565  06D6  3188  2056  3186   	fcall	_is_usb_plugged_in
  3566                           
  3567                           ;main.c: 81: LATB &= ~(0x08);
  3568  06D9  30F7               	movlw	247
  3569  06DA  0021               	movlb	1	; select bank1
  3570  06DB  00E0               	movwf	??_main^(0+128)
  3571  06DC  0860               	movf	??_main^(0+128),w
  3572  06DD  0022               	movlb	2	; select bank2
  3573  06DE  058D               	andwf	13,f	;volatile
  3574                           
  3575                           ;main.c: 83: if (is_tc_high()) {
  3576  06DF  3188  2052  3186   	fcall	_is_tc_high
  3577  06E2  3A00               	xorlw	0
  3578  06E3  1903               	skipnz
  3579  06E4  2EF0               	goto	l4252
  3580                           
  3581                           ;main.c: 84: uart_write_string("TC is high.\r\n");
  3582  06E5  30DC               	movlw	low (STR_2| (0+32768))
  3583  06E6  0020               	movlb	0	; select bank0
  3584  06E7  00A3               	movwf	uart_write_string@str
  3585  06E8  3082               	movlw	high (STR_2| (0+32768))
  3586  06E9  00A4               	movwf	uart_write_string@str+1
  3587  06EA  318A  2234  3186   	fcall	_uart_write_string
  3588                           
  3589                           ;main.c: 85: sleep_start();
  3590  06ED  318D  257F  3186   	fcall	_sleep_start
  3591  06F0                     l4252:	
  3592                           
  3593                           ;main.c: 86: }
  3594                           ;main.c: 88: if (am1805_are_we_asleep()) {
  3595  06F0  318C  242E  3186   	fcall	_am1805_are_we_asleep
  3596  06F3  3A00               	xorlw	0
  3597  06F4  1903               	skipnz
  3598  06F5  2F01               	goto	l4258
  3599                           
  3600                           ;main.c: 89: uart_write_string("Sleep error.\r\n");
  3601  06F6  30CD               	movlw	low (STR_3| (0+32768))
  3602  06F7  0020               	movlb	0	; select bank0
  3603  06F8  00A3               	movwf	uart_write_string@str
  3604  06F9  3082               	movlw	high (STR_3| (0+32768))
  3605  06FA  00A4               	movwf	uart_write_string@str+1
  3606  06FB  318A  2234  3186   	fcall	_uart_write_string
  3607                           
  3608                           ;main.c: 90: am1805_sleep_error();
  3609  06FE  3180  2003  3186   	fcall	_am1805_sleep_error
  3610  0701                     l4258:	
  3611                           
  3612                           ;main.c: 91: }
  3613                           ;main.c: 96: let_nrf_update_eeprom();
  3614  0701  318B  2353  3186   	fcall	_let_nrf_update_eeprom
  3615                           
  3616                           ;main.c: 98: reset_instruction_ptr();
  3617  0704  3189  2111  3186   	fcall	_reset_instruction_ptr
  3618                           
  3619                           ;main.c: 100: uint8_t mode = eeprom_single_read(0x40);;
  3620  0707  3040               	movlw	64
  3621  0708  318C  2400  3186   	fcall	_eeprom_single_read
  3622  070B  0021               	movlb	1	; select bank1
  3623  070C  00E0               	movwf	??_main^(0+128)
  3624  070D  0860               	movf	??_main^(0+128),w
  3625  070E  0022               	movlb	2	; select bank2
  3626  070F  00EA               	movwf	main@mode^(0+256)
  3627                           
  3628                           ;main.c: 102: if (mode == 1) {
  3629  0710  036A               	decf	main@mode^(0+256),w
  3630  0711  1D03               	btfss	3,2
  3631  0712  2F1F               	goto	l4270
  3632                           
  3633                           ;main.c: 103: uart_write_string("Entering CTI mode.\r\n");
  3634  0713  3027               	movlw	low (STR_4| (0+32768))
  3635  0714  0020               	movlb	0	; select bank0
  3636  0715  00A3               	movwf	uart_write_string@str
  3637  0716  3082               	movlw	high (STR_4| (0+32768))
  3638  0717  00A4               	movwf	uart_write_string@str+1
  3639  0718  318A  2234  3186   	fcall	_uart_write_string
  3640                           
  3641                           ;main.c: 104: cti_instruction_loop();
  3642  071B  3187  2744  3186   	fcall	_cti_instruction_loop
  3643                           
  3644                           ;main.c: 105: } else if (mode == 2) {
  3645  071E  2F2A               	goto	l4276
  3646  071F                     l4270:	
  3647  071F  3002               	movlw	2
  3648  0720  0022               	movlb	2	; select bank2
  3649  0721  066A               	xorwf	main@mode^(0+256),w
  3650  0722  1D03               	btfss	3,2
  3651  0723  2F26               	goto	l4274
  3652                           
  3653                           ;main.c: 106: hard_lockup(4);
  3654  0724  3004               	movlw	4
  3655  0725  2F27               	goto	L1
  3656  0726                     l4274:	
  3657                           ;main.c: 107: } else {
  3658                           
  3659                           
  3660                           ;main.c: 108: hard_lockup(1);
  3661  0726  3001               	movlw	1
  3662  0727                     L1:	
  3663  0727  318F  27A5  3186   	fcall	_hard_lockup
  3664  072A                     l4276:	
  3665                           ;main.c: 109: }
  3666                           ;main.c: 111: while(1) {
  3667                           
  3668                           
  3669                           ;main.c: 112: uart_write_string("Reached End...????\r\n");
  3670  072A  303C               	movlw	low (STR_5| (0+32768))
  3671  072B  0020               	movlb	0	; select bank0
  3672  072C  00A3               	movwf	uart_write_string@str
  3673  072D  3082               	movlw	high (STR_5| (0+32768))
  3674  072E  00A4               	movwf	uart_write_string@str+1
  3675  072F  318A  2234  3186   	fcall	_uart_write_string
  3676                           
  3677                           ;main.c: 113: blink();
  3678  0732  3189  2101  3186   	fcall	_blink
  3679                           
  3680                           ;main.c: 114: _delay((unsigned long)((1000)*(2000000/4000.0)));
  3681  0735  3003               	movlw	3
  3682  0736  0021               	movlb	1	; select bank1
  3683  0737  00E2               	movwf	(??_main^(0+128)+2)
  3684  0738  308A               	movlw	138
  3685  0739  00E1               	movwf	(??_main^(0+128)+1)
  3686  073A  3056               	movlw	86
  3687  073B  00E0               	movwf	??_main^(0+128)
  3688  073C                     u2737:	
  3689  073C  0BE0               	decfsz	??_main^(0+128),f
  3690  073D  2F3C               	goto	u2737
  3691  073E  0BE1               	decfsz	(??_main^(0+128)+1),f
  3692  073F  2F3C               	goto	u2737
  3693  0740  0BE2               	decfsz	(??_main^(0+128)+2),f
  3694  0741  2F3C               	goto	u2737
  3695  0742  3200               	nop2
  3696  0743  2F2A               	goto	l4276
  3697  0744                     __end_of_main:	
  3698                           ;main.c: 115: }
  3699                           ;main.c: 117: return;
  3700                           
  3701                           
  3702                           	psect	text1
  3703  0D7F                     __ptext1:	
  3704 ;; *************** function _sleep_start *****************
  3705 ;; Defined at:
  3706 ;;		line 43 in file "sys/brex.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  sleep_vals      4   11[BANK1 ] unsigned char [4]
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3723 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3724 ;;Total ram usage:        6 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:   13
  3727 ;; This function calls:
  3728 ;;		_adjusted_start
  3729 ;;		_am1805_initiate_ctdn_sleep
  3730 ;;		_am1805_start_ctdn_tmr
  3731 ;;		_eeprom_seq_read
  3732 ;;		_eeprom_single_write
  3733 ;; This function is called by:
  3734 ;;		_main
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           
  3739                           ;psect for function _sleep_start
  3740  0D7F                     _sleep_start:	
  3741                           
  3742                           ;brex.c: 45: uint8_t sleep_vals[4] = {0};
  3743                           
  3744                           ;incstack = 0
  3745                           ; Regs used in _sleep_start: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3746  0D7F  0021               	movlb	1	; select bank1
  3747  0D80  0850               	movf	(sleep_start@F3275+3)^(0+128),w
  3748  0D81  00DF               	movwf	(sleep_start@sleep_vals+3)^(0+128)
  3749  0D82  084F               	movf	(sleep_start@F3275+2)^(0+128),w
  3750  0D83  00DE               	movwf	(sleep_start@sleep_vals+2)^(0+128)
  3751  0D84  084E               	movf	(sleep_start@F3275+1)^(0+128),w
  3752  0D85  00DD               	movwf	(sleep_start@sleep_vals+1)^(0+128)
  3753  0D86  084D               	movf	sleep_start@F3275^(0+128),w
  3754  0D87  00DC               	movwf	sleep_start@sleep_vals^(0+128)
  3755                           
  3756                           ;brex.c: 47: eeprom_seq_read(0x00, sleep_vals, 3);
  3757  0D88  30DC               	movlw	(low (sleep_start@sleep_vals| 0))& (0+255)
  3758  0D89  0020               	movlb	0	; select bank0
  3759  0D8A  00EE               	movwf	??_sleep_start
  3760  0D8B  086E               	movf	??_sleep_start,w
  3761  0D8C  00C3               	movwf	eeprom_seq_read@return_data
  3762  0D8D  3003               	movlw	3
  3763  0D8E  00EF               	movwf	??_sleep_start+1
  3764  0D8F  086F               	movf	??_sleep_start+1,w
  3765  0D90  00C4               	movwf	eeprom_seq_read@len
  3766  0D91  3000               	movlw	0
  3767  0D92  318E  2657  318D   	fcall	_eeprom_seq_read
  3768                           
  3769                           ;brex.c: 52: if (sleep_vals[0] > 1) {
  3770  0D95  3002               	movlw	2
  3771  0D96  0021               	movlb	1	; select bank1
  3772  0D97  025C               	subwf	sleep_start@sleep_vals^(0+128),w
  3773  0D98  1C03               	skipc
  3774  0D99  2DAB               	goto	l4190
  3775                           
  3776                           ;brex.c: 53: sleep_vals[0] -= 1;
  3777  0D9A  3001               	movlw	1
  3778  0D9B  02DC               	subwf	sleep_start@sleep_vals^(0+128),f
  3779                           
  3780                           ;brex.c: 54: eeprom_single_write(sleep_vals[0], 0x00);
  3781  0D9C  0020               	movlb	0	; select bank0
  3782  0D9D  01C3               	clrf	eeprom_single_write@addr
  3783  0D9E  0021               	movlb	1	; select bank1
  3784  0D9F  085C               	movf	sleep_start@sleep_vals^(0+128),w
  3785  0DA0  318A  228B  318D   	fcall	_eeprom_single_write
  3786                           
  3787                           ;brex.c: 55: am1805_start_ctdn_tmr(255);
  3788  0DA3  30FF               	movlw	255
  3789  0DA4  318B  237C  318D   	fcall	_am1805_start_ctdn_tmr
  3790                           
  3791                           ;brex.c: 56: am1805_initiate_ctdn_sleep();
  3792  0DA7  318A  2250  318D   	fcall	_am1805_initiate_ctdn_sleep
  3793  0DAA                     l605:	
  3794                           ;brex.c: 57: while(1);
  3795                           
  3796  0DAA  2DAA               	goto	l605
  3797  0DAB                     l4190:	
  3798                           ;brex.c: 58: } else if (sleep_vals[0] == 1) {
  3799                           
  3800  0DAB  0021               	movlb	1	; select bank1
  3801  0DAC  035C               	decf	sleep_start@sleep_vals^(0+128),w
  3802  0DAD  1D03               	btfss	3,2
  3803  0DAE  2DBE               	goto	l4194
  3804                           
  3805                           ;brex.c: 59: eeprom_single_write(0, 0x00);
  3806  0DAF  0020               	movlb	0	; select bank0
  3807  0DB0  01C3               	clrf	eeprom_single_write@addr
  3808  0DB1  3000               	movlw	0
  3809  0DB2  318A  228B  318D   	fcall	_eeprom_single_write
  3810                           
  3811                           ;brex.c: 60: am1805_start_ctdn_tmr(sleep_vals[2]);
  3812  0DB5  0021               	movlb	1	; select bank1
  3813  0DB6  085E               	movf	(sleep_start@sleep_vals^(0+128)+2),w
  3814  0DB7  318B  237C  318D   	fcall	_am1805_start_ctdn_tmr
  3815                           
  3816                           ;brex.c: 61: am1805_initiate_ctdn_sleep();
  3817  0DBA  318A  2250  318D   	fcall	_am1805_initiate_ctdn_sleep
  3818  0DBD                     l610:	
  3819                           ;brex.c: 62: while(1);
  3820                           
  3821  0DBD  2DBD               	goto	l610
  3822  0DBE                     l4194:	
  3823                           ;brex.c: 63: } else if (sleep_vals[0] == 0) {
  3824                           
  3825  0DBE  0021               	movlb	1	; select bank1
  3826  0DBF  085C               	movf	sleep_start@sleep_vals^(0+128),w
  3827  0DC0  1D03               	btfss	3,2
  3828  0DC1  0008               	return
  3829                           
  3830                           ;brex.c: 64: adjusted_start();
  3831  0DC2  3188  204F         	fcall	_adjusted_start
  3832  0DC4  0008               	return
  3833  0DC5                     __end_of_sleep_start:	
  3834                           
  3835                           	psect	text2
  3836  0E57                     __ptext2:	
  3837 ;; *************** function _eeprom_seq_read *****************
  3838 ;; Defined at:
  3839 ;;		line 70 in file "lib/eeprom.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  start_addr      1    wreg     unsigned char 
  3842 ;;  return_data     1   35[BANK0 ] PTR unsigned char 
  3843 ;;		 -> sleep_start@sleep_vals(4), 
  3844 ;;  len             1   36[BANK0 ] unsigned char 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  start_addr      1   39[BANK0 ] unsigned char 
  3847 ;;  i               1   40[BANK0 ] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      void 
  3850 ;; Registers used:
  3851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;Total ram usage:        6 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    8
  3864 ;; This function calls:
  3865 ;;		_i2c_gen_read
  3866 ;;		_i2c_get_read_data
  3867 ;;		_i2c_send_ack
  3868 ;;		_i2c_send_nack
  3869 ;;		_i2c_start
  3870 ;;		_i2c_stop
  3871 ;;		_i2c_wait_for_ack
  3872 ;;		_i2c_write_data
  3873 ;;		_send_eeprom_read
  3874 ;;		_send_eeprom_write
  3875 ;; This function is called by:
  3876 ;;		_sleep_start
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           
  3881                           ;psect for function _eeprom_seq_read
  3882  0E57                     _eeprom_seq_read:	
  3883                           
  3884                           ;incstack = 0
  3885                           ; Regs used in _eeprom_seq_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3886                           ;eeprom_seq_read@start_addr stored from wreg
  3887  0E57  0020               	movlb	0	; select bank0
  3888  0E58  00C7               	movwf	eeprom_seq_read@start_addr
  3889                           
  3890                           ;eeprom.c: 72: uint8_t i;
  3891                           ;eeprom.c: 74: i2c_start();
  3892  0E59  3189  216E  318E   	fcall	_i2c_start
  3893                           
  3894                           ;eeprom.c: 75: send_eeprom_write();
  3895  0E5C  3188  205E  318E   	fcall	_send_eeprom_write
  3896                           
  3897                           ;eeprom.c: 76: i2c_wait_for_ack();
  3898  0E5F  3189  2122  318E   	fcall	_i2c_wait_for_ack
  3899                           
  3900                           ;eeprom.c: 77: i2c_write_data(start_addr);
  3901  0E62  0020               	movlb	0	; select bank0
  3902  0E63  0847               	movf	eeprom_seq_read@start_addr,w
  3903  0E64  3189  21EA  318E   	fcall	_i2c_write_data
  3904                           
  3905                           ;eeprom.c: 78: i2c_wait_for_ack();
  3906  0E67  3189  2122  318E   	fcall	_i2c_wait_for_ack
  3907                           
  3908                           ;eeprom.c: 80: i2c_start();
  3909  0E6A  3189  216E  318E   	fcall	_i2c_start
  3910                           
  3911                           ;eeprom.c: 81: send_eeprom_read();
  3912  0E6D  3188  2064  318E   	fcall	_send_eeprom_read
  3913                           
  3914                           ;eeprom.c: 82: i2c_wait_for_ack();
  3915  0E70  3189  2122  318E   	fcall	_i2c_wait_for_ack
  3916                           
  3917                           ;eeprom.c: 83: for (i=0;i<len;i++) {
  3918  0E73  0020               	movlb	0	; select bank0
  3919  0E74  01C8               	clrf	eeprom_seq_read@i
  3920  0E75                     l4072:	
  3921  0E75  0844               	movf	eeprom_seq_read@len,w
  3922  0E76  0248               	subwf	eeprom_seq_read@i,w
  3923  0E77  1803               	btfsc	3,0
  3924  0E78  2EA2               	goto	l4074
  3925                           
  3926                           ;eeprom.c: 84: i2c_gen_read();
  3927  0E79  3189  215A  318E   	fcall	_i2c_gen_read
  3928                           
  3929                           ;eeprom.c: 85: return_data[i] = i2c_get_read_data();
  3930  0E7C  3188  2076  318E   	fcall	_i2c_get_read_data
  3931  0E7F  0020               	movlb	0	; select bank0
  3932  0E80  00C5               	movwf	??_eeprom_seq_read
  3933  0E81  0848               	movf	eeprom_seq_read@i,w
  3934  0E82  0743               	addwf	eeprom_seq_read@return_data,w
  3935  0E83  00C6               	movwf	??_eeprom_seq_read+1
  3936  0E84  0846               	movf	??_eeprom_seq_read+1,w
  3937  0E85  0086               	movwf	6
  3938  0E86  0187               	clrf	7
  3939  0E87  0845               	movf	??_eeprom_seq_read,w
  3940  0E88  0081               	movwf	1
  3941                           
  3942                           ;eeprom.c: 86: if (i == (len-1)) i2c_send_nack();
  3943  0E89  0844               	movf	eeprom_seq_read@len,w
  3944  0E8A  3EFF               	addlw	255
  3945  0E8B  00C5               	movwf	??_eeprom_seq_read
  3946  0E8C  30FF               	movlw	255
  3947  0E8D  1803               	skipnc
  3948  0E8E  3000               	movlw	0
  3949  0E8F  00C6               	movwf	??_eeprom_seq_read+1
  3950  0E90  0848               	movf	eeprom_seq_read@i,w
  3951  0E91  0645               	xorwf	??_eeprom_seq_read,w
  3952  0E92  0446               	iorwf	??_eeprom_seq_read+1,w
  3953  0E93  1D03               	skipz
  3954  0E94  2E99               	goto	l4068
  3955  0E95  3189  21C0  318E   	fcall	_i2c_send_nack
  3956  0E98  2E9C               	goto	l4070
  3957  0E99                     l4068:	
  3958                           
  3959                           ;eeprom.c: 87: else i2c_send_ack();
  3960  0E99  3189  21D5  318E   	fcall	_i2c_send_ack
  3961  0E9C                     l4070:	
  3962  0E9C  3001               	movlw	1
  3963  0E9D  0020               	movlb	0	; select bank0
  3964  0E9E  00C5               	movwf	??_eeprom_seq_read
  3965  0E9F  0845               	movf	??_eeprom_seq_read,w
  3966  0EA0  07C8               	addwf	eeprom_seq_read@i,f
  3967  0EA1  2E75               	goto	l4072
  3968  0EA2                     l4074:	
  3969                           
  3970                           ;eeprom.c: 88: }
  3971                           ;eeprom.c: 89: i2c_stop();
  3972  0EA2  3189  2182         	fcall	_i2c_stop
  3973  0EA4  0008               	return
  3974  0EA5                     __end_of_eeprom_seq_read:	
  3975                           
  3976                           	psect	text3
  3977  09D5                     __ptext3:	
  3978 ;; *************** function _i2c_send_ack *****************
  3979 ;; Defined at:
  3980 ;;		line 61 in file "lib/i2c.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    7
  4001 ;; This function calls:
  4002 ;;		_hard_lockup
  4003 ;; This function is called by:
  4004 ;;		_eeprom_seq_read
  4005 ;;		_am1805_update_pic_time
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           
  4010                           ;psect for function _i2c_send_ack
  4011  09D5                     _i2c_send_ack:	
  4012                           
  4013                           ;i2c.c: 62: ACKDT = 0;
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in _i2c_send_ack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4017  09D5  0024               	movlb	4	; select bank4
  4018  09D6  1296               	bcf	22,5	;volatile
  4019                           
  4020                           ;i2c.c: 63: ACKEN = 1;
  4021  09D7  1616               	bsf	22,4	;volatile
  4022                           
  4023                           ;i2c.c: 64: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  4024  09D8  0020               	movlb	0	; select bank0
  4025  09D9  0195               	clrf	21	;volatile
  4026  09DA  168B               	bsf	11,5	;volatile
  4027  09DB  01FA               	clrf	_tmr0_overflow
  4028  09DC                     l4024:	
  4029                           ;i2c.c: 65: while(ACKEN) {
  4030                           
  4031  09DC  0024               	movlb	4	; select bank4
  4032  09DD  1E16               	btfss	22,4	;volatile
  4033  09DE  29E8               	goto	l156
  4034                           
  4035                           ;i2c.c: 66: if (tmr0_overflow > 10) hard_lockup(2);
  4036  09DF  300B               	movlw	11
  4037  09E0  027A               	subwf	_tmr0_overflow,w
  4038  09E1  1C03               	skipc
  4039  09E2  29DC               	goto	l4024
  4040  09E3  3002               	movlw	2
  4041  09E4  318F  27A5  3189   	fcall	_hard_lockup
  4042  09E7  29DC               	goto	l4024
  4043  09E8                     l156:	
  4044                           
  4045                           ;i2c.c: 67: }
  4046                           ;i2c.c: 68: } TMR0IE = 0;
  4047  09E8  128B               	bcf	11,5	;volatile
  4048  09E9  0008               	return
  4049  09EA                     __end_of_i2c_send_ack:	
  4050                           
  4051                           	psect	text4
  4052  084F                     __ptext4:	
  4053 ;; *************** function _adjusted_start *****************
  4054 ;; Defined at:
  4055 ;;		line 39 in file "sys/brex.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:   12
  4076 ;; This function calls:
  4077 ;;		_cti_instruction_loop
  4078 ;; This function is called by:
  4079 ;;		_sleep_start
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function _adjusted_start
  4085  084F                     _adjusted_start:	
  4086                           
  4087                           ;brex.c: 40: cti_instruction_loop();
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in _adjusted_start: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4091  084F  3187  2744         	fcall	_cti_instruction_loop
  4092  0851  0008               	return
  4093  0852                     __end_of_adjusted_start:	
  4094                           
  4095                           	psect	text5
  4096  0744                     __ptext5:	
  4097 ;; *************** function _cti_instruction_loop *****************
  4098 ;; Defined at:
  4099 ;;		line 81 in file "sys/cti.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  n               2    5[BANK1 ] unsigned int 
  4104 ;;  next_instruc    1   10[BANK1 ] unsigned char 
  4105 ;;  high_n          1    9[BANK1 ] unsigned char 
  4106 ;;  low_n           1    8[BANK1 ] unsigned char 
  4107 ;;  instruction     1    7[BANK1 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4118 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4119 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;Total ram usage:       11 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:   11
  4124 ;; This function calls:
  4125 ;;		_eeprom_single_read
  4126 ;;		_eeprom_single_write
  4127 ;;		_i3gnav
  4128 ;;		_idsn
  4129 ;;		_reset_instruction_ptr
  4130 ;;		_uart_write_string
  4131 ;; This function is called by:
  4132 ;;		_main
  4133 ;;		_adjusted_start
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           
  4138                           ;psect for function _cti_instruction_loop
  4139  0744                     _cti_instruction_loop:	
  4140                           
  4141                           ;cti.c: 89: switch (instruction) {
  4142  0744  2F78               	goto	l698
  4143  0745                     l4002:	
  4144                           ;cti.c: 90: case 3:
  4145                           
  4146                           
  4147                           ;cti.c: 91: i3gnav();
  4148  0745  3186  263E  3187   	fcall	_i3gnav
  4149                           
  4150                           ;cti.c: 92: eeprom_single_write(next_instruction_address + 3, 0x4F);
  4151  0748  304F               	movlw	79
  4152  0749  0021               	movlb	1	; select bank1
  4153  074A  00D1               	movwf	??_cti_instruction_loop^(0+128)
  4154  074B  0851               	movf	??_cti_instruction_loop^(0+128),w
  4155  074C  0020               	movlb	0	; select bank0
  4156  074D  00C3               	movwf	eeprom_single_write@addr
  4157  074E  0021               	movlb	1	; select bank1
  4158  074F  085B               	movf	cti_instruction_loop@next_instruction_address^(0+128),w
  4159  0750  3E03               	addlw	3
  4160  0751  318A  228B  3187   	fcall	_eeprom_single_write
  4161                           
  4162                           ;cti.c: 93: break;
  4163  0754  2F78               	goto	l698
  4164  0755                     l4004:	
  4165                           ;cti.c: 94: case 4:
  4166                           
  4167                           
  4168                           ;cti.c: 95: idsn(n);
  4169  0755  0021               	movlb	1	; select bank1
  4170  0756  0857               	movf	(cti_instruction_loop@n+1)^(0+128),w
  4171  0757  0020               	movlb	0	; select bank0
  4172  0758  00CA               	movwf	idsn@n+1
  4173  0759  0021               	movlb	1	; select bank1
  4174  075A  0856               	movf	cti_instruction_loop@n^(0+128),w
  4175  075B  0020               	movlb	0	; select bank0
  4176  075C  00C9               	movwf	idsn@n
  4177  075D  3185  25B9  3187   	fcall	_idsn
  4178                           
  4179                           ;cti.c: 96: eeprom_single_write(next_instruction_address + 3, 0x4F);
  4180  0760  304F               	movlw	79
  4181  0761  0021               	movlb	1	; select bank1
  4182  0762  00D1               	movwf	??_cti_instruction_loop^(0+128)
  4183  0763  0851               	movf	??_cti_instruction_loop^(0+128),w
  4184  0764  0020               	movlb	0	; select bank0
  4185  0765  00C3               	movwf	eeprom_single_write@addr
  4186  0766  0021               	movlb	1	; select bank1
  4187  0767  085B               	movf	cti_instruction_loop@next_instruction_address^(0+128),w
  4188  0768  3E03               	addlw	3
  4189  0769  318A  228B  3187   	fcall	_eeprom_single_write
  4190                           
  4191                           ;cti.c: 97: break;
  4192  076C  2F78               	goto	l698
  4193  076D                     l4006:	
  4194                           ;cti.c: 99: case 0:
  4195                           
  4196                           
  4197                           ;cti.c: 100: uart_write_string("End of instruction pattern.\r\n");
  4198  076D  3088               	movlw	low (STR_25| (0+32768))
  4199  076E  0020               	movlb	0	; select bank0
  4200  076F  00A3               	movwf	uart_write_string@str
  4201  0770  3081               	movlw	high (STR_25| (0+32768))
  4202  0771  00A4               	movwf	uart_write_string@str+1
  4203  0772  318A  2234  3187   	fcall	_uart_write_string
  4204                           
  4205                           ;cti.c: 101: reset_instruction_ptr();
  4206  0775  3189  2111  3187   	fcall	_reset_instruction_ptr
  4207  0778                     l698:	
  4208                           ;incstack = 0
  4209                           ; Regs used in _cti_instruction_loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4210                           ;cti.c: 82: while(1) {
  4211                           
  4212                           ;cti.c: 103: }
  4213                           
  4214                           ;cti.c: 102: break;
  4215                           
  4216                           
  4217                           ;cti.c: 83: uart_write_string("Getting next CTI instruction...\r\n");
  4218  0778  3008               	movlw	low (STR_24| (0+32768))
  4219  0779  0020               	movlb	0	; select bank0
  4220  077A  00A3               	movwf	uart_write_string@str
  4221  077B  3081               	movlw	high (STR_24| (0+32768))
  4222  077C  00A4               	movwf	uart_write_string@str+1
  4223  077D  318A  2234  3187   	fcall	_uart_write_string
  4224                           
  4225                           ;cti.c: 84: uint8_t next_instruction_address = eeprom_single_read(0x4F);
  4226  0780  304F               	movlw	79
  4227  0781  318C  2400  3187   	fcall	_eeprom_single_read
  4228  0784  0021               	movlb	1	; select bank1
  4229  0785  00D1               	movwf	??_cti_instruction_loop^(0+128)
  4230  0786  0851               	movf	??_cti_instruction_loop^(0+128),w
  4231  0787  00DB               	movwf	cti_instruction_loop@next_instruction_address^(0+128)
  4232                           
  4233                           ;cti.c: 85: uint8_t instruction = eeprom_single_read(next_instruction_address);
  4234  0788  085B               	movf	cti_instruction_loop@next_instruction_address^(0+128),w
  4235  0789  318C  2400  3187   	fcall	_eeprom_single_read
  4236  078C  0021               	movlb	1	; select bank1
  4237  078D  00D1               	movwf	??_cti_instruction_loop^(0+128)
  4238  078E  0851               	movf	??_cti_instruction_loop^(0+128),w
  4239  078F  00D8               	movwf	cti_instruction_loop@instruction^(0+128)
  4240                           
  4241                           ;cti.c: 86: uint8_t low_n = eeprom_single_read(next_instruction_address + 1);
  4242  0790  085B               	movf	cti_instruction_loop@next_instruction_address^(0+128),w
  4243  0791  3E01               	addlw	1
  4244  0792  318C  2400  3187   	fcall	_eeprom_single_read
  4245  0795  0021               	movlb	1	; select bank1
  4246  0796  00D1               	movwf	??_cti_instruction_loop^(0+128)
  4247  0797  0851               	movf	??_cti_instruction_loop^(0+128),w
  4248  0798  00D9               	movwf	cti_instruction_loop@low_n^(0+128)
  4249                           
  4250                           ;cti.c: 87: uint8_t high_n = eeprom_single_read(next_instruction_address + 2);
  4251  0799  085B               	movf	cti_instruction_loop@next_instruction_address^(0+128),w
  4252  079A  3E02               	addlw	2
  4253  079B  318C  2400  3187   	fcall	_eeprom_single_read
  4254  079E  0021               	movlb	1	; select bank1
  4255  079F  00D1               	movwf	??_cti_instruction_loop^(0+128)
  4256  07A0  0851               	movf	??_cti_instruction_loop^(0+128),w
  4257  07A1  00DA               	movwf	cti_instruction_loop@high_n^(0+128)
  4258                           
  4259                           ;cti.c: 88: uint16_t n = ((uint16_t)(high_n << 8) | low_n);
  4260  07A2  0859               	movf	cti_instruction_loop@low_n^(0+128),w
  4261  07A3  00D1               	movwf	??_cti_instruction_loop^(0+128)
  4262  07A4  01D2               	clrf	(??_cti_instruction_loop^(0+128)+1)
  4263  07A5  085A               	movf	cti_instruction_loop@high_n^(0+128),w
  4264  07A6  00D3               	movwf	(??_cti_instruction_loop+2)^(0+128)
  4265  07A7  01D4               	clrf	((??_cti_instruction_loop+2)^(0+128)+1)
  4266  07A8  0853               	movf	(??_cti_instruction_loop+2)^(0+128),w
  4267  07A9  00D4               	movwf	((??_cti_instruction_loop+2)^(0+128)+1)
  4268  07AA  01D3               	clrf	(??_cti_instruction_loop+2)^(0+128)
  4269  07AB  0851               	movf	??_cti_instruction_loop^(0+128),w
  4270  07AC  0453               	iorwf	(??_cti_instruction_loop+2)^(0+128),w
  4271  07AD  00D6               	movwf	cti_instruction_loop@n^(0+128)
  4272  07AE  0852               	movf	(??_cti_instruction_loop+1)^(0+128),w
  4273  07AF  0454               	iorwf	(??_cti_instruction_loop+3)^(0+128),w
  4274  07B0  00D7               	movwf	(cti_instruction_loop@n+1)^(0+128)
  4275  07B1  0021               	movlb	1	; select bank1
  4276  07B2  0858               	movf	cti_instruction_loop@instruction^(0+128),w
  4277                           
  4278                           ; Switch size 1, requested type "space"
  4279                           ; Number of cases is 3, Range of values is 0 to 4
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte           10     6 (average)
  4283                           ; direct_byte           16     6 (fixed)
  4284                           ; jumptable            260     6 (fixed)
  4285                           ;	Chosen strategy is simple_byte
  4286  07B3  3A00               	xorlw	0	; case 0
  4287  07B4  1903               	skipnz
  4288  07B5  2F6D               	goto	l4006
  4289  07B6  3A03               	xorlw	3	; case 3
  4290  07B7  1903               	skipnz
  4291  07B8  2F45               	goto	l4002
  4292  07B9  3A07               	xorlw	7	; case 4
  4293  07BA  1903               	skipnz
  4294  07BB  2F55               	goto	l4004
  4295  07BC  2F78               	goto	l698
  4296  07BD  2F78               	goto	l698
  4297  07BE                     __end_of_cti_instruction_loop:	
  4298                           
  4299                           	psect	text6
  4300  0911                     __ptext6:	
  4301 ;; *************** function _reset_instruction_ptr *****************
  4302 ;; Defined at:
  4303 ;;		line 34 in file "sys/brex.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;		None
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;		None
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;Total ram usage:        1 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    9
  4324 ;; This function calls:
  4325 ;;		_eeprom_single_write
  4326 ;;		_uart_write_string
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;;		_cti_instruction_loop
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function _reset_instruction_ptr
  4335  0911                     _reset_instruction_ptr:	
  4336                           
  4337                           ;brex.c: 35: eeprom_single_write(0x50, 0x4F);
  4338                           
  4339                           ;incstack = 0
  4340                           ; Regs used in _reset_instruction_ptr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4341  0911  304F               	movlw	79
  4342  0912  0020               	movlb	0	; select bank0
  4343  0913  00C5               	movwf	??_reset_instruction_ptr
  4344  0914  0845               	movf	??_reset_instruction_ptr,w
  4345  0915  00C3               	movwf	eeprom_single_write@addr
  4346  0916  3050               	movlw	80
  4347  0917  318A  228B  3189   	fcall	_eeprom_single_write
  4348                           
  4349                           ;brex.c: 36: uart_write_string("Resetting instruction ptr to 0x50.\r\n");
  4350  091A  30E3               	movlw	low (STR_13| (0+32768))
  4351  091B  0020               	movlb	0	; select bank0
  4352  091C  00A3               	movwf	uart_write_string@str
  4353  091D  3080               	movlw	high (STR_13| (0+32768))
  4354  091E  00A4               	movwf	uart_write_string@str+1
  4355  091F  318A  2234         	fcall	_uart_write_string
  4356  0921  0008               	return
  4357  0922                     __end_of_reset_instruction_ptr:	
  4358                           
  4359                           	psect	text7
  4360  05B9                     __ptext7:	
  4361 ;; *************** function _idsn *****************
  4362 ;; Defined at:
  4363 ;;		line 47 in file "sys/cti.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  n               2   41[BANK0 ] unsigned int 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  debug          20   47[BANK0 ] unsigned char [20]
  4368 ;;  remainder       1   68[BANK0 ] unsigned char 
  4369 ;;  quotient        1   67[BANK0 ] unsigned char 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;Total ram usage:       28 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:   10
  4386 ;; This function calls:
  4387 ;;		_am1805_initiate_ctdn_sleep
  4388 ;;		_am1805_start_ctdn_tmr
  4389 ;;		_eeprom_single_write
  4390 ;;		_sprintf
  4391 ;;		_uart_write_string
  4392 ;; This function is called by:
  4393 ;;		_cti_instruction_loop
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           
  4398                           ;psect for function _idsn
  4399  05B9                     _idsn:	
  4400                           
  4401                           ;cti.c: 48: uint8_t quotient = 0;
  4402                           
  4403                           ;incstack = 0
  4404                           ; Regs used in _idsn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4405  05B9  0020               	movlb	0	; select bank0
  4406  05BA  01E3               	clrf	idsn@quotient
  4407                           
  4408                           ;cti.c: 49: uint8_t remainder = 0;
  4409  05BB  01E4               	clrf	idsn@remainder
  4410  05BC                     l3962:	
  4411                           ;cti.c: 51: while (n > 255) {
  4412                           
  4413  05BC  3001               	movlw	1
  4414  05BD  024A               	subwf	idsn@n+1,w
  4415  05BE  3000               	movlw	0
  4416  05BF  1903               	skipnz
  4417  05C0  0249               	subwf	idsn@n,w
  4418  05C1  1C03               	btfss	3,0
  4419  05C2  2DCC               	goto	l3964
  4420                           
  4421                           ;cti.c: 52: quotient++;
  4422  05C3  3001               	movlw	1
  4423  05C4  00CB               	movwf	??_idsn
  4424  05C5  084B               	movf	??_idsn,w
  4425  05C6  07E3               	addwf	idsn@quotient,f
  4426                           
  4427                           ;cti.c: 53: n -= 255;
  4428  05C7  30FF               	movlw	255
  4429  05C8  02C9               	subwf	idsn@n,f
  4430  05C9  3000               	movlw	0
  4431  05CA  3BCA               	subwfb	idsn@n+1,f
  4432  05CB  2DBC               	goto	l3962
  4433  05CC                     l3964:	
  4434                           
  4435                           ;cti.c: 54: }
  4436                           ;cti.c: 56: remainder = n;
  4437  05CC  0849               	movf	idsn@n,w
  4438  05CD  00CB               	movwf	??_idsn
  4439  05CE  084B               	movf	??_idsn,w
  4440  05CF  00E4               	movwf	idsn@remainder
  4441                           
  4442                           ;cti.c: 58: char debug[20];
  4443                           ;cti.c: 59: sprintf(debug, "n=%dq=%dr=%d", n, quotient, remainder);
  4444  05D0  30EA               	movlw	low (STR_19| (0+32768))
  4445  05D1  00A7               	movwf	sprintf@f
  4446  05D2  3082               	movlw	high (STR_19| (0+32768))
  4447  05D3  00A8               	movwf	sprintf@f+1
  4448  05D4  084A               	movf	idsn@n+1,w
  4449  05D5  00AA               	movwf	?_sprintf+3
  4450  05D6  0849               	movf	idsn@n,w
  4451  05D7  00A9               	movwf	?_sprintf+2
  4452  05D8  0863               	movf	idsn@quotient,w
  4453  05D9  00CB               	movwf	??_idsn
  4454  05DA  01CC               	clrf	??_idsn+1
  4455  05DB  084B               	movf	??_idsn,w
  4456  05DC  00AB               	movwf	?_sprintf+4
  4457  05DD  084C               	movf	??_idsn+1,w
  4458  05DE  00AC               	movwf	?_sprintf+5
  4459  05DF  0864               	movf	idsn@remainder,w
  4460  05E0  00CD               	movwf	??_idsn+2
  4461  05E1  01CE               	clrf	??_idsn+3
  4462  05E2  084D               	movf	??_idsn+2,w
  4463  05E3  00AD               	movwf	?_sprintf+6
  4464  05E4  084E               	movf	??_idsn+3,w
  4465  05E5  00AE               	movwf	?_sprintf+7
  4466  05E6  304F               	movlw	(low (idsn@debug| 0))& (0+255)
  4467  05E7  3184  24EB  3185   	fcall	_sprintf
  4468                           
  4469                           ;cti.c: 60: uart_write_string("Preparing to sleep with");
  4470  05EA  300F               	movlw	low (STR_20| (0+32768))
  4471  05EB  0020               	movlb	0	; select bank0
  4472  05EC  00A3               	movwf	uart_write_string@str
  4473  05ED  3082               	movlw	high (STR_20| (0+32768))
  4474  05EE  00A4               	movwf	uart_write_string@str+1
  4475  05EF  318A  2234  3185   	fcall	_uart_write_string
  4476                           
  4477                           ;cti.c: 61: uart_write_string(debug);
  4478  05F2  304F               	movlw	low idsn@debug
  4479  05F3  0020               	movlb	0	; select bank0
  4480  05F4  00A3               	movwf	uart_write_string@str
  4481  05F5  3000               	movlw	high idsn@debug
  4482  05F6  00A4               	movwf	uart_write_string@str+1
  4483  05F7  318A  2234  3185   	fcall	_uart_write_string
  4484                           
  4485                           ;cti.c: 62: uart_write_string("as sleep vars.\r\n");
  4486  05FA  308C               	movlw	low (STR_21| (0+32768))
  4487  05FB  0020               	movlb	0	; select bank0
  4488  05FC  00A3               	movwf	uart_write_string@str
  4489  05FD  3082               	movlw	high (STR_21| (0+32768))
  4490  05FE  00A4               	movwf	uart_write_string@str+1
  4491  05FF  318A  2234  3185   	fcall	_uart_write_string
  4492                           
  4493                           ;cti.c: 64: if (quotient > 0) {
  4494  0602  0020               	movlb	0	; select bank0
  4495  0603  0863               	movf	idsn@quotient,w
  4496  0604  1903               	btfsc	3,2
  4497  0605  2E1E               	goto	l3982
  4498                           
  4499                           ;cti.c: 65: eeprom_single_write(quotient, 0x00);
  4500  0606  01C3               	clrf	eeprom_single_write@addr
  4501  0607  0863               	movf	idsn@quotient,w
  4502  0608  318A  228B  3185   	fcall	_eeprom_single_write
  4503                           
  4504                           ;cti.c: 66: eeprom_single_write(remainder, 0x02);
  4505  060B  3002               	movlw	2
  4506  060C  0020               	movlb	0	; select bank0
  4507  060D  00CB               	movwf	??_idsn
  4508  060E  084B               	movf	??_idsn,w
  4509  060F  00C3               	movwf	eeprom_single_write@addr
  4510  0610  0864               	movf	idsn@remainder,w
  4511  0611  318A  228B  3185   	fcall	_eeprom_single_write
  4512                           
  4513                           ;cti.c: 67: uart_write_string("Starting CTDN timer at 255.\r\n");
  4514  0614  306A               	movlw	low (STR_22| (0+32768))
  4515  0615  0020               	movlb	0	; select bank0
  4516  0616  00A3               	movwf	uart_write_string@str
  4517  0617  3081               	movlw	high (STR_22| (0+32768))
  4518  0618  00A4               	movwf	uart_write_string@str+1
  4519  0619  318A  2234  3185   	fcall	_uart_write_string
  4520                           
  4521                           ;cti.c: 68: am1805_start_ctdn_tmr(255);
  4522  061C  30FF               	movlw	255
  4523  061D  2E37               	goto	L2
  4524  061E                     l3982:	
  4525                           ;cti.c: 69: } else {
  4526                           
  4527                           
  4528                           ;cti.c: 70: eeprom_single_write(0, 0x00);
  4529  061E  0020               	movlb	0	; select bank0
  4530  061F  01C3               	clrf	eeprom_single_write@addr
  4531  0620  3000               	movlw	0
  4532  0621  318A  228B  3185   	fcall	_eeprom_single_write
  4533                           
  4534                           ;cti.c: 71: eeprom_single_write(remainder, 0x02);
  4535  0624  3002               	movlw	2
  4536  0625  0020               	movlb	0	; select bank0
  4537  0626  00CB               	movwf	??_idsn
  4538  0627  084B               	movf	??_idsn,w
  4539  0628  00C3               	movwf	eeprom_single_write@addr
  4540  0629  0864               	movf	idsn@remainder,w
  4541  062A  318A  228B  3185   	fcall	_eeprom_single_write
  4542                           
  4543                           ;cti.c: 72: uart_write_string("Starting CTDN timer at r.\r\n");
  4544  062D  30A6               	movlw	low (STR_23| (0+32768))
  4545  062E  0020               	movlb	0	; select bank0
  4546  062F  00A3               	movwf	uart_write_string@str
  4547  0630  3081               	movlw	high (STR_23| (0+32768))
  4548  0631  00A4               	movwf	uart_write_string@str+1
  4549  0632  318A  2234  3185   	fcall	_uart_write_string
  4550                           
  4551                           ;cti.c: 73: am1805_start_ctdn_tmr(remainder);
  4552  0635  0020               	movlb	0	; select bank0
  4553  0636  0864               	movf	idsn@remainder,w
  4554  0637                     L2:	
  4555  0637  318B  237C  3185   	fcall	_am1805_start_ctdn_tmr
  4556                           
  4557                           ;cti.c: 74: }
  4558                           ;cti.c: 75: am1805_initiate_ctdn_sleep();
  4559  063A  318A  2250  3185   	fcall	_am1805_initiate_ctdn_sleep
  4560  063D                     l692:	
  4561                           ;cti.c: 76: while (1);
  4562                           
  4563  063D  2E3D               	goto	l692
  4564  063E                     __end_of_idsn:	
  4565                           
  4566                           	psect	text8
  4567  04EB                     __ptext8:	
  4568 ;; *************** function _sprintf *****************
  4569 ;; Defined at:
  4570 ;;		line 492 in file "/opt/microchip/xc8/v1.36/sources/common/doprnt.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  sp              1    wreg     PTR unsigned char 
  4573 ;;		 -> idsn@debug(20), am1805_print_pic_time@pictime(30), 
  4574 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  4575 ;;		 -> STR_19(13), STR_6(20), 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  sp              1   30[BANK0 ] PTR unsigned char 
  4578 ;;		 -> idsn@debug(20), am1805_print_pic_time@pictime(30), 
  4579 ;;  tmpval          4    0        struct .
  4580 ;;  val             2   28[BANK0 ] unsigned int 
  4581 ;;  cp              2    0        PTR const unsigned char 
  4582 ;;  len             2    0        unsigned int 
  4583 ;;  c               1   31[BANK0 ] char 
  4584 ;;  prec            1   27[BANK0 ] char 
  4585 ;;  flag            1   26[BANK0 ] unsigned char 
  4586 ;;  ap              1   25[BANK0 ] PTR void [1]
  4587 ;;		 -> ?_sprintf(2), 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  2    7[BANK0 ] int 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4597 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;Total ram usage:       25 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    2
  4604 ;; This function calls:
  4605 ;;		___lwdiv
  4606 ;;		___lwmod
  4607 ;; This function is called by:
  4608 ;;		_idsn
  4609 ;;		_am1805_print_pic_time
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _sprintf
  4615  04EB                     _sprintf:	
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4619                           ;sprintf@sp stored from wreg
  4620  04EB  0020               	movlb	0	; select bank0
  4621  04EC  00BE               	movwf	sprintf@sp
  4622                           
  4623                           ;doprnt.c: 494: va_list ap;
  4624                           ;doprnt.c: 499: signed char c;
  4625                           ;doprnt.c: 506: signed char prec;
  4626                           ;doprnt.c: 508: unsigned char flag;
  4627                           ;doprnt.c: 523: union {
  4628                           ;doprnt.c: 524: unsigned long vd;
  4629                           ;doprnt.c: 525: double integ;
  4630                           ;doprnt.c: 526: } tmpval;
  4631                           ;doprnt.c: 528: unsigned int val;
  4632                           ;doprnt.c: 529: unsigned len;
  4633                           ;doprnt.c: 530: const char * cp;
  4634                           ;doprnt.c: 533: *ap = __va_start();
  4635  04ED  3029               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4636  04EE  00B5               	movwf	??_sprintf
  4637  04EF  0835               	movf	??_sprintf,w
  4638  04F0  00B9               	movwf	sprintf@ap
  4639  04F1                     l3828:	
  4640                           ;doprnt.c: 536: while(c = *f++) {
  4641                           
  4642  04F1  0828               	movf	sprintf@f+1,w
  4643  04F2  00B6               	movwf	??_sprintf+1
  4644  04F3  0827               	movf	sprintf@f,w
  4645  04F4  00B5               	movwf	??_sprintf
  4646  04F5  0AA7               	incf	sprintf@f,f
  4647  04F6  1903               	skipnz
  4648  04F7  0AA8               	incf	sprintf@f+1,f
  4649  04F8  0835               	movf	??_sprintf,w
  4650  04F9  0084               	movwf	4
  4651  04FA  0836               	movf	??_sprintf+1,w
  4652  04FB  0085               	movwf	5
  4653  04FC  0800               	movf	0,w	;code access
  4654  04FD  00B7               	movwf	??_sprintf+2
  4655  04FE  0837               	movf	??_sprintf+2,w
  4656  04FF  00BF               	movwf	sprintf@c
  4657  0500  083F               	movf	sprintf@c,w
  4658  0501  1903               	btfsc	3,2
  4659  0502  2DB4               	goto	l3830
  4660                           
  4661                           ;doprnt.c: 538: if(c != '%')
  4662  0503  3025               	movlw	37
  4663  0504  063F               	xorwf	sprintf@c,w
  4664  0505  1903               	btfsc	3,2
  4665  0506  2D13               	goto	l3784
  4666                           
  4667                           ;doprnt.c: 540: {
  4668                           ;doprnt.c: 541: ((*sp++ = (c)));
  4669  0507  083F               	movf	sprintf@c,w
  4670  0508  00B5               	movwf	??_sprintf
  4671  0509  083E               	movf	sprintf@sp,w
  4672  050A  0086               	movwf	6
  4673  050B  0187               	clrf	7
  4674  050C  0835               	movf	??_sprintf,w
  4675  050D  0081               	movwf	1
  4676  050E  3001               	movlw	1
  4677  050F  00B5               	movwf	??_sprintf
  4678  0510  0835               	movf	??_sprintf,w
  4679  0511  07BE               	addwf	sprintf@sp,f
  4680                           
  4681                           ;doprnt.c: 542: continue;
  4682  0512  2CF1               	goto	l3828
  4683  0513                     l3784:	
  4684                           
  4685                           ;doprnt.c: 543: }
  4686                           ;doprnt.c: 548: flag = 0;
  4687  0513  01BA               	clrf	sprintf@flag
  4688                           
  4689                           ;doprnt.c: 822: }
  4690                           
  4691                           ;doprnt.c: 813: continue;
  4692                           
  4693                           ;doprnt.c: 802: default:
  4694                           
  4695                           ;doprnt.c: 698: case 'i':
  4696                           ;doprnt.c: 699: break;
  4697                           
  4698                           ;doprnt.c: 697: case 'd':
  4699                           
  4700                           ;doprnt.c: 638: goto alldone;
  4701                           
  4702                           ;doprnt.c: 637: case 0:
  4703                           
  4704                           ;doprnt.c: 635: switch(c = *f++) {
  4705  0514  0828               	movf	sprintf@f+1,w
  4706  0515  00B6               	movwf	??_sprintf+1
  4707  0516  0827               	movf	sprintf@f,w
  4708  0517  00B5               	movwf	??_sprintf
  4709  0518  0AA7               	incf	sprintf@f,f
  4710  0519  1903               	skipnz
  4711  051A  0AA8               	incf	sprintf@f+1,f
  4712  051B  0835               	movf	??_sprintf,w
  4713  051C  0084               	movwf	4
  4714  051D  0836               	movf	??_sprintf+1,w
  4715  051E  0085               	movwf	5
  4716  051F  0800               	movf	0,w	;code access
  4717  0520  00BF               	movwf	sprintf@c
  4718                           
  4719                           ; Switch size 1, requested type "space"
  4720                           ; Number of cases is 3, Range of values is 0 to 105
  4721                           ; switch strategies available:
  4722                           ; Name         Instructions Cycles
  4723                           ; simple_byte           10     6 (average)
  4724                           ; direct_byte          218     6 (fixed)
  4725                           ; jumptable            260     6 (fixed)
  4726                           ;	Chosen strategy is simple_byte
  4727  0521  3A00               	xorlw	0	; case 0
  4728  0522  1903               	skipnz
  4729  0523  2DB4               	goto	l3830
  4730  0524  3A64               	xorlw	100	; case 100
  4731  0525  1903               	skipnz
  4732  0526  2D2B               	goto	l3790
  4733  0527  3A0D               	xorlw	13	; case 105
  4734  0528  1903               	skipnz
  4735  0529  2D2B               	goto	l3790
  4736  052A  2CF1               	goto	l3828
  4737  052B                     l3790:	
  4738                           
  4739                           ;doprnt.c: 1253: {
  4740                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4741  052B  0839               	movf	sprintf@ap,w
  4742  052C  0086               	movwf	6
  4743  052D  0187               	clrf	7
  4744  052E  3F40               	moviw [0]fsr1
  4745  052F  00BC               	movwf	sprintf@val
  4746  0530  3F41               	moviw [1]fsr1
  4747  0531  00BD               	movwf	sprintf@val+1
  4748  0532  3002               	movlw	2
  4749  0533  00B5               	movwf	??_sprintf
  4750  0534  0835               	movf	??_sprintf,w
  4751  0535  07B9               	addwf	sprintf@ap,f
  4752                           
  4753                           ;doprnt.c: 1261: if((int)val < 0) {
  4754  0536  1FBD               	btfss	sprintf@val+1,7
  4755  0537  2D41               	goto	l3800
  4756                           
  4757                           ;doprnt.c: 1262: flag |= 0x03;
  4758  0538  3003               	movlw	3
  4759  0539  00B5               	movwf	??_sprintf
  4760  053A  0835               	movf	??_sprintf,w
  4761  053B  04BA               	iorwf	sprintf@flag,f
  4762                           
  4763                           ;doprnt.c: 1263: val = -val;
  4764  053C  09BC               	comf	sprintf@val,f
  4765  053D  09BD               	comf	sprintf@val+1,f
  4766  053E  0ABC               	incf	sprintf@val,f
  4767  053F  1903               	skipnz
  4768  0540  0ABD               	incf	sprintf@val+1,f
  4769  0541                     l3800:	
  4770                           
  4771                           ;doprnt.c: 1264: }
  4772                           ;doprnt.c: 1266: }
  4773                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4774  0541  01BF               	clrf	sprintf@c
  4775  0542  0ABF               	incf	sprintf@c,f
  4776  0543  3005               	movlw	5
  4777  0544  063F               	xorwf	sprintf@c,w
  4778  0545  1903               	btfsc	3,2
  4779  0546  2D66               	goto	l3812
  4780  0547                     l3806:	
  4781                           
  4782                           ;doprnt.c: 1306: if(val < dpowers[c])
  4783  0547  083F               	movf	sprintf@c,w
  4784  0548  00B5               	movwf	??_sprintf
  4785  0549  01B6               	clrf	??_sprintf+1
  4786  054A  35B5               	lslf	??_sprintf,f
  4787  054B  0DB6               	rlf	??_sprintf+1,f
  4788  054C  3082               	movlw	low (_dpowers| (0+32768))
  4789  054D  0735               	addwf	??_sprintf,w
  4790  054E  0084               	movwf	4
  4791  054F  3080               	movlw	high (_dpowers| (0+32768))
  4792  0550  3D36               	addwfc	??_sprintf+1,w
  4793  0551  0085               	movwf	5
  4794  0552  3F00               	moviw [0]fsr0
  4795  0553  00B7               	movwf	??_sprintf+2
  4796  0554  3F01               	moviw [1]fsr0
  4797  0555  00B8               	movwf	??_sprintf+3
  4798  0556  0838               	movf	??_sprintf+3,w
  4799  0557  023D               	subwf	sprintf@val+1,w
  4800  0558  1D03               	skipz
  4801  0559  2D5C               	goto	u2415
  4802  055A  0837               	movf	??_sprintf+2,w
  4803  055B  023C               	subwf	sprintf@val,w
  4804  055C                     u2415:	
  4805  055C  1C03               	btfss	3,0
  4806  055D  2D66               	goto	l3812
  4807                           
  4808                           ;doprnt.c: 1307: break;
  4809  055E  3001               	movlw	1
  4810  055F  00B5               	movwf	??_sprintf
  4811  0560  0835               	movf	??_sprintf,w
  4812  0561  07BF               	addwf	sprintf@c,f
  4813  0562  3005               	movlw	5
  4814  0563  063F               	xorwf	sprintf@c,w
  4815  0564  1D03               	btfss	3,2
  4816  0565  2D47               	goto	l3806
  4817  0566                     l3812:	
  4818                           
  4819                           ;doprnt.c: 1422: {
  4820                           ;doprnt.c: 1438: if(flag & 0x03)
  4821  0566  083A               	movf	sprintf@flag,w
  4822  0567  3903               	andlw	3
  4823  0568  1903               	btfsc	3,2
  4824  0569  2D75               	goto	l3818
  4825                           
  4826                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4827  056A  302D               	movlw	45
  4828  056B  00B5               	movwf	??_sprintf
  4829  056C  083E               	movf	sprintf@sp,w
  4830  056D  0086               	movwf	6
  4831  056E  0187               	clrf	7
  4832  056F  0835               	movf	??_sprintf,w
  4833  0570  0081               	movwf	1
  4834  0571  3001               	movlw	1
  4835  0572  00B5               	movwf	??_sprintf
  4836  0573  0835               	movf	??_sprintf,w
  4837  0574  07BE               	addwf	sprintf@sp,f
  4838  0575                     l3818:	
  4839                           
  4840                           ;doprnt.c: 1469: }
  4841                           ;doprnt.c: 1472: prec = c;
  4842  0575  083F               	movf	sprintf@c,w
  4843  0576  00B5               	movwf	??_sprintf
  4844  0577  0835               	movf	??_sprintf,w
  4845  0578  00BB               	movwf	sprintf@prec
  4846  0579                     l3826:	
  4847                           ;doprnt.c: 1474: while(prec--) {
  4848                           
  4849  0579  30FF               	movlw	255
  4850  057A  00B5               	movwf	??_sprintf
  4851  057B  0835               	movf	??_sprintf,w
  4852  057C  07BB               	addwf	sprintf@prec,f
  4853  057D  0A3B               	incf	sprintf@prec,w
  4854  057E  1903               	btfsc	3,2
  4855  057F  2CF1               	goto	l3828
  4856                           
  4857                           ;doprnt.c: 1478: {
  4858                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4859  0580  300A               	movlw	10
  4860  0581  00A3               	movwf	___lwmod@divisor
  4861  0582  3000               	movlw	0
  4862  0583  00A4               	movwf	___lwmod@divisor+1
  4863  0584  083B               	movf	sprintf@prec,w
  4864  0585  00B5               	movwf	??_sprintf
  4865  0586  01B6               	clrf	??_sprintf+1
  4866  0587  35B5               	lslf	??_sprintf,f
  4867  0588  0DB6               	rlf	??_sprintf+1,f
  4868  0589  3082               	movlw	low (_dpowers| (0+32768))
  4869  058A  0735               	addwf	??_sprintf,w
  4870  058B  0084               	movwf	4
  4871  058C  3080               	movlw	high (_dpowers| (0+32768))
  4872  058D  3D36               	addwfc	??_sprintf+1,w
  4873  058E  0085               	movwf	5
  4874  058F  3F00               	moviw [0]fsr0
  4875  0590  00F3               	movwf	___lwdiv@divisor
  4876  0591  3F01               	moviw [1]fsr0
  4877  0592  00F4               	movwf	___lwdiv@divisor+1
  4878  0593  083D               	movf	sprintf@val+1,w
  4879  0594  00F6               	movwf	___lwdiv@dividend+1
  4880  0595  083C               	movf	sprintf@val,w
  4881  0596  00F5               	movwf	___lwdiv@dividend
  4882  0597  318C  2493  3184   	fcall	___lwdiv
  4883  059A  0874               	movf	?___lwdiv+1,w
  4884  059B  0020               	movlb	0	; select bank0
  4885  059C  00A6               	movwf	___lwmod@dividend+1
  4886  059D  0873               	movf	?___lwdiv,w
  4887  059E  00A5               	movwf	___lwmod@dividend
  4888  059F  318B  23D3  3184   	fcall	___lwmod
  4889  05A2  0020               	movlb	0	; select bank0
  4890  05A3  0823               	movf	?___lwmod,w
  4891  05A4  3E30               	addlw	48
  4892  05A5  00B7               	movwf	??_sprintf+2
  4893  05A6  0837               	movf	??_sprintf+2,w
  4894  05A7  00BF               	movwf	sprintf@c
  4895                           
  4896                           ;doprnt.c: 1523: }
  4897                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4898  05A8  083F               	movf	sprintf@c,w
  4899  05A9  00B5               	movwf	??_sprintf
  4900  05AA  083E               	movf	sprintf@sp,w
  4901  05AB  0086               	movwf	6
  4902  05AC  0187               	clrf	7
  4903  05AD  0835               	movf	??_sprintf,w
  4904  05AE  0081               	movwf	1
  4905  05AF  3001               	movlw	1
  4906  05B0  00B5               	movwf	??_sprintf
  4907  05B1  0835               	movf	??_sprintf,w
  4908  05B2  07BE               	addwf	sprintf@sp,f
  4909  05B3  2D79               	goto	l3826
  4910  05B4                     l3830:	
  4911                           ;doprnt.c: 1525: }
  4912                           ;doprnt.c: 1533: }
  4913                           ;doprnt.c: 1535: alldone:
  4914                           
  4915                           
  4916                           ;doprnt.c: 1538: *sp = 0;
  4917  05B4  083E               	movf	sprintf@sp,w
  4918  05B5  0086               	movwf	6
  4919  05B6  0187               	clrf	7
  4920  05B7  0181               	clrf	1
  4921  05B8  0008               	return
  4922  05B9                     __end_of_sprintf:	
  4923                           ;doprnt.c: 1540: return 0;
  4924                           ;	Return value of _sprintf is never used
  4925                           
  4926                           
  4927                           	psect	text9
  4928  0BD3                     __ptext9:	
  4929 ;; *************** function ___lwmod *****************
  4930 ;; Defined at:
  4931 ;;		line 6 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  divisor         2    3[BANK0 ] unsigned int 
  4934 ;;  dividend        2    5[BANK0 ] unsigned int 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  counter         1    9[COMMON] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  2    3[BANK0 ] unsigned int 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4946 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4949 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;Total ram usage:        6 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    1
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_sprintf
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function ___lwmod
  4962  0BD3                     ___lwmod:	
  4963                           
  4964                           ;incstack = 0
  4965                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4966  0BD3  0020               	movlb	0	; select bank0
  4967  0BD4  0823               	movf	___lwmod@divisor,w
  4968  0BD5  0424               	iorwf	___lwmod@divisor+1,w
  4969  0BD6  1903               	btfsc	3,2
  4970  0BD7  2BFB               	goto	l3734
  4971  0BD8  01F9               	clrf	___lwmod@counter
  4972  0BD9  0AF9               	incf	___lwmod@counter,f
  4973  0BDA                     l3724:	
  4974  0BDA  1BA4               	btfsc	___lwmod@divisor+1,7
  4975  0BDB  2BE6               	goto	l3726
  4976  0BDC  3001               	movlw	1
  4977  0BDD                     u2295:	
  4978  0BDD  35A3               	lslf	___lwmod@divisor,f
  4979  0BDE  0DA4               	rlf	___lwmod@divisor+1,f
  4980  0BDF  0B89               	decfsz	9,f
  4981  0BE0  2BDD               	goto	u2295
  4982  0BE1  3001               	movlw	1
  4983  0BE2  00F8               	movwf	??___lwmod
  4984  0BE3  0878               	movf	??___lwmod,w
  4985  0BE4  07F9               	addwf	___lwmod@counter,f
  4986  0BE5  2BDA               	goto	l3724
  4987  0BE6                     l3726:	
  4988  0BE6  0824               	movf	___lwmod@divisor+1,w
  4989  0BE7  0226               	subwf	___lwmod@dividend+1,w
  4990  0BE8  1D03               	skipz
  4991  0BE9  2BEC               	goto	u2315
  4992  0BEA  0823               	movf	___lwmod@divisor,w
  4993  0BEB  0225               	subwf	___lwmod@dividend,w
  4994  0BEC                     u2315:	
  4995  0BEC  1C03               	skipc
  4996  0BED  2BF2               	goto	l3730
  4997  0BEE  0823               	movf	___lwmod@divisor,w
  4998  0BEF  02A5               	subwf	___lwmod@dividend,f
  4999  0BF0  0824               	movf	___lwmod@divisor+1,w
  5000  0BF1  3BA6               	subwfb	___lwmod@dividend+1,f
  5001  0BF2                     l3730:	
  5002  0BF2  3001               	movlw	1
  5003  0BF3                     u2325:	
  5004  0BF3  36A4               	lsrf	___lwmod@divisor+1,f
  5005  0BF4  0CA3               	rrf	___lwmod@divisor,f
  5006  0BF5  0B89               	decfsz	9,f
  5007  0BF6  2BF3               	goto	u2325
  5008  0BF7  3001               	movlw	1
  5009  0BF8  02F9               	subwf	___lwmod@counter,f
  5010  0BF9  1D03               	btfss	3,2
  5011  0BFA  2BE6               	goto	l3726
  5012  0BFB                     l3734:	
  5013  0BFB  0826               	movf	___lwmod@dividend+1,w
  5014  0BFC  00A4               	movwf	?___lwmod+1
  5015  0BFD  0825               	movf	___lwmod@dividend,w
  5016  0BFE  00A3               	movwf	?___lwmod
  5017  0BFF  0008               	return
  5018  0C00                     __end_of___lwmod:	
  5019                           
  5020                           	psect	text10
  5021  0C93                     __ptext10:	
  5022 ;; *************** function ___lwdiv *****************
  5023 ;; Defined at:
  5024 ;;		line 6 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  divisor         2    3[COMMON] unsigned int 
  5027 ;;  dividend        2    5[COMMON] unsigned int 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  quotient        2    1[BANK0 ] unsigned int 
  5030 ;;  counter         1    0[BANK0 ] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  2    3[COMMON] unsigned int 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, status,0
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;Total ram usage:        8 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    1
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_sprintf
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           
  5055                           ;psect for function ___lwdiv
  5056  0C93                     ___lwdiv:	
  5057                           
  5058                           ;incstack = 0
  5059                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5060  0C93  0020               	movlb	0	; select bank0
  5061  0C94  01A1               	clrf	___lwdiv@quotient
  5062  0C95  01A2               	clrf	___lwdiv@quotient+1
  5063  0C96  0873               	movf	___lwdiv@divisor,w
  5064  0C97  0474               	iorwf	___lwdiv@divisor+1,w
  5065  0C98  1903               	btfsc	3,2
  5066  0C99  2CC3               	goto	l3712
  5067  0C9A  01A0               	clrf	___lwdiv@counter
  5068  0C9B  0AA0               	incf	___lwdiv@counter,f
  5069  0C9C                     l3700:	
  5070  0C9C  1BF4               	btfsc	___lwdiv@divisor+1,7
  5071  0C9D  2CA8               	goto	l3702
  5072  0C9E  3001               	movlw	1
  5073  0C9F                     u2225:	
  5074  0C9F  35F3               	lslf	___lwdiv@divisor,f
  5075  0CA0  0DF4               	rlf	___lwdiv@divisor+1,f
  5076  0CA1  0B89               	decfsz	9,f
  5077  0CA2  2C9F               	goto	u2225
  5078  0CA3  3001               	movlw	1
  5079  0CA4  00F7               	movwf	??___lwdiv
  5080  0CA5  0877               	movf	??___lwdiv,w
  5081  0CA6  07A0               	addwf	___lwdiv@counter,f
  5082  0CA7  2C9C               	goto	l3700
  5083  0CA8                     l3702:	
  5084  0CA8  3001               	movlw	1
  5085  0CA9                     u2245:	
  5086  0CA9  35A1               	lslf	___lwdiv@quotient,f
  5087  0CAA  0DA2               	rlf	___lwdiv@quotient+1,f
  5088  0CAB  0B89               	decfsz	9,f
  5089  0CAC  2CA9               	goto	u2245
  5090  0CAD  0874               	movf	___lwdiv@divisor+1,w
  5091  0CAE  0276               	subwf	___lwdiv@dividend+1,w
  5092  0CAF  1D03               	skipz
  5093  0CB0  2CB3               	goto	u2255
  5094  0CB1  0873               	movf	___lwdiv@divisor,w
  5095  0CB2  0275               	subwf	___lwdiv@dividend,w
  5096  0CB3                     u2255:	
  5097  0CB3  1C03               	skipc
  5098  0CB4  2CBA               	goto	l3708
  5099  0CB5  0873               	movf	___lwdiv@divisor,w
  5100  0CB6  02F5               	subwf	___lwdiv@dividend,f
  5101  0CB7  0874               	movf	___lwdiv@divisor+1,w
  5102  0CB8  3BF6               	subwfb	___lwdiv@dividend+1,f
  5103  0CB9  1421               	bsf	___lwdiv@quotient,0
  5104  0CBA                     l3708:	
  5105  0CBA  3001               	movlw	1
  5106  0CBB                     u2265:	
  5107  0CBB  36F4               	lsrf	___lwdiv@divisor+1,f
  5108  0CBC  0CF3               	rrf	___lwdiv@divisor,f
  5109  0CBD  0B89               	decfsz	9,f
  5110  0CBE  2CBB               	goto	u2265
  5111  0CBF  3001               	movlw	1
  5112  0CC0  02A0               	subwf	___lwdiv@counter,f
  5113  0CC1  1D03               	btfss	3,2
  5114  0CC2  2CA8               	goto	l3702
  5115  0CC3                     l3712:	
  5116  0CC3  0822               	movf	___lwdiv@quotient+1,w
  5117  0CC4  00F4               	movwf	?___lwdiv+1
  5118  0CC5  0821               	movf	___lwdiv@quotient,w
  5119  0CC6  00F3               	movwf	?___lwdiv
  5120  0CC7  0008               	return
  5121  0CC8                     __end_of___lwdiv:	
  5122                           
  5123                           	psect	text11
  5124  0B7C                     __ptext11:	
  5125 ;; *************** function _am1805_start_ctdn_tmr *****************
  5126 ;; Defined at:
  5127 ;;		line 52 in file "lib/am1805.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  amt_time        1    wreg     unsigned char 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  amt_time        1   40[BANK0 ] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;Total ram usage:        4 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    9
  5148 ;; This function calls:
  5149 ;;		_am1805_write_to_addr
  5150 ;; This function is called by:
  5151 ;;		_sleep_start
  5152 ;;		_idsn
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           
  5157                           ;psect for function _am1805_start_ctdn_tmr
  5158  0B7C                     _am1805_start_ctdn_tmr:	
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _am1805_start_ctdn_tmr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5162                           ;am1805_start_ctdn_tmr@amt_time stored from wreg
  5163  0B7C  0020               	movlb	0	; select bank0
  5164  0B7D  00C8               	movwf	am1805_start_ctdn_tmr@amt_time
  5165                           
  5166                           ;am1805.c: 53: am1805_write_to_addr(amt_time, 0x19);
  5167  0B7E  3019               	movlw	25
  5168  0B7F  00C5               	movwf	??_am1805_start_ctdn_tmr
  5169  0B80  0845               	movf	??_am1805_start_ctdn_tmr,w
  5170  0B81  00C3               	movwf	am1805_write_to_addr@addr
  5171  0B82  0848               	movf	am1805_start_ctdn_tmr@amt_time,w
  5172  0B83  318A  226D  318B   	fcall	_am1805_write_to_addr
  5173                           
  5174                           ;am1805.c: 54: am1805_write_to_addr(0xC3, 0x18);
  5175  0B86  3018               	movlw	24
  5176  0B87  0020               	movlb	0	; select bank0
  5177  0B88  00C5               	movwf	??_am1805_start_ctdn_tmr
  5178  0B89  0845               	movf	??_am1805_start_ctdn_tmr,w
  5179  0B8A  00C3               	movwf	am1805_write_to_addr@addr
  5180  0B8B  30C3               	movlw	195
  5181  0B8C  318A  226D  318B   	fcall	_am1805_write_to_addr
  5182                           
  5183                           ;am1805.c: 55: _delay((unsigned long)((2000)*(2000000/4000.0)));
  5184  0B8F  3006               	movlw	6
  5185  0B90  0020               	movlb	0	; select bank0
  5186  0B91  00C7               	movwf	??_am1805_start_ctdn_tmr+2
  5187  0B92  3013               	movlw	19
  5188  0B93  00C6               	movwf	??_am1805_start_ctdn_tmr+1
  5189  0B94  30B1               	movlw	177
  5190  0B95  00C5               	movwf	??_am1805_start_ctdn_tmr
  5191  0B96                     u2747:	
  5192  0B96  0BC5               	decfsz	??_am1805_start_ctdn_tmr,f
  5193  0B97  2B96               	goto	u2747
  5194  0B98  0BC6               	decfsz	??_am1805_start_ctdn_tmr+1,f
  5195  0B99  2B96               	goto	u2747
  5196  0B9A  0BC7               	decfsz	??_am1805_start_ctdn_tmr+2,f
  5197  0B9B  2B96               	goto	u2747
  5198  0B9C  3200               	nop2
  5199                           
  5200                           ;am1805.c: 56: am1805_write_to_addr(0xC3, 0x18);
  5201  0B9D  3018               	movlw	24
  5202  0B9E  0020               	movlb	0	; select bank0
  5203  0B9F  00C5               	movwf	??_am1805_start_ctdn_tmr
  5204  0BA0  0845               	movf	??_am1805_start_ctdn_tmr,w
  5205  0BA1  00C3               	movwf	am1805_write_to_addr@addr
  5206  0BA2  30C3               	movlw	195
  5207  0BA3  318A  226D         	fcall	_am1805_write_to_addr
  5208  0BA5  0008               	return
  5209  0BA6                     __end_of_am1805_start_ctdn_tmr:	
  5210                           
  5211                           	psect	text12
  5212  0A50                     __ptext12:	
  5213 ;; *************** function _am1805_initiate_ctdn_sleep *****************
  5214 ;; Defined at:
  5215 ;;		line 59 in file "lib/am1805.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;Total ram usage:        1 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    9
  5236 ;; This function calls:
  5237 ;;		_am1805_write_to_addr
  5238 ;; This function is called by:
  5239 ;;		_sleep_start
  5240 ;;		_idsn
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           
  5245                           ;psect for function _am1805_initiate_ctdn_sleep
  5246  0A50                     _am1805_initiate_ctdn_sleep:	
  5247                           
  5248                           ;am1805.c: 60: am1805_write_to_addr(0x2D, 0x18);
  5249                           
  5250                           ;incstack = 0
  5251                           ; Regs used in _am1805_initiate_ctdn_sleep: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5252  0A50  3018               	movlw	24
  5253  0A51  0020               	movlb	0	; select bank0
  5254  0A52  00C5               	movwf	??_am1805_initiate_ctdn_sleep
  5255  0A53  0845               	movf	??_am1805_initiate_ctdn_sleep,w
  5256  0A54  00C3               	movwf	am1805_write_to_addr@addr
  5257  0A55  302D               	movlw	45
  5258  0A56  318A  226D  318A   	fcall	_am1805_write_to_addr
  5259                           
  5260                           ;am1805.c: 61: am1805_write_to_addr(0x00, 0x0F);
  5261  0A59  300F               	movlw	15
  5262  0A5A  0020               	movlb	0	; select bank0
  5263  0A5B  00C5               	movwf	??_am1805_initiate_ctdn_sleep
  5264  0A5C  0845               	movf	??_am1805_initiate_ctdn_sleep,w
  5265  0A5D  00C3               	movwf	am1805_write_to_addr@addr
  5266  0A5E  3000               	movlw	0
  5267  0A5F  318A  226D  318A   	fcall	_am1805_write_to_addr
  5268                           
  5269                           ;am1805.c: 62: am1805_write_to_addr(0x80, 0x17);
  5270  0A62  3017               	movlw	23
  5271  0A63  0020               	movlb	0	; select bank0
  5272  0A64  00C5               	movwf	??_am1805_initiate_ctdn_sleep
  5273  0A65  0845               	movf	??_am1805_initiate_ctdn_sleep,w
  5274  0A66  00C3               	movwf	am1805_write_to_addr@addr
  5275  0A67  3080               	movlw	128
  5276  0A68  318A  226D         	fcall	_am1805_write_to_addr
  5277                           
  5278                           ;am1805.c: 63: LATB |= 0x08;
  5279  0A6A  0022               	movlb	2	; select bank2
  5280  0A6B  158D               	bsf	13,3	;volatile
  5281  0A6C  0008               	return
  5282  0A6D                     __end_of_am1805_initiate_ctdn_sleep:	
  5283                           
  5284                           	psect	text13
  5285  063E                     __ptext13:	
  5286 ;; *************** function _i3gnav *****************
  5287 ;; Defined at:
  5288 ;;		line 15 in file "sys/cti.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;		None
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;Total ram usage:        3 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:   10
  5309 ;; This function calls:
  5310 ;;		_eeprom_write_gps_minimum
  5311 ;;		_eeprom_write_nrf52_sig_byte
  5312 ;;		_have_3d_fix
  5313 ;;		_is_nrfcomplete_high
  5314 ;;		_uart_write_string
  5315 ;;		_ubx_silence_nmea
  5316 ;;		_update_gps_fix_data
  5317 ;; This function is called by:
  5318 ;;		_cti_instruction_loop
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           
  5323                           ;psect for function _i3gnav
  5324  063E                     _i3gnav:	
  5325                           
  5326                           ;cti.c: 16: uart_write_string("Running instruction '3GNAV'.\r\n");
  5327                           
  5328                           ;incstack = 0
  5329                           ; Regs used in _i3gnav: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5330  063E  304B               	movlw	low (STR_14| (0+32768))
  5331  063F  0020               	movlb	0	; select bank0
  5332  0640  00A3               	movwf	uart_write_string@str
  5333  0641  3081               	movlw	high (STR_14| (0+32768))
  5334  0642  00A4               	movwf	uart_write_string@str+1
  5335  0643  318A  2234  3186   	fcall	_uart_write_string
  5336                           
  5337                           ;cti.c: 17: LATA |= 0x10;
  5338  0646  0022               	movlb	2	; select bank2
  5339  0647  160C               	bsf	12,4	;volatile
  5340                           
  5341                           ;cti.c: 18: _delay((unsigned long)((2000)*(2000000/4000.0)));
  5342  0648  3006               	movlw	6
  5343  0649  0020               	movlb	0	; select bank0
  5344  064A  00ED               	movwf	??_i3gnav+2
  5345  064B  3013               	movlw	19
  5346  064C  00EC               	movwf	??_i3gnav+1
  5347  064D  30B1               	movlw	177
  5348  064E  00EB               	movwf	??_i3gnav
  5349  064F                     u2757:	
  5350  064F  0BEB               	decfsz	??_i3gnav,f
  5351  0650  2E4F               	goto	u2757
  5352  0651  0BEC               	decfsz	??_i3gnav+1,f
  5353  0652  2E4F               	goto	u2757
  5354  0653  0BED               	decfsz	??_i3gnav+2,f
  5355  0654  2E4F               	goto	u2757
  5356  0655  3200               	nop2
  5357                           
  5358                           ;cti.c: 19: ubx_silence_nmea();
  5359  0656  3187  27BE  3186   	fcall	_ubx_silence_nmea
  5360                           
  5361                           ;cti.c: 20: _delay((unsigned long)((2000)*(2000000/4000.0)));
  5362  0659  3006               	movlw	6
  5363  065A  0020               	movlb	0	; select bank0
  5364  065B  00ED               	movwf	??_i3gnav+2
  5365  065C  3013               	movlw	19
  5366  065D  00EC               	movwf	??_i3gnav+1
  5367  065E  30B1               	movlw	177
  5368  065F  00EB               	movwf	??_i3gnav
  5369  0660                     u2767:	
  5370  0660  0BEB               	decfsz	??_i3gnav,f
  5371  0661  2E60               	goto	u2767
  5372  0662  0BEC               	decfsz	??_i3gnav+1,f
  5373  0663  2E60               	goto	u2767
  5374  0664  0BED               	decfsz	??_i3gnav+2,f
  5375  0665  2E60               	goto	u2767
  5376  0666  3200               	nop2
  5377                           
  5378                           ;cti.c: 22: uart_write_string("Waiting for GPS fix...\r\n");
  5379  0667  30DD               	movlw	low (STR_15| (0+32768))
  5380  0668  0020               	movlb	0	; select bank0
  5381  0669  00A3               	movwf	uart_write_string@str
  5382  066A  3081               	movlw	high (STR_15| (0+32768))
  5383  066B  00A4               	movwf	uart_write_string@str+1
  5384  066C  318A  2234  3186   	fcall	_uart_write_string
  5385  066F                     l3928:	
  5386                           ;cti.c: 23: while (!have_3d_fix()) {
  5387                           
  5388  066F  318C  245E  3186   	fcall	_have_3d_fix
  5389  0672  3A00               	xorlw	0
  5390  0673  1D03               	btfss	3,2
  5391  0674  2E84               	goto	l3930
  5392                           
  5393                           ;cti.c: 24: _delay((unsigned long)((3000)*(2000000/4000.0)));
  5394  0675  3008               	movlw	8
  5395  0676  0020               	movlb	0	; select bank0
  5396  0677  00ED               	movwf	??_i3gnav+2
  5397  0678  309D               	movlw	157
  5398  0679  00EC               	movwf	??_i3gnav+1
  5399  067A  300B               	movlw	11
  5400  067B  00EB               	movwf	??_i3gnav
  5401  067C                     u2777:	
  5402  067C  0BEB               	decfsz	??_i3gnav,f
  5403  067D  2E7C               	goto	u2777
  5404  067E  0BEC               	decfsz	??_i3gnav+1,f
  5405  067F  2E7C               	goto	u2777
  5406  0680  0BED               	decfsz	??_i3gnav+2,f
  5407  0681  2E7C               	goto	u2777
  5408  0682  3200               	nop2
  5409  0683  2E6F               	goto	l3928
  5410  0684                     l3930:	
  5411                           
  5412                           ;cti.c: 25: }
  5413                           ;cti.c: 26: uart_write_string("... Got GPS fix.\r\n");
  5414  0684  3079               	movlw	low (STR_16| (0+32768))
  5415  0685  0020               	movlb	0	; select bank0
  5416  0686  00A3               	movwf	uart_write_string@str
  5417  0687  3082               	movlw	high (STR_16| (0+32768))
  5418  0688  00A4               	movwf	uart_write_string@str+1
  5419  0689  318A  2234  3186   	fcall	_uart_write_string
  5420                           
  5421                           ;cti.c: 28: update_gps_fix_data();
  5422  068C  3188  2070  3186   	fcall	_update_gps_fix_data
  5423                           
  5424                           ;cti.c: 30: eeprom_write_gps_minimum();
  5425  068F  3183  23FE  3186   	fcall	_eeprom_write_gps_minimum
  5426                           
  5427                           ;cti.c: 32: eeprom_write_nrf52_sig_byte(0x03);
  5428  0692  3003               	movlw	3
  5429  0693  3188  2086  3186   	fcall	_eeprom_write_nrf52_sig_byte
  5430                           
  5431                           ;cti.c: 34: LATA |= 0x08; LATB |= 0x20;
  5432  0696  0022               	movlb	2	; select bank2
  5433  0697  158C               	bsf	12,3	;volatile
  5434  0698  168D               	bsf	13,5	;volatile
  5435                           
  5436                           ;cti.c: 35: LATB |= 0x02;
  5437  0699  148D               	bsf	13,1	;volatile
  5438                           
  5439                           ;cti.c: 39: uart_write_string("Waiting for NRF52 to complete '3GNAV' code...\r\n");
  5440  069A  308C               	movlw	low (STR_17| (0+32768))
  5441  069B  0020               	movlb	0	; select bank0
  5442  069C  00A3               	movwf	uart_write_string@str
  5443  069D  3080               	movlw	high (STR_17| (0+32768))
  5444  069E  00A4               	movwf	uart_write_string@str+1
  5445  069F  318A  2234  3186   	fcall	_uart_write_string
  5446  06A2                     l3946:	
  5447                           ;cti.c: 40: while (!is_nrfcomplete_high());
  5448                           
  5449  06A2  3188  205A  3186   	fcall	_is_nrfcomplete_high
  5450  06A5  3A00               	xorlw	0
  5451  06A6  1903               	skipnz
  5452  06A7  2EA2               	goto	l3946
  5453                           
  5454                           ;cti.c: 41: uart_write_string("... NRF52 has completed '3GNAV' code\r\n");
  5455  06A8  30BC               	movlw	low (STR_18| (0+32768))
  5456  06A9  0020               	movlb	0	; select bank0
  5457  06AA  00A3               	movwf	uart_write_string@str
  5458  06AB  3080               	movlw	high (STR_18| (0+32768))
  5459  06AC  00A4               	movwf	uart_write_string@str+1
  5460  06AD  318A  2234         	fcall	_uart_write_string
  5461                           
  5462                           ;cti.c: 42: LATA &= (0x08); LATB &= ~(0x20);
  5463  06AF  3008               	movlw	8
  5464  06B0  0020               	movlb	0	; select bank0
  5465  06B1  00EB               	movwf	??_i3gnav
  5466  06B2  086B               	movf	??_i3gnav,w
  5467  06B3  0022               	movlb	2	; select bank2
  5468  06B4  058C               	andwf	12,f	;volatile
  5469  06B5  30DF               	movlw	223
  5470  06B6  0020               	movlb	0	; select bank0
  5471  06B7  00EB               	movwf	??_i3gnav
  5472  06B8  086B               	movf	??_i3gnav,w
  5473  06B9  0022               	movlb	2	; select bank2
  5474  06BA  058D               	andwf	13,f	;volatile
  5475                           
  5476                           ;cti.c: 43: LATB &= ~(0x02);
  5477  06BB  30FD               	movlw	253
  5478  06BC  0020               	movlb	0	; select bank0
  5479  06BD  00EB               	movwf	??_i3gnav
  5480  06BE  086B               	movf	??_i3gnav,w
  5481  06BF  0022               	movlb	2	; select bank2
  5482  06C0  058D               	andwf	13,f	;volatile
  5483  06C1  0008               	return
  5484  06C2                     __end_of_i3gnav:	
  5485                           
  5486                           	psect	text14
  5487  0870                     __ptext14:	
  5488 ;; *************** function _update_gps_fix_data *****************
  5489 ;; Defined at:
  5490 ;;		line 136 in file "ubx/ubxcmd.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;Total ram usage:        0 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    8
  5511 ;; This function calls:
  5512 ;;		_get_pvt_str
  5513 ;;		_sort_pvt_data_into_gps_struct
  5514 ;; This function is called by:
  5515 ;;		_i3gnav
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _update_gps_fix_data
  5521  0870                     _update_gps_fix_data:	
  5522                           
  5523                           ;ubxcmd.c: 137: get_pvt_str();
  5524                           
  5525                           ;incstack = 0
  5526                           ; Regs used in _update_gps_fix_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5527  0870  318B  23A6  3188   	fcall	_get_pvt_str
  5528                           
  5529                           ;ubxcmd.c: 139: sort_pvt_data_into_gps_struct();
  5530  0873  3182  22F7         	fcall	_sort_pvt_data_into_gps_struct
  5531  0875  0008               	return
  5532  0876                     __end_of_update_gps_fix_data:	
  5533                           
  5534                           	psect	text15
  5535  02F7                     __ptext15:	
  5536 ;; *************** function _sort_pvt_data_into_gps_struct *****************
  5537 ;; Defined at:
  5538 ;;		line 94 in file "ubx/ubxcmd.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;		None
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;		None
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;Total ram usage:        1 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:    1
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_update_gps_fix_data
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           
  5567                           ;psect for function _sort_pvt_data_into_gps_struct
  5568  02F7                     _sort_pvt_data_into_gps_struct:	
  5569                           
  5570                           ;ubxcmd.c: 95: GpsMinimum.year[0] = UbxReceiver.buf[10];
  5571                           
  5572                           ;incstack = 0
  5573                           ; Regs used in _sort_pvt_data_into_gps_struct: [wreg+fsr1l+fsr1h+status,2+status,0]
  5574  02F7  3089               	movlw	137
  5575  02F8  0086               	movwf	6
  5576  02F9  3023               	movlw	35
  5577  02FA  0087               	movwf	7
  5578  02FB  314A               	addfsr 1,10
  5579  02FC  0801               	movf	1,w
  5580  02FD  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5581  02FE  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5582  02FF  0021               	movlb	1	; select bank1
  5583  0300  00A0               	movwf	_GpsMinimum^(0+128)	;volatile
  5584                           
  5585                           ;ubxcmd.c: 96: GpsMinimum.year[1] = UbxReceiver.buf[11];
  5586  0301  3089               	movlw	137
  5587  0302  0086               	movwf	6
  5588  0303  3023               	movlw	35
  5589  0304  0087               	movwf	7
  5590  0305  314B               	addfsr 1,11
  5591  0306  0801               	movf	1,w
  5592  0307  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5593  0308  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5594  0309  00A1               	movwf	(_GpsMinimum^(0+128)+1)	;volatile
  5595                           
  5596                           ;ubxcmd.c: 98: GpsMinimum.month = UbxReceiver.buf[12];
  5597  030A  3089               	movlw	137
  5598  030B  0086               	movwf	6
  5599  030C  3023               	movlw	35
  5600  030D  0087               	movwf	7
  5601  030E  314C               	addfsr 1,12
  5602  030F  0801               	movf	1,w
  5603  0310  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5604  0311  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5605  0312  00A2               	movwf	(_GpsMinimum^(0+128)+2)	;volatile
  5606                           
  5607                           ;ubxcmd.c: 99: GpsMinimum.day = UbxReceiver.buf[13];
  5608  0313  3089               	movlw	137
  5609  0314  0086               	movwf	6
  5610  0315  3023               	movlw	35
  5611  0316  0087               	movwf	7
  5612  0317  314D               	addfsr 1,13
  5613  0318  0801               	movf	1,w
  5614  0319  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5615  031A  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5616  031B  00A3               	movwf	(_GpsMinimum^(0+128)+3)	;volatile
  5617                           
  5618                           ;ubxcmd.c: 100: GpsMinimum.hour = UbxReceiver.buf[14];
  5619  031C  3089               	movlw	137
  5620  031D  0086               	movwf	6
  5621  031E  3023               	movlw	35
  5622  031F  0087               	movwf	7
  5623  0320  314E               	addfsr 1,14
  5624  0321  0801               	movf	1,w
  5625  0322  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5626  0323  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5627  0324  00A4               	movwf	(_GpsMinimum^(0+128)+4)	;volatile
  5628                           
  5629                           ;ubxcmd.c: 101: GpsMinimum.minute = UbxReceiver.buf[15];
  5630  0325  3089               	movlw	137
  5631  0326  0086               	movwf	6
  5632  0327  3023               	movlw	35
  5633  0328  0087               	movwf	7
  5634  0329  314F               	addfsr 1,15
  5635  032A  0801               	movf	1,w
  5636  032B  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5637  032C  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5638  032D  00A5               	movwf	(_GpsMinimum^(0+128)+5)	;volatile
  5639                           
  5640                           ;ubxcmd.c: 102: GpsMinimum.second = UbxReceiver.buf[16];
  5641  032E  3089               	movlw	137
  5642  032F  0086               	movwf	6
  5643  0330  3023               	movlw	35
  5644  0331  0087               	movwf	7
  5645  0332  3150               	addfsr 1,16
  5646  0333  0801               	movf	1,w
  5647  0334  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5648  0335  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5649  0336  00A6               	movwf	(_GpsMinimum^(0+128)+6)	;volatile
  5650                           
  5651                           ;ubxcmd.c: 104: GpsMinimum.valid_flags = UbxReceiver.buf[17];
  5652  0337  3089               	movlw	137
  5653  0338  0086               	movwf	6
  5654  0339  3023               	movlw	35
  5655  033A  0087               	movwf	7
  5656  033B  3151               	addfsr 1,17
  5657  033C  0801               	movf	1,w
  5658  033D  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5659  033E  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5660  033F  00A7               	movwf	(_GpsMinimum^(0+128)+7)	;volatile
  5661                           
  5662                           ;ubxcmd.c: 105: GpsMinimum.gps_flags = UbxReceiver.buf[27];
  5663  0340  3089               	movlw	137
  5664  0341  0086               	movwf	6
  5665  0342  3023               	movlw	35
  5666  0343  0087               	movwf	7
  5667  0344  315B               	addfsr 1,27
  5668  0345  0801               	movf	1,w
  5669  0346  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5670  0347  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5671  0348  00A8               	movwf	(_GpsMinimum^(0+128)+8)	;volatile
  5672                           
  5673                           ;ubxcmd.c: 106: GpsMinimum.time_flags = UbxReceiver.buf[28];
  5674  0349  3089               	movlw	137
  5675  034A  0086               	movwf	6
  5676  034B  3023               	movlw	35
  5677  034C  0087               	movwf	7
  5678  034D  315C               	addfsr 1,28
  5679  034E  0801               	movf	1,w
  5680  034F  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5681  0350  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5682  0351  00A9               	movwf	(_GpsMinimum^(0+128)+9)	;volatile
  5683                           
  5684                           ;ubxcmd.c: 108: GpsMinimum.num_sat = UbxReceiver.buf[29];
  5685  0352  3089               	movlw	137
  5686  0353  0086               	movwf	6
  5687  0354  3023               	movlw	35
  5688  0355  0087               	movwf	7
  5689  0356  315D               	addfsr 1,29
  5690  0357  0801               	movf	1,w
  5691  0358  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5692  0359  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5693  035A  00AA               	movwf	(_GpsMinimum^(0+128)+10)	;volatile
  5694                           
  5695                           ;ubxcmd.c: 110: GpsMinimum.lon[0] = UbxReceiver.buf[30];
  5696  035B  3089               	movlw	137
  5697  035C  0086               	movwf	6
  5698  035D  3023               	movlw	35
  5699  035E  0087               	movwf	7
  5700  035F  315E               	addfsr 1,30
  5701  0360  0801               	movf	1,w
  5702  0361  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5703  0362  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5704  0363  00AB               	movwf	(_GpsMinimum^(0+128)+11)	;volatile
  5705                           
  5706                           ;ubxcmd.c: 111: GpsMinimum.lon[1] = UbxReceiver.buf[31];
  5707  0364  3089               	movlw	137
  5708  0365  0086               	movwf	6
  5709  0366  3023               	movlw	35
  5710  0367  0087               	movwf	7
  5711  0368  315F               	addfsr 1,31
  5712  0369  0801               	movf	1,w
  5713  036A  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5714  036B  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5715  036C  00AC               	movwf	(_GpsMinimum^(0+128)+12)	;volatile
  5716                           
  5717                           ;ubxcmd.c: 112: GpsMinimum.lon[2] = UbxReceiver.buf[32];
  5718  036D  30A9               	movlw	169
  5719  036E  0086               	movwf	6
  5720  036F  3023               	movlw	35
  5721  0370  0087               	movwf	7
  5722  0371  0801               	movf	1,w
  5723  0372  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5724  0373  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5725  0374  00AD               	movwf	(_GpsMinimum^(0+128)+13)	;volatile
  5726                           
  5727                           ;ubxcmd.c: 113: GpsMinimum.lon[3] = UbxReceiver.buf[33];
  5728  0375  30AA               	movlw	170
  5729  0376  0086               	movwf	6
  5730  0377  3023               	movlw	35
  5731  0378  0087               	movwf	7
  5732  0379  0801               	movf	1,w
  5733  037A  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5734  037B  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5735  037C  00AE               	movwf	(_GpsMinimum^(0+128)+14)	;volatile
  5736                           
  5737                           ;ubxcmd.c: 115: GpsMinimum.lat[0] = UbxReceiver.buf[34];
  5738  037D  30AB               	movlw	171
  5739  037E  0086               	movwf	6
  5740  037F  3023               	movlw	35
  5741  0380  0087               	movwf	7
  5742  0381  0801               	movf	1,w
  5743  0382  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5744  0383  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5745  0384  00AF               	movwf	(_GpsMinimum^(0+128)+15)	;volatile
  5746                           
  5747                           ;ubxcmd.c: 116: GpsMinimum.lat[1] = UbxReceiver.buf[35];
  5748  0385  30AC               	movlw	172
  5749  0386  0086               	movwf	6
  5750  0387  3023               	movlw	35
  5751  0388  0087               	movwf	7
  5752  0389  0801               	movf	1,w
  5753  038A  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5754  038B  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5755  038C  00B0               	movwf	(_GpsMinimum^(0+128)+16)	;volatile
  5756                           
  5757                           ;ubxcmd.c: 117: GpsMinimum.lat[2] = UbxReceiver.buf[36];
  5758  038D  30AD               	movlw	173
  5759  038E  0086               	movwf	6
  5760  038F  3023               	movlw	35
  5761  0390  0087               	movwf	7
  5762  0391  0801               	movf	1,w
  5763  0392  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5764  0393  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5765  0394  00B1               	movwf	(_GpsMinimum^(0+128)+17)	;volatile
  5766                           
  5767                           ;ubxcmd.c: 118: GpsMinimum.lat[3] = UbxReceiver.buf[37];
  5768  0395  30AE               	movlw	174
  5769  0396  0086               	movwf	6
  5770  0397  3023               	movlw	35
  5771  0398  0087               	movwf	7
  5772  0399  0801               	movf	1,w
  5773  039A  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5774  039B  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5775  039C  00B2               	movwf	(_GpsMinimum^(0+128)+18)	;volatile
  5776                           
  5777                           ;ubxcmd.c: 120: GpsMinimum.height[0] = UbxReceiver.buf[38];
  5778  039D  30AF               	movlw	175
  5779  039E  0086               	movwf	6
  5780  039F  3023               	movlw	35
  5781  03A0  0087               	movwf	7
  5782  03A1  0801               	movf	1,w
  5783  03A2  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5784  03A3  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5785  03A4  00B3               	movwf	(_GpsMinimum^(0+128)+19)	;volatile
  5786                           
  5787                           ;ubxcmd.c: 121: GpsMinimum.height[1] = UbxReceiver.buf[39];
  5788  03A5  30B0               	movlw	176
  5789  03A6  0086               	movwf	6
  5790  03A7  3023               	movlw	35
  5791  03A8  0087               	movwf	7
  5792  03A9  0801               	movf	1,w
  5793  03AA  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5794  03AB  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5795  03AC  00B4               	movwf	(_GpsMinimum^(0+128)+20)	;volatile
  5796                           
  5797                           ;ubxcmd.c: 122: GpsMinimum.height[2] = UbxReceiver.buf[40];
  5798  03AD  30B1               	movlw	177
  5799  03AE  0086               	movwf	6
  5800  03AF  3023               	movlw	35
  5801  03B0  0087               	movwf	7
  5802  03B1  0801               	movf	1,w
  5803  03B2  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5804  03B3  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5805  03B4  00B5               	movwf	(_GpsMinimum^(0+128)+21)	;volatile
  5806                           
  5807                           ;ubxcmd.c: 123: GpsMinimum.height[3] = UbxReceiver.buf[41];
  5808  03B5  30B2               	movlw	178
  5809  03B6  0086               	movwf	6
  5810  03B7  3023               	movlw	35
  5811  03B8  0087               	movwf	7
  5812  03B9  0801               	movf	1,w
  5813  03BA  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5814  03BB  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5815  03BC  00B6               	movwf	(_GpsMinimum^(0+128)+22)	;volatile
  5816                           
  5817                           ;ubxcmd.c: 125: GpsMinimum.gspeed[0] = UbxReceiver.buf[66];
  5818  03BD  30CB               	movlw	203
  5819  03BE  0086               	movwf	6
  5820  03BF  3023               	movlw	35
  5821  03C0  0087               	movwf	7
  5822  03C1  0801               	movf	1,w
  5823  03C2  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5824  03C3  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5825  03C4  00B7               	movwf	(_GpsMinimum^(0+128)+23)	;volatile
  5826                           
  5827                           ;ubxcmd.c: 126: GpsMinimum.gspeed[1] = UbxReceiver.buf[67];
  5828  03C5  30CC               	movlw	204
  5829  03C6  0086               	movwf	6
  5830  03C7  3023               	movlw	35
  5831  03C8  0087               	movwf	7
  5832  03C9  0801               	movf	1,w
  5833  03CA  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5834  03CB  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5835  03CC  00B8               	movwf	(_GpsMinimum^(0+128)+24)	;volatile
  5836                           
  5837                           ;ubxcmd.c: 127: GpsMinimum.gspeed[2] = UbxReceiver.buf[68];
  5838  03CD  30CD               	movlw	205
  5839  03CE  0086               	movwf	6
  5840  03CF  3023               	movlw	35
  5841  03D0  0087               	movwf	7
  5842  03D1  0801               	movf	1,w
  5843  03D2  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5844  03D3  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5845  03D4  00B9               	movwf	(_GpsMinimum^(0+128)+25)	;volatile
  5846                           
  5847                           ;ubxcmd.c: 128: GpsMinimum.gspeed[3] = UbxReceiver.buf[69];
  5848  03D5  30CE               	movlw	206
  5849  03D6  0086               	movwf	6
  5850  03D7  3023               	movlw	35
  5851  03D8  0087               	movwf	7
  5852  03D9  0801               	movf	1,w
  5853  03DA  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5854  03DB  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5855  03DC  00BA               	movwf	(_GpsMinimum^(0+128)+26)	;volatile
  5856                           
  5857                           ;ubxcmd.c: 130: GpsMinimum.direction[0] = UbxReceiver.buf[70];
  5858  03DD  30CF               	movlw	207
  5859  03DE  0086               	movwf	6
  5860  03DF  3023               	movlw	35
  5861  03E0  0087               	movwf	7
  5862  03E1  0801               	movf	1,w
  5863  03E2  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5864  03E3  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5865  03E4  00BB               	movwf	(_GpsMinimum^(0+128)+27)	;volatile
  5866                           
  5867                           ;ubxcmd.c: 131: GpsMinimum.direction[1] = UbxReceiver.buf[71];
  5868  03E5  30D0               	movlw	208
  5869  03E6  0086               	movwf	6
  5870  03E7  3023               	movlw	35
  5871  03E8  0087               	movwf	7
  5872  03E9  0801               	movf	1,w
  5873  03EA  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5874  03EB  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5875  03EC  00BC               	movwf	(_GpsMinimum^(0+128)+28)	;volatile
  5876                           
  5877                           ;ubxcmd.c: 132: GpsMinimum.direction[2] = UbxReceiver.buf[72];
  5878  03ED  30D1               	movlw	209
  5879  03EE  0086               	movwf	6
  5880  03EF  3023               	movlw	35
  5881  03F0  0087               	movwf	7
  5882  03F1  0801               	movf	1,w
  5883  03F2  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5884  03F3  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5885  03F4  00BD               	movwf	(_GpsMinimum^(0+128)+29)	;volatile
  5886                           
  5887                           ;ubxcmd.c: 133: GpsMinimum.direction[3] = UbxReceiver.buf[73];
  5888  03F5  30D2               	movlw	210
  5889  03F6  0086               	movwf	6
  5890  03F7  3023               	movlw	35
  5891  03F8  0087               	movwf	7
  5892  03F9  0801               	movf	1,w
  5893  03FA  00F3               	movwf	??_sort_pvt_data_into_gps_struct
  5894  03FB  0873               	movf	??_sort_pvt_data_into_gps_struct,w
  5895  03FC  00BE               	movwf	(_GpsMinimum^(0+128)+30)	;volatile
  5896  03FD  0008               	return
  5897  03FE                     __end_of_sort_pvt_data_into_gps_struct:	
  5898                           
  5899                           	psect	text16
  5900  0BA6                     __ptext16:	
  5901 ;; *************** function _get_pvt_str *****************
  5902 ;; Defined at:
  5903 ;;		line 85 in file "ubx/ubxcmd.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;		None
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  err_ctr         1   36[BANK0 ] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;Total ram usage:        3 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    7
  5924 ;; This function calls:
  5925 ;;		_hard_lockup
  5926 ;;		_ubx_send_and_recv
  5927 ;; This function is called by:
  5928 ;;		_update_gps_fix_data
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           
  5933                           ;psect for function _get_pvt_str
  5934  0BA6                     _get_pvt_str:	
  5935                           
  5936                           ;ubxcmd.c: 86: uint8_t err_ctr = 0;
  5937                           
  5938                           ;incstack = 0
  5939                           ; Regs used in _get_pvt_str: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5940  0BA6  0020               	movlb	0	; select bank0
  5941  0BA7  01C4               	clrf	get_pvt_str@err_ctr
  5942  0BA8                     l3650:	
  5943                           ;ubxcmd.c: 87: while (!ubx_send_and_recv(ubx_poll_pvt, 5, 100)) {
  5944                           
  5945  0BA8  3061               	movlw	low _ubx_poll_pvt
  5946  0BA9  0020               	movlb	0	; select bank0
  5947  0BAA  00A7               	movwf	ubx_send_and_recv@ubx_cmd
  5948  0BAB  3001               	movlw	high _ubx_poll_pvt
  5949  0BAC  00A8               	movwf	ubx_send_and_recv@ubx_cmd+1
  5950  0BAD  3005               	movlw	5
  5951  0BAE  00C2               	movwf	??_get_pvt_str
  5952  0BAF  0842               	movf	??_get_pvt_str,w
  5953  0BB0  00A9               	movwf	ubx_send_and_recv@response_time
  5954  0BB1  3064               	movlw	100
  5955  0BB2  00C3               	movwf	??_get_pvt_str+1
  5956  0BB3  0843               	movf	??_get_pvt_str+1,w
  5957  0BB4  00AA               	movwf	ubx_send_and_recv@expected_len
  5958  0BB5  318D  25C5  318B   	fcall	_ubx_send_and_recv
  5959  0BB8  3A00               	xorlw	0
  5960  0BB9  1D03               	btfss	3,2
  5961  0BBA  0008               	return
  5962                           
  5963                           ;ubxcmd.c: 88: if (err_ctr > 2) hard_lockup(5);
  5964  0BBB  3003               	movlw	3
  5965  0BBC  0020               	movlb	0	; select bank0
  5966  0BBD  0244               	subwf	get_pvt_str@err_ctr,w
  5967  0BBE  1C03               	skipc
  5968  0BBF  2BC4               	goto	l3646
  5969  0BC0  3005               	movlw	5
  5970  0BC1  318F  27A5  318B   	fcall	_hard_lockup
  5971  0BC4                     l3646:	
  5972                           
  5973                           ;ubxcmd.c: 89: err_ctr++;
  5974  0BC4  3001               	movlw	1
  5975  0BC5  0020               	movlb	0	; select bank0
  5976  0BC6  00C2               	movwf	??_get_pvt_str
  5977  0BC7  0842               	movf	??_get_pvt_str,w
  5978  0BC8  07C4               	addwf	get_pvt_str@err_ctr,f
  5979                           
  5980                           ;ubxcmd.c: 90: _delay((unsigned long)((100)*(2000000/4000.0)));
  5981  0BC9  3041               	movlw	65
  5982  0BCA  00C3               	movwf	??_get_pvt_str+1
  5983  0BCB  30EE               	movlw	238
  5984  0BCC  00C2               	movwf	??_get_pvt_str
  5985  0BCD                     u2787:	
  5986  0BCD  0BC2               	decfsz	??_get_pvt_str,f
  5987  0BCE  2BCD               	goto	u2787
  5988  0BCF  0BC3               	decfsz	??_get_pvt_str+1,f
  5989  0BD0  2BCD               	goto	u2787
  5990  0BD1  0000               	nop
  5991  0BD2  2BA8               	goto	l3650
  5992  0BD3                     __end_of_get_pvt_str:	
  5993                           
  5994                           	psect	text17
  5995  07BE                     __ptext17:	
  5996 ;; *************** function _ubx_silence_nmea *****************
  5997 ;; Defined at:
  5998 ;;		line 64 in file "ubx/ubxcmd.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;		None
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;		None
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  1    wreg      void 
  6005 ;; Registers used:
  6006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;Total ram usage:        3 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    5
  6019 ;; This function calls:
  6020 ;;		_ubx_send_str
  6021 ;; This function is called by:
  6022 ;;		_i3gnav
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function _ubx_silence_nmea
  6028  07BE                     _ubx_silence_nmea:	
  6029                           
  6030                           ;ubxcmd.c: 65: ubx_send_str(ubx_disable_gxgga);
  6031                           
  6032                           ;incstack = 0
  6033                           ; Regs used in _ubx_silence_nmea: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6034  07BE  3031               	movlw	low _ubx_disable_gxgga
  6035  07BF  0020               	movlb	0	; select bank0
  6036  07C0  00A3               	movwf	ubx_send_str@str
  6037  07C1  3001               	movlw	high _ubx_disable_gxgga
  6038  07C2  00A4               	movwf	ubx_send_str@str+1
  6039  07C3  318B  230C  3187   	fcall	_ubx_send_str
  6040                           
  6041                           ;ubxcmd.c: 66: ubx_send_str(ubx_disable_gxgll);
  6042  07C6  303D               	movlw	low _ubx_disable_gxgll
  6043  07C7  0020               	movlb	0	; select bank0
  6044  07C8  00A3               	movwf	ubx_send_str@str
  6045  07C9  3001               	movlw	high _ubx_disable_gxgll
  6046  07CA  00A4               	movwf	ubx_send_str@str+1
  6047  07CB  318B  230C  3187   	fcall	_ubx_send_str
  6048                           
  6049                           ;ubxcmd.c: 67: ubx_send_str(ubx_disable_gxgsa);
  6050  07CE  3049               	movlw	low _ubx_disable_gxgsa
  6051  07CF  0020               	movlb	0	; select bank0
  6052  07D0  00A3               	movwf	ubx_send_str@str
  6053  07D1  3001               	movlw	high _ubx_disable_gxgsa
  6054  07D2  00A4               	movwf	ubx_send_str@str+1
  6055  07D3  318B  230C  3187   	fcall	_ubx_send_str
  6056                           
  6057                           ;ubxcmd.c: 68: ubx_send_str(ubx_disable_gxgsv);
  6058  07D6  3055               	movlw	low _ubx_disable_gxgsv
  6059  07D7  0020               	movlb	0	; select bank0
  6060  07D8  00A3               	movwf	ubx_send_str@str
  6061  07D9  3001               	movlw	high _ubx_disable_gxgsv
  6062  07DA  00A4               	movwf	ubx_send_str@str+1
  6063  07DB  318B  230C  3187   	fcall	_ubx_send_str
  6064                           
  6065                           ;ubxcmd.c: 69: ubx_send_str(ubx_disable_gxrmc);
  6066  07DE  30AA               	movlw	low _ubx_disable_gxrmc
  6067  07DF  0020               	movlb	0	; select bank0
  6068  07E0  00A3               	movwf	ubx_send_str@str
  6069  07E1  3001               	movlw	high _ubx_disable_gxrmc
  6070  07E2  00A4               	movwf	ubx_send_str@str+1
  6071  07E3  318B  230C  3187   	fcall	_ubx_send_str
  6072                           
  6073                           ;ubxcmd.c: 70: ubx_send_str(ubx_disable_gxvtg);
  6074  07E6  30B6               	movlw	low _ubx_disable_gxvtg
  6075  07E7  0020               	movlb	0	; select bank0
  6076  07E8  00A3               	movwf	ubx_send_str@str
  6077  07E9  3001               	movlw	high _ubx_disable_gxvtg
  6078  07EA  00A4               	movwf	ubx_send_str@str+1
  6079  07EB  318B  230C  3187   	fcall	_ubx_send_str
  6080                           
  6081                           ;ubxcmd.c: 72: _delay((unsigned long)((2000)*(2000000/4000.0)));
  6082  07EE  3006               	movlw	6
  6083  07EF  0020               	movlb	0	; select bank0
  6084  07F0  00A9               	movwf	??_ubx_silence_nmea+2
  6085  07F1  3013               	movlw	19
  6086  07F2  00A8               	movwf	??_ubx_silence_nmea+1
  6087  07F3  30B1               	movlw	177
  6088  07F4  00A7               	movwf	??_ubx_silence_nmea
  6089  07F5                     u2797:	
  6090  07F5  0BA7               	decfsz	??_ubx_silence_nmea,f
  6091  07F6  2FF5               	goto	u2797
  6092  07F7  0BA8               	decfsz	??_ubx_silence_nmea+1,f
  6093  07F8  2FF5               	goto	u2797
  6094  07F9  0BA9               	decfsz	??_ubx_silence_nmea+2,f
  6095  07FA  2FF5               	goto	u2797
  6096  07FB  3200               	nop2
  6097                           
  6098                           ;ubxcmd.c: 74: CREN = 0;
  6099  07FC  0023               	movlb	3	; select bank3
  6100  07FD  121D               	bcf	29,4	;volatile
  6101                           
  6102                           ;ubxcmd.c: 75: CREN = 1;
  6103  07FE  161D               	bsf	29,4	;volatile
  6104  07FF  0008               	return
  6105  0800                     __end_of_ubx_silence_nmea:	
  6106                           
  6107                           	psect	text18
  6108  0C5E                     __ptext18:	
  6109 ;; *************** function _have_3d_fix *****************
  6110 ;; Defined at:
  6111 ;;		line 143 in file "ubx/ubxcmd.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  err_ctr         1   36[BANK0 ] unsigned char 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      unsigned char 
  6118 ;; Registers used:
  6119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;Total ram usage:        3 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    7
  6132 ;; This function calls:
  6133 ;;		_eval_ubx_buf_for_fix
  6134 ;;		_hard_lockup
  6135 ;;		_ubx_send_and_recv
  6136 ;; This function is called by:
  6137 ;;		_i3gnav
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           
  6142                           ;psect for function _have_3d_fix
  6143  0C5E                     _have_3d_fix:	
  6144                           
  6145                           ;ubxcmd.c: 144: uint8_t err_ctr = 0;
  6146                           
  6147                           ;incstack = 0
  6148                           ; Regs used in _have_3d_fix: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6149  0C5E  0020               	movlb	0	; select bank0
  6150  0C5F  01C4               	clrf	have_3d_fix@err_ctr
  6151  0C60                     l3870:	
  6152                           ;ubxcmd.c: 145: while (!ubx_send_and_recv(ubx_poll_status, 1, 24)) {
  6153                           
  6154  0C60  30E7               	movlw	low _ubx_poll_status
  6155  0C61  0020               	movlb	0	; select bank0
  6156  0C62  00A7               	movwf	ubx_send_and_recv@ubx_cmd
  6157  0C63  3000               	movlw	high _ubx_poll_status
  6158  0C64  00A8               	movwf	ubx_send_and_recv@ubx_cmd+1
  6159  0C65  01A9               	clrf	ubx_send_and_recv@response_time
  6160  0C66  0AA9               	incf	ubx_send_and_recv@response_time,f
  6161  0C67  3018               	movlw	24
  6162  0C68  00C2               	movwf	??_have_3d_fix
  6163  0C69  0842               	movf	??_have_3d_fix,w
  6164  0C6A  00AA               	movwf	ubx_send_and_recv@expected_len
  6165  0C6B  318D  25C5  318C   	fcall	_ubx_send_and_recv
  6166  0C6E  3A00               	xorlw	0
  6167  0C6F  1D03               	btfss	3,2
  6168  0C70  2C89               	goto	l3872
  6169                           
  6170                           ;ubxcmd.c: 146: if (err_ctr > 2) hard_lockup(5);
  6171  0C71  3003               	movlw	3
  6172  0C72  0020               	movlb	0	; select bank0
  6173  0C73  0244               	subwf	have_3d_fix@err_ctr,w
  6174  0C74  1C03               	skipc
  6175  0C75  2C7A               	goto	l3866
  6176  0C76  3005               	movlw	5
  6177  0C77  318F  27A5  318C   	fcall	_hard_lockup
  6178  0C7A                     l3866:	
  6179                           
  6180                           ;ubxcmd.c: 147: err_ctr++;
  6181  0C7A  3001               	movlw	1
  6182  0C7B  0020               	movlb	0	; select bank0
  6183  0C7C  00C2               	movwf	??_have_3d_fix
  6184  0C7D  0842               	movf	??_have_3d_fix,w
  6185  0C7E  07C4               	addwf	have_3d_fix@err_ctr,f
  6186                           
  6187                           ;ubxcmd.c: 148: _delay((unsigned long)((100)*(2000000/4000.0)));
  6188  0C7F  3041               	movlw	65
  6189  0C80  00C3               	movwf	??_have_3d_fix+1
  6190  0C81  30EE               	movlw	238
  6191  0C82  00C2               	movwf	??_have_3d_fix
  6192  0C83                     u2807:	
  6193  0C83  0BC2               	decfsz	??_have_3d_fix,f
  6194  0C84  2C83               	goto	u2807
  6195  0C85  0BC3               	decfsz	??_have_3d_fix+1,f
  6196  0C86  2C83               	goto	u2807
  6197  0C87  0000               	nop
  6198  0C88  2C60               	goto	l3870
  6199  0C89                     l3872:	
  6200                           
  6201                           ;ubxcmd.c: 149: }
  6202                           ;ubxcmd.c: 150: if (eval_ubx_buf_for_fix()) return 1;
  6203  0C89  3188  20E7  318C   	fcall	_eval_ubx_buf_for_fix
  6204  0C8C  3A00               	xorlw	0
  6205  0C8D  1903               	skipnz
  6206  0C8E  2C91               	goto	l3878
  6207  0C8F  3001               	movlw	1
  6208  0C90  0008               	return
  6209  0C91                     l3878:	
  6210                           
  6211                           ;ubxcmd.c: 152: return 0;
  6212  0C91  3000               	movlw	0
  6213  0C92  0008               	return
  6214  0C93                     __end_of_have_3d_fix:	
  6215                           
  6216                           	psect	text19
  6217  0DC5                     __ptext19:	
  6218 ;; *************** function _ubx_send_and_recv *****************
  6219 ;; Defined at:
  6220 ;;		line 42 in file "ubx/ubxcmd.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  ubx_cmd         2    7[BANK0 ] PTR unsigned char 
  6223 ;;		 -> ubx_poll_status(9), ubx_poll_pvt(9), 
  6224 ;;  response_tim    1    9[BANK0 ] unsigned char 
  6225 ;;  expected_len    1   10[BANK0 ] unsigned char 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;  i               1   13[BANK0 ] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      unsigned char 
  6230 ;; Registers used:
  6231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6237 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;Total ram usage:        7 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:    5
  6244 ;; This function calls:
  6245 ;;		_reset_ubx_struct
  6246 ;;		_ubx_send_str
  6247 ;; This function is called by:
  6248 ;;		_get_pvt_str
  6249 ;;		_have_3d_fix
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           
  6254                           ;psect for function _ubx_send_and_recv
  6255  0DC5                     _ubx_send_and_recv:	
  6256                           
  6257                           ;ubxcmd.c: 44: uint8_t i;
  6258                           ;ubxcmd.c: 46: RCIE = 1; _delay((unsigned long)((1)*(2000000/4000.0))); reset_ubx_struct
      +                          (); {
  6259                           
  6260                           ;incstack = 0
  6261                           ; Regs used in _ubx_send_and_recv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6262  0DC5  0021               	movlb	1	; select bank1
  6263  0DC6  1691               	bsf	17,5	;volatile
  6264  0DC7  30A6               	movlw	166
  6265  0DC8  0020               	movlb	0	; select bank0
  6266  0DC9  00AB               	movwf	??_ubx_send_and_recv
  6267  0DCA                     u2817:	
  6268  0DCA  0BAB               	decfsz	??_ubx_send_and_recv,f
  6269  0DCB  2DCA               	goto	u2817
  6270  0DCC  0000               	nop
  6271  0DCD  3189  2147  318D   	fcall	_reset_ubx_struct
  6272                           
  6273                           ;ubxcmd.c: 48: ubx_send_str(ubx_cmd);
  6274  0DD0  0020               	movlb	0	; select bank0
  6275  0DD1  0828               	movf	ubx_send_and_recv@ubx_cmd+1,w
  6276  0DD2  00A4               	movwf	ubx_send_str@str+1
  6277  0DD3  0827               	movf	ubx_send_and_recv@ubx_cmd,w
  6278  0DD4  00A3               	movwf	ubx_send_str@str
  6279  0DD5  318B  230C  318D   	fcall	_ubx_send_str
  6280                           
  6281                           ;ubxcmd.c: 49: for (i=0;i<response_time;i++) {
  6282  0DD8  0020               	movlb	0	; select bank0
  6283  0DD9  01AD               	clrf	ubx_send_and_recv@i
  6284  0DDA                     l3566:	
  6285  0DDA  0829               	movf	ubx_send_and_recv@response_time,w
  6286  0DDB  022D               	subwf	ubx_send_and_recv@i,w
  6287  0DDC  1803               	btfsc	3,0
  6288  0DDD  2DED               	goto	l3568
  6289                           
  6290                           ;ubxcmd.c: 50: _delay((unsigned long)((50)*(2000000/4000.0)));
  6291  0DDE  3021               	movlw	33
  6292  0DDF  00AC               	movwf	??_ubx_send_and_recv+1
  6293  0DE0  3076               	movlw	118
  6294  0DE1  00AB               	movwf	??_ubx_send_and_recv
  6295  0DE2                     u2827:	
  6296  0DE2  0BAB               	decfsz	??_ubx_send_and_recv,f
  6297  0DE3  2DE2               	goto	u2827
  6298  0DE4  0BAC               	decfsz	??_ubx_send_and_recv+1,f
  6299  0DE5  2DE2               	goto	u2827
  6300  0DE6  0000               	nop
  6301  0DE7  3001               	movlw	1
  6302  0DE8  0020               	movlb	0	; select bank0
  6303  0DE9  00AB               	movwf	??_ubx_send_and_recv
  6304  0DEA  082B               	movf	??_ubx_send_and_recv,w
  6305  0DEB  07AD               	addwf	ubx_send_and_recv@i,f
  6306  0DEC  2DDA               	goto	l3566
  6307  0DED                     l3568:	
  6308                           
  6309                           ;ubxcmd.c: 51: }
  6310                           ;ubxcmd.c: 52: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  6311  0DED  0195               	clrf	21	;volatile
  6312  0DEE  168B               	bsf	11,5	;volatile
  6313  0DEF  01FA               	clrf	_tmr0_overflow
  6314  0DF0                     l3572:	
  6315                           ;ubxcmd.c: 53: while((tmr0_overflow<40) && (UbxReceiver.idx != expected_len));
  6316                           
  6317  0DF0  3028               	movlw	40
  6318  0DF1  027A               	subwf	_tmr0_overflow,w
  6319  0DF2  1803               	skipnc
  6320  0DF3  2DFC               	goto	l770
  6321  0DF4  30EF               	movlw	239
  6322  0DF5  0086               	movwf	6
  6323  0DF6  3023               	movlw	35
  6324  0DF7  0087               	movwf	7
  6325  0DF8  0801               	movf	1,w
  6326  0DF9  062A               	xorwf	ubx_send_and_recv@expected_len,w
  6327  0DFA  1D03               	skipz
  6328  0DFB  2DF0               	goto	l3572
  6329  0DFC                     l770:	
  6330                           
  6331                           ;ubxcmd.c: 54: } TMR0IE = 0;
  6332  0DFC  128B               	bcf	11,5	;volatile
  6333                           
  6334                           ;ubxcmd.c: 56: } tmr0_overflow=0; RCIE = 0;
  6335  0DFD  01FA               	clrf	_tmr0_overflow
  6336  0DFE  0021               	movlb	1	; select bank1
  6337  0DFF  1291               	bcf	17,5	;volatile
  6338                           
  6339                           ;ubxcmd.c: 58: if (UbxReceiver.idx == expected_len) return 1;
  6340  0E00  30EF               	movlw	239
  6341  0E01  0086               	movwf	6
  6342  0E02  3023               	movlw	35
  6343  0E03  0087               	movwf	7
  6344  0E04  0801               	movf	1,w
  6345  0E05  0020               	movlb	0	; select bank0
  6346  0E06  062A               	xorwf	ubx_send_and_recv@expected_len,w
  6347  0E07  1D03               	skipz
  6348  0E08  2E0B               	goto	l3586
  6349  0E09  3001               	movlw	1
  6350  0E0A  0008               	return
  6351  0E0B                     l3586:	
  6352                           
  6353                           ;ubxcmd.c: 60: return 0;
  6354  0E0B  3000               	movlw	0
  6355  0E0C  0008               	return
  6356  0E0D                     __end_of_ubx_send_and_recv:	
  6357                           
  6358                           	psect	text20
  6359  0B0C                     __ptext20:	
  6360 ;; *************** function _ubx_send_str *****************
  6361 ;; Defined at:
  6362 ;;		line 32 in file "ubx/ubxcmd.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  str             2    3[BANK0 ] PTR unsigned char 
  6365 ;;		 -> ubx_poll_status(9), ubx_poll_pvt(9), ubx_disable_gxvtg(12), ubx_disable_gxrmc(12), 
  6366 ;;		 -> ubx_disable_gxgsv(12), ubx_disable_gxgsa(12), ubx_disable_gxgll(12), ubx_disable_gxgga(12), 
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;  i               2    5[BANK0 ] int 
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1    wreg      void 
  6371 ;; Registers used:
  6372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;Total ram usage:        4 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; Hardware stack levels required when called:    4
  6385 ;; This function calls:
  6386 ;;		_uart_write
  6387 ;; This function is called by:
  6388 ;;		_ubx_send_and_recv
  6389 ;;		_ubx_silence_nmea
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           
  6394                           ;psect for function _ubx_send_str
  6395  0B0C                     _ubx_send_str:	
  6396                           
  6397                           ;ubxcmd.c: 33: int i;
  6398                           ;ubxcmd.c: 34: for (i=1;i<=(str[0]);i++) {
  6399                           
  6400                           ;incstack = 0
  6401                           ; Regs used in _ubx_send_str: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6402  0B0C  3001               	movlw	1
  6403  0B0D  0020               	movlb	0	; select bank0
  6404  0B0E  00A5               	movwf	ubx_send_str@i
  6405  0B0F  3000               	movlw	0
  6406  0B10  00A6               	movwf	ubx_send_str@i+1
  6407  0B11                     l3486:	
  6408  0B11  0823               	movf	ubx_send_str@str,w
  6409  0B12  0086               	movwf	6
  6410  0B13  0824               	movf	ubx_send_str@str+1,w
  6411  0B14  0087               	movwf	7
  6412  0B15  0826               	movf	ubx_send_str@i+1,w
  6413  0B16  3A80               	xorlw	128
  6414  0B17  3C80               	sublw	128
  6415  0B18  1D03               	skipz
  6416  0B19  2B1C               	goto	u2005
  6417  0B1A  0825               	movf	ubx_send_str@i,w
  6418  0B1B  0201               	subwf	1,w
  6419  0B1C                     u2005:	
  6420  0B1C  1C03               	btfss	3,0
  6421  0B1D  0008               	return
  6422                           
  6423                           ;ubxcmd.c: 35: uart_write(str[i]);
  6424  0B1E  0020               	movlb	0	; select bank0
  6425  0B1F  0825               	movf	ubx_send_str@i,w
  6426  0B20  0723               	addwf	ubx_send_str@str,w
  6427  0B21  0086               	movwf	6
  6428  0B22  0826               	movf	ubx_send_str@i+1,w
  6429  0B23  3D24               	addwfc	ubx_send_str@str+1,w
  6430  0B24  0087               	movwf	7
  6431  0B25  0801               	movf	1,w
  6432  0B26  3189  2134  318B   	fcall	_uart_write
  6433  0B29  3001               	movlw	1
  6434  0B2A  0020               	movlb	0	; select bank0
  6435  0B2B  07A5               	addwf	ubx_send_str@i,f
  6436  0B2C  3000               	movlw	0
  6437  0B2D  3DA6               	addwfc	ubx_send_str@i+1,f
  6438  0B2E  2B11               	goto	l3486
  6439  0B2F                     __end_of_ubx_send_str:	
  6440                           
  6441                           	psect	text21
  6442  0947                     __ptext21:	
  6443 ;; *************** function _reset_ubx_struct *****************
  6444 ;; Defined at:
  6445 ;;		line 26 in file "ubx/ubxcmd.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;		None
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  1    wreg      void 
  6452 ;; Registers used:
  6453 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;Total ram usage:        0 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    2
  6466 ;; This function calls:
  6467 ;;		_memset
  6468 ;; This function is called by:
  6469 ;;		_ubx_send_and_recv
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           
  6474                           ;psect for function _reset_ubx_struct
  6475  0947                     _reset_ubx_struct:	
  6476                           
  6477                           ;ubxcmd.c: 27: memset(UbxReceiver.buf, 0, sizeof(UbxReceiver.buf));
  6478                           
  6479                           ;incstack = 0
  6480                           ; Regs used in _reset_ubx_struct: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6481  0947  3089               	movlw	137
  6482  0948  00F3               	movwf	memset@p1
  6483  0949  3023               	movlw	35
  6484  094A  00F4               	movwf	memset@p1+1
  6485  094B  3000               	movlw	0
  6486  094C  00F5               	movwf	memset@c
  6487  094D  00F6               	movwf	memset@c+1
  6488  094E  3066               	movlw	102
  6489  094F  00F7               	movwf	memset@n
  6490  0950  3000               	movlw	0
  6491  0951  00F8               	movwf	memset@n+1
  6492  0952  318A  2201         	fcall	_memset
  6493                           
  6494                           ;ubxcmd.c: 28: UbxReceiver.idx = 0;
  6495  0954  30EF               	movlw	239
  6496  0955  0086               	movwf	6
  6497  0956  3023               	movlw	35
  6498  0957  0087               	movwf	7
  6499  0958  0181               	clrf	1
  6500  0959  0008               	return
  6501  095A                     __end_of_reset_ubx_struct:	
  6502                           
  6503                           	psect	text22
  6504  0A01                     __ptext22:	
  6505 ;; *************** function _memset *****************
  6506 ;; Defined at:
  6507 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;  p1              2    3[COMMON] PTR void 
  6510 ;;		 -> UbxReceiver.buf(102), UbxReceiver(103), 
  6511 ;;  c               2    5[COMMON] int 
  6512 ;;  n               2    7[COMMON] unsigned int 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  p               2    0[BANK0 ] PTR unsigned char 
  6515 ;;		 -> UbxReceiver.buf(102), UbxReceiver(103), 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2    3[COMMON] PTR void 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6525 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;Total ram usage:        8 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    1
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_reset_ubx_struct
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           
  6540                           ;psect for function _memset
  6541  0A01                     _memset:	
  6542                           
  6543                           ;incstack = 0
  6544                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6545  0A01  0874               	movf	memset@p1+1,w
  6546  0A02  0020               	movlb	0	; select bank0
  6547  0A03  00A1               	movwf	memset@p+1
  6548  0A04  0873               	movf	memset@p1,w
  6549  0A05  00A0               	movwf	memset@p
  6550  0A06                     l3454:	
  6551  0A06  3001               	movlw	1
  6552  0A07  02F7               	subwf	memset@n,f
  6553  0A08  3000               	movlw	0
  6554  0A09  3BF8               	subwfb	memset@n+1,f
  6555  0A0A  0A77               	incf	memset@n,w
  6556  0A0B  1903               	btfsc	3,2
  6557  0A0C  0A78               	incf	memset@n+1,w
  6558  0A0D  1903               	btfsc	3,2
  6559  0A0E  0008               	return
  6560  0A0F  0820               	movf	memset@p,w
  6561  0A10  0086               	movwf	6
  6562  0A11  0821               	movf	memset@p+1,w
  6563  0A12  0087               	movwf	7
  6564  0A13  0875               	movf	memset@c,w
  6565  0A14  0081               	movwf	1
  6566  0A15  3001               	movlw	1
  6567  0A16  07A0               	addwf	memset@p,f
  6568  0A17  3000               	movlw	0
  6569  0A18  3DA1               	addwfc	memset@p+1,f
  6570  0A19  2A06               	goto	l3454
  6571  0A1A                     __end_of_memset:	
  6572                           ;	Return value of _memset is never used
  6573                           
  6574                           
  6575                           	psect	text23
  6576  08E7                     __ptext23:	
  6577 ;; *************** function _eval_ubx_buf_for_fix *****************
  6578 ;; Defined at:
  6579 ;;		line 78 in file "ubx/ubxcmd.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;		None
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1    wreg      unsigned char 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;Total ram usage:        0 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    1
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		_have_3d_fix
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           
  6608                           ;psect for function _eval_ubx_buf_for_fix
  6609  08E7                     _eval_ubx_buf_for_fix:	
  6610                           
  6611                           ;ubxcmd.c: 81: if (UbxReceiver.buf[10] == 0x03) return 1;
  6612                           
  6613                           ;incstack = 0
  6614                           ; Regs used in _eval_ubx_buf_for_fix: [wreg+fsr1l+fsr1h+status,2+status,0]
  6615  08E7  3089               	movlw	137
  6616  08E8  0086               	movwf	6
  6617  08E9  3023               	movlw	35
  6618  08EA  0087               	movwf	7
  6619  08EB  314A               	addfsr 1,10
  6620  08EC  3003               	movlw	3
  6621  08ED  0601               	xorwf	1,w
  6622  08EE  1D03               	btfss	3,2
  6623  08EF  28F2               	goto	l3636
  6624  08F0  3001               	movlw	1
  6625  08F1  0008               	return
  6626  08F2                     l3636:	
  6627                           
  6628                           ;ubxcmd.c: 82: return 0;
  6629  08F2  3000               	movlw	0
  6630  08F3  0008               	return
  6631  08F4                     __end_of_eval_ubx_buf_for_fix:	
  6632                           
  6633                           	psect	text24
  6634  03FE                     __ptext24:	
  6635 ;; *************** function _eeprom_write_gps_minimum *****************
  6636 ;; Defined at:
  6637 ;;		line 104 in file "lib/eeprom.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  gpspage3        8   60[BANK0 ] unsigned char [8]
  6642 ;;  gpspage2        8   52[BANK0 ] unsigned char [8]
  6643 ;;  gpspage1        8   44[BANK0 ] unsigned char [8]
  6644 ;;  gpspage4        7   68[BANK0 ] unsigned char [7]
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      void 
  6647 ;; Registers used:
  6648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6655 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;Total ram usage:       33 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    9
  6661 ;; This function calls:
  6662 ;;		_eeprom_page_write
  6663 ;; This function is called by:
  6664 ;;		_i3gnav
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           
  6669                           ;psect for function _eeprom_write_gps_minimum
  6670  03FE                     _eeprom_write_gps_minimum:	
  6671                           
  6672                           ;eeprom.c: 105: uint8_t gpspage1[8];
  6673                           ;eeprom.c: 106: gpspage1[0] = GpsMinimum.year[0];
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in _eeprom_write_gps_minimum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6677  03FE  0021               	movlb	1	; select bank1
  6678  03FF  0820               	movf	_GpsMinimum^(0+128),w	;volatile
  6679  0400  0020               	movlb	0	; select bank0
  6680  0401  00CA               	movwf	??_eeprom_write_gps_minimum
  6681  0402  084A               	movf	??_eeprom_write_gps_minimum,w
  6682  0403  00CC               	movwf	eeprom_write_gps_minimum@gpspage1
  6683                           
  6684                           ;eeprom.c: 107: gpspage1[1] = GpsMinimum.year[1];
  6685  0404  0021               	movlb	1	; select bank1
  6686  0405  0821               	movf	(_GpsMinimum^(0+128)+1),w	;volatile
  6687  0406  0020               	movlb	0	; select bank0
  6688  0407  00CA               	movwf	??_eeprom_write_gps_minimum
  6689  0408  084A               	movf	??_eeprom_write_gps_minimum,w
  6690  0409  00CD               	movwf	eeprom_write_gps_minimum@gpspage1+1
  6691                           
  6692                           ;eeprom.c: 108: gpspage1[2] = GpsMinimum.month;
  6693  040A  0021               	movlb	1	; select bank1
  6694  040B  0822               	movf	(_GpsMinimum^(0+128)+2),w	;volatile
  6695  040C  0020               	movlb	0	; select bank0
  6696  040D  00CA               	movwf	??_eeprom_write_gps_minimum
  6697  040E  084A               	movf	??_eeprom_write_gps_minimum,w
  6698  040F  00CE               	movwf	eeprom_write_gps_minimum@gpspage1+2
  6699                           
  6700                           ;eeprom.c: 109: gpspage1[3] = GpsMinimum.day;
  6701  0410  0021               	movlb	1	; select bank1
  6702  0411  0823               	movf	(_GpsMinimum^(0+128)+3),w	;volatile
  6703  0412  0020               	movlb	0	; select bank0
  6704  0413  00CA               	movwf	??_eeprom_write_gps_minimum
  6705  0414  084A               	movf	??_eeprom_write_gps_minimum,w
  6706  0415  00CF               	movwf	eeprom_write_gps_minimum@gpspage1+3
  6707                           
  6708                           ;eeprom.c: 110: gpspage1[4] = GpsMinimum.hour;
  6709  0416  0021               	movlb	1	; select bank1
  6710  0417  0824               	movf	(_GpsMinimum^(0+128)+4),w	;volatile
  6711  0418  0020               	movlb	0	; select bank0
  6712  0419  00CA               	movwf	??_eeprom_write_gps_minimum
  6713  041A  084A               	movf	??_eeprom_write_gps_minimum,w
  6714  041B  00D0               	movwf	eeprom_write_gps_minimum@gpspage1+4
  6715                           
  6716                           ;eeprom.c: 111: gpspage1[5] = GpsMinimum.minute;
  6717  041C  0021               	movlb	1	; select bank1
  6718  041D  0825               	movf	(_GpsMinimum^(0+128)+5),w	;volatile
  6719  041E  0020               	movlb	0	; select bank0
  6720  041F  00CA               	movwf	??_eeprom_write_gps_minimum
  6721  0420  084A               	movf	??_eeprom_write_gps_minimum,w
  6722  0421  00D1               	movwf	eeprom_write_gps_minimum@gpspage1+5
  6723                           
  6724                           ;eeprom.c: 112: gpspage1[6] = GpsMinimum.second;
  6725  0422  0021               	movlb	1	; select bank1
  6726  0423  0826               	movf	(_GpsMinimum^(0+128)+6),w	;volatile
  6727  0424  0020               	movlb	0	; select bank0
  6728  0425  00CA               	movwf	??_eeprom_write_gps_minimum
  6729  0426  084A               	movf	??_eeprom_write_gps_minimum,w
  6730  0427  00D2               	movwf	eeprom_write_gps_minimum@gpspage1+6
  6731                           
  6732                           ;eeprom.c: 113: gpspage1[7] = GpsMinimum.num_sat;
  6733  0428  0021               	movlb	1	; select bank1
  6734  0429  082A               	movf	(_GpsMinimum^(0+128)+10),w	;volatile
  6735  042A  0020               	movlb	0	; select bank0
  6736  042B  00CA               	movwf	??_eeprom_write_gps_minimum
  6737  042C  084A               	movf	??_eeprom_write_gps_minimum,w
  6738  042D  00D3               	movwf	eeprom_write_gps_minimum@gpspage1+7
  6739                           
  6740                           ;eeprom.c: 116: uint8_t gpspage2[8];
  6741                           ;eeprom.c: 117: gpspage2[0] = GpsMinimum.lon[0];
  6742  042E  0021               	movlb	1	; select bank1
  6743  042F  082B               	movf	(_GpsMinimum^(0+128)+11),w	;volatile
  6744  0430  0020               	movlb	0	; select bank0
  6745  0431  00CA               	movwf	??_eeprom_write_gps_minimum
  6746  0432  084A               	movf	??_eeprom_write_gps_minimum,w
  6747  0433  00D4               	movwf	eeprom_write_gps_minimum@gpspage2
  6748                           
  6749                           ;eeprom.c: 118: gpspage2[1] = GpsMinimum.lon[1];
  6750  0434  0021               	movlb	1	; select bank1
  6751  0435  082C               	movf	(_GpsMinimum^(0+128)+12),w	;volatile
  6752  0436  0020               	movlb	0	; select bank0
  6753  0437  00CA               	movwf	??_eeprom_write_gps_minimum
  6754  0438  084A               	movf	??_eeprom_write_gps_minimum,w
  6755  0439  00D5               	movwf	eeprom_write_gps_minimum@gpspage2+1
  6756                           
  6757                           ;eeprom.c: 119: gpspage2[2] = GpsMinimum.lon[2];
  6758  043A  0021               	movlb	1	; select bank1
  6759  043B  082D               	movf	(_GpsMinimum^(0+128)+13),w	;volatile
  6760  043C  0020               	movlb	0	; select bank0
  6761  043D  00CA               	movwf	??_eeprom_write_gps_minimum
  6762  043E  084A               	movf	??_eeprom_write_gps_minimum,w
  6763  043F  00D6               	movwf	eeprom_write_gps_minimum@gpspage2+2
  6764                           
  6765                           ;eeprom.c: 120: gpspage2[3] = GpsMinimum.lon[3];
  6766  0440  0021               	movlb	1	; select bank1
  6767  0441  082E               	movf	(_GpsMinimum^(0+128)+14),w	;volatile
  6768  0442  0020               	movlb	0	; select bank0
  6769  0443  00CA               	movwf	??_eeprom_write_gps_minimum
  6770  0444  084A               	movf	??_eeprom_write_gps_minimum,w
  6771  0445  00D7               	movwf	eeprom_write_gps_minimum@gpspage2+3
  6772                           
  6773                           ;eeprom.c: 121: gpspage2[4] = GpsMinimum.lat[0];
  6774  0446  0021               	movlb	1	; select bank1
  6775  0447  082F               	movf	(_GpsMinimum^(0+128)+15),w	;volatile
  6776  0448  0020               	movlb	0	; select bank0
  6777  0449  00CA               	movwf	??_eeprom_write_gps_minimum
  6778  044A  084A               	movf	??_eeprom_write_gps_minimum,w
  6779  044B  00D8               	movwf	eeprom_write_gps_minimum@gpspage2+4
  6780                           
  6781                           ;eeprom.c: 122: gpspage2[5] = GpsMinimum.lat[1];
  6782  044C  0021               	movlb	1	; select bank1
  6783  044D  0830               	movf	(_GpsMinimum^(0+128)+16),w	;volatile
  6784  044E  0020               	movlb	0	; select bank0
  6785  044F  00CA               	movwf	??_eeprom_write_gps_minimum
  6786  0450  084A               	movf	??_eeprom_write_gps_minimum,w
  6787  0451  00D9               	movwf	eeprom_write_gps_minimum@gpspage2+5
  6788                           
  6789                           ;eeprom.c: 123: gpspage2[6] = GpsMinimum.lat[2];
  6790  0452  0021               	movlb	1	; select bank1
  6791  0453  0831               	movf	(_GpsMinimum^(0+128)+17),w	;volatile
  6792  0454  0020               	movlb	0	; select bank0
  6793  0455  00CA               	movwf	??_eeprom_write_gps_minimum
  6794  0456  084A               	movf	??_eeprom_write_gps_minimum,w
  6795  0457  00DA               	movwf	eeprom_write_gps_minimum@gpspage2+6
  6796                           
  6797                           ;eeprom.c: 124: gpspage2[7] = GpsMinimum.lat[3];
  6798  0458  0021               	movlb	1	; select bank1
  6799  0459  0832               	movf	(_GpsMinimum^(0+128)+18),w	;volatile
  6800  045A  0020               	movlb	0	; select bank0
  6801  045B  00CA               	movwf	??_eeprom_write_gps_minimum
  6802  045C  084A               	movf	??_eeprom_write_gps_minimum,w
  6803  045D  00DB               	movwf	eeprom_write_gps_minimum@gpspage2+7
  6804                           
  6805                           ;eeprom.c: 127: uint8_t gpspage3[8];
  6806                           ;eeprom.c: 128: gpspage3[0] = GpsMinimum.height[0];
  6807  045E  0021               	movlb	1	; select bank1
  6808  045F  0833               	movf	(_GpsMinimum^(0+128)+19),w	;volatile
  6809  0460  0020               	movlb	0	; select bank0
  6810  0461  00CA               	movwf	??_eeprom_write_gps_minimum
  6811  0462  084A               	movf	??_eeprom_write_gps_minimum,w
  6812  0463  00DC               	movwf	eeprom_write_gps_minimum@gpspage3
  6813                           
  6814                           ;eeprom.c: 129: gpspage3[1] = GpsMinimum.height[1];
  6815  0464  0021               	movlb	1	; select bank1
  6816  0465  0834               	movf	(_GpsMinimum^(0+128)+20),w	;volatile
  6817  0466  0020               	movlb	0	; select bank0
  6818  0467  00CA               	movwf	??_eeprom_write_gps_minimum
  6819  0468  084A               	movf	??_eeprom_write_gps_minimum,w
  6820  0469  00DD               	movwf	eeprom_write_gps_minimum@gpspage3+1
  6821                           
  6822                           ;eeprom.c: 130: gpspage3[2] = GpsMinimum.height[2];
  6823  046A  0021               	movlb	1	; select bank1
  6824  046B  0835               	movf	(_GpsMinimum^(0+128)+21),w	;volatile
  6825  046C  0020               	movlb	0	; select bank0
  6826  046D  00CA               	movwf	??_eeprom_write_gps_minimum
  6827  046E  084A               	movf	??_eeprom_write_gps_minimum,w
  6828  046F  00DE               	movwf	eeprom_write_gps_minimum@gpspage3+2
  6829                           
  6830                           ;eeprom.c: 131: gpspage3[3] = GpsMinimum.height[3];
  6831  0470  0021               	movlb	1	; select bank1
  6832  0471  0836               	movf	(_GpsMinimum^(0+128)+22),w	;volatile
  6833  0472  0020               	movlb	0	; select bank0
  6834  0473  00CA               	movwf	??_eeprom_write_gps_minimum
  6835  0474  084A               	movf	??_eeprom_write_gps_minimum,w
  6836  0475  00DF               	movwf	eeprom_write_gps_minimum@gpspage3+3
  6837                           
  6838                           ;eeprom.c: 132: gpspage3[4] = GpsMinimum.gspeed[0];
  6839  0476  0021               	movlb	1	; select bank1
  6840  0477  0837               	movf	(_GpsMinimum^(0+128)+23),w	;volatile
  6841  0478  0020               	movlb	0	; select bank0
  6842  0479  00CA               	movwf	??_eeprom_write_gps_minimum
  6843  047A  084A               	movf	??_eeprom_write_gps_minimum,w
  6844  047B  00E0               	movwf	eeprom_write_gps_minimum@gpspage3+4
  6845                           
  6846                           ;eeprom.c: 133: gpspage3[5] = GpsMinimum.gspeed[1];
  6847  047C  0021               	movlb	1	; select bank1
  6848  047D  0838               	movf	(_GpsMinimum^(0+128)+24),w	;volatile
  6849  047E  0020               	movlb	0	; select bank0
  6850  047F  00CA               	movwf	??_eeprom_write_gps_minimum
  6851  0480  084A               	movf	??_eeprom_write_gps_minimum,w
  6852  0481  00E1               	movwf	eeprom_write_gps_minimum@gpspage3+5
  6853                           
  6854                           ;eeprom.c: 134: gpspage3[6] = GpsMinimum.gspeed[2];
  6855  0482  0021               	movlb	1	; select bank1
  6856  0483  0839               	movf	(_GpsMinimum^(0+128)+25),w	;volatile
  6857  0484  0020               	movlb	0	; select bank0
  6858  0485  00CA               	movwf	??_eeprom_write_gps_minimum
  6859  0486  084A               	movf	??_eeprom_write_gps_minimum,w
  6860  0487  00E2               	movwf	eeprom_write_gps_minimum@gpspage3+6
  6861                           
  6862                           ;eeprom.c: 135: gpspage3[7] = GpsMinimum.gspeed[3];
  6863  0488  0021               	movlb	1	; select bank1
  6864  0489  083A               	movf	(_GpsMinimum^(0+128)+26),w	;volatile
  6865  048A  0020               	movlb	0	; select bank0
  6866  048B  00CA               	movwf	??_eeprom_write_gps_minimum
  6867  048C  084A               	movf	??_eeprom_write_gps_minimum,w
  6868  048D  00E3               	movwf	eeprom_write_gps_minimum@gpspage3+7
  6869                           
  6870                           ;eeprom.c: 138: uint8_t gpspage4[7];
  6871                           ;eeprom.c: 139: gpspage4[0] = GpsMinimum.direction[0];
  6872  048E  0021               	movlb	1	; select bank1
  6873  048F  083B               	movf	(_GpsMinimum^(0+128)+27),w	;volatile
  6874  0490  0020               	movlb	0	; select bank0
  6875  0491  00CA               	movwf	??_eeprom_write_gps_minimum
  6876  0492  084A               	movf	??_eeprom_write_gps_minimum,w
  6877  0493  00E4               	movwf	eeprom_write_gps_minimum@gpspage4
  6878                           
  6879                           ;eeprom.c: 140: gpspage4[1] = GpsMinimum.direction[1];
  6880  0494  0021               	movlb	1	; select bank1
  6881  0495  083C               	movf	(_GpsMinimum^(0+128)+28),w	;volatile
  6882  0496  0020               	movlb	0	; select bank0
  6883  0497  00CA               	movwf	??_eeprom_write_gps_minimum
  6884  0498  084A               	movf	??_eeprom_write_gps_minimum,w
  6885  0499  00E5               	movwf	eeprom_write_gps_minimum@gpspage4+1
  6886                           
  6887                           ;eeprom.c: 141: gpspage4[2] = GpsMinimum.direction[2];
  6888  049A  0021               	movlb	1	; select bank1
  6889  049B  083D               	movf	(_GpsMinimum^(0+128)+29),w	;volatile
  6890  049C  0020               	movlb	0	; select bank0
  6891  049D  00CA               	movwf	??_eeprom_write_gps_minimum
  6892  049E  084A               	movf	??_eeprom_write_gps_minimum,w
  6893  049F  00E6               	movwf	eeprom_write_gps_minimum@gpspage4+2
  6894                           
  6895                           ;eeprom.c: 142: gpspage4[3] = GpsMinimum.direction[3];
  6896  04A0  0021               	movlb	1	; select bank1
  6897  04A1  083E               	movf	(_GpsMinimum^(0+128)+30),w	;volatile
  6898  04A2  0020               	movlb	0	; select bank0
  6899  04A3  00CA               	movwf	??_eeprom_write_gps_minimum
  6900  04A4  084A               	movf	??_eeprom_write_gps_minimum,w
  6901  04A5  00E7               	movwf	eeprom_write_gps_minimum@gpspage4+3
  6902                           
  6903                           ;eeprom.c: 143: gpspage4[4] = GpsMinimum.valid_flags;
  6904  04A6  0021               	movlb	1	; select bank1
  6905  04A7  0827               	movf	(_GpsMinimum^(0+128)+7),w	;volatile
  6906  04A8  0020               	movlb	0	; select bank0
  6907  04A9  00CA               	movwf	??_eeprom_write_gps_minimum
  6908  04AA  084A               	movf	??_eeprom_write_gps_minimum,w
  6909  04AB  00E8               	movwf	eeprom_write_gps_minimum@gpspage4+4
  6910                           
  6911                           ;eeprom.c: 144: gpspage4[5] = GpsMinimum.gps_flags;
  6912  04AC  0021               	movlb	1	; select bank1
  6913  04AD  0828               	movf	(_GpsMinimum^(0+128)+8),w	;volatile
  6914  04AE  0020               	movlb	0	; select bank0
  6915  04AF  00CA               	movwf	??_eeprom_write_gps_minimum
  6916  04B0  084A               	movf	??_eeprom_write_gps_minimum,w
  6917  04B1  00E9               	movwf	eeprom_write_gps_minimum@gpspage4+5
  6918                           
  6919                           ;eeprom.c: 145: gpspage4[6] = GpsMinimum.time_flags;
  6920  04B2  0021               	movlb	1	; select bank1
  6921  04B3  0829               	movf	(_GpsMinimum^(0+128)+9),w	;volatile
  6922  04B4  0020               	movlb	0	; select bank0
  6923  04B5  00CA               	movwf	??_eeprom_write_gps_minimum
  6924  04B6  084A               	movf	??_eeprom_write_gps_minimum,w
  6925  04B7  00EA               	movwf	eeprom_write_gps_minimum@gpspage4+6
  6926                           
  6927                           ;eeprom.c: 148: eeprom_page_write(14, gpspage1, 8);
  6928  04B8  304C               	movlw	(low (eeprom_write_gps_minimum@gpspage1| 0))& (0+255)
  6929  04B9  00CA               	movwf	??_eeprom_write_gps_minimum
  6930  04BA  084A               	movf	??_eeprom_write_gps_minimum,w
  6931  04BB  00C3               	movwf	eeprom_page_write@page_data
  6932  04BC  3008               	movlw	8
  6933  04BD  00CB               	movwf	??_eeprom_write_gps_minimum+1
  6934  04BE  084B               	movf	??_eeprom_write_gps_minimum+1,w
  6935  04BF  00C4               	movwf	eeprom_page_write@len
  6936  04C0  300E               	movlw	14
  6937  04C1  318C  24C8  3183   	fcall	_eeprom_page_write
  6938                           
  6939                           ;eeprom.c: 149: eeprom_page_write(15, gpspage2, 8);
  6940  04C4  3054               	movlw	(low (eeprom_write_gps_minimum@gpspage2| 0))& (0+255)
  6941  04C5  0020               	movlb	0	; select bank0
  6942  04C6  00CA               	movwf	??_eeprom_write_gps_minimum
  6943  04C7  084A               	movf	??_eeprom_write_gps_minimum,w
  6944  04C8  00C3               	movwf	eeprom_page_write@page_data
  6945  04C9  3008               	movlw	8
  6946  04CA  00CB               	movwf	??_eeprom_write_gps_minimum+1
  6947  04CB  084B               	movf	??_eeprom_write_gps_minimum+1,w
  6948  04CC  00C4               	movwf	eeprom_page_write@len
  6949  04CD  300F               	movlw	15
  6950  04CE  318C  24C8  3183   	fcall	_eeprom_page_write
  6951                           
  6952                           ;eeprom.c: 150: eeprom_page_write(16, gpspage3, 8);
  6953  04D1  305C               	movlw	(low (eeprom_write_gps_minimum@gpspage3| 0))& (0+255)
  6954  04D2  0020               	movlb	0	; select bank0
  6955  04D3  00CA               	movwf	??_eeprom_write_gps_minimum
  6956  04D4  084A               	movf	??_eeprom_write_gps_minimum,w
  6957  04D5  00C3               	movwf	eeprom_page_write@page_data
  6958  04D6  3008               	movlw	8
  6959  04D7  00CB               	movwf	??_eeprom_write_gps_minimum+1
  6960  04D8  084B               	movf	??_eeprom_write_gps_minimum+1,w
  6961  04D9  00C4               	movwf	eeprom_page_write@len
  6962  04DA  3010               	movlw	16
  6963  04DB  318C  24C8  3183   	fcall	_eeprom_page_write
  6964                           
  6965                           ;eeprom.c: 151: eeprom_page_write(17, gpspage4, 8);
  6966  04DE  3064               	movlw	(low (eeprom_write_gps_minimum@gpspage4| 0))& (0+255)
  6967  04DF  0020               	movlb	0	; select bank0
  6968  04E0  00CA               	movwf	??_eeprom_write_gps_minimum
  6969  04E1  084A               	movf	??_eeprom_write_gps_minimum,w
  6970  04E2  00C3               	movwf	eeprom_page_write@page_data
  6971  04E3  3008               	movlw	8
  6972  04E4  00CB               	movwf	??_eeprom_write_gps_minimum+1
  6973  04E5  084B               	movf	??_eeprom_write_gps_minimum+1,w
  6974  04E6  00C4               	movwf	eeprom_page_write@len
  6975  04E7  3011               	movlw	17
  6976  04E8  318C  24C8         	fcall	_eeprom_page_write
  6977  04EA  0008               	return
  6978  04EB                     __end_of_eeprom_write_gps_minimum:	
  6979                           
  6980                           	psect	text25
  6981  0AA9                     __ptext25:	
  6982 ;; *************** function _pic_init *****************
  6983 ;; Defined at:
  6984 ;;		line 144 in file "lib/io.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      void 
  6991 ;; Registers used:
  6992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;Total ram usage:        1 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:    3
  7005 ;; This function calls:
  7006 ;;		_eusart_init
  7007 ;;		_i2c_init
  7008 ;;		_pwm_init
  7009 ;;		_setup_fvrc
  7010 ;;		_setup_interrupts
  7011 ;;		_setup_io
  7012 ;;		_timer0_init
  7013 ;; This function is called by:
  7014 ;;		_main
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _pic_init
  7020  0AA9                     _pic_init:	
  7021                           
  7022                           ;io.c: 146: OSCCON = 0x60;
  7023                           
  7024                           ;incstack = 0
  7025                           ; Regs used in _pic_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7026  0AA9  3060               	movlw	96
  7027  0AAA  0021               	movlb	1	; select bank1
  7028  0AAB  0099               	movwf	25	;volatile
  7029                           
  7030                           ;io.c: 148: setup_io();
  7031  0AAC  3188  20C3  318A   	fcall	_setup_io
  7032                           
  7033                           ;io.c: 149: setup_fvrc();
  7034  0AAF  3188  20A4  318A   	fcall	_setup_fvrc
  7035                           
  7036                           ;io.c: 151: WDTCON = 0x1C;
  7037  0AB2  301C               	movlw	28
  7038  0AB3  0021               	movlb	1	; select bank1
  7039  0AB4  0097               	movwf	23	;volatile
  7040                           
  7041                           ;io.c: 155: eusart_init();
  7042  0AB5  3188  2090  318A   	fcall	_eusart_init
  7043                           
  7044                           ;io.c: 156: i2c_init();
  7045  0AB8  3188  209A  318A   	fcall	_i2c_init
  7046                           
  7047                           ;io.c: 157: timer0_init();
  7048  0ABB  3188  20AE  318A   	fcall	_timer0_init
  7049                           
  7050                           ;io.c: 158: setup_interrupts();
  7051  0ABE  3188  206A  318A   	fcall	_setup_interrupts
  7052                           
  7053                           ;io.c: 159: pwm_init();
  7054  0AC1  318A  22C9         	fcall	_pwm_init
  7055                           
  7056                           ;io.c: 160: LATB &= ~(0x20);
  7057  0AC3  30DF               	movlw	223
  7058  0AC4  00F8               	movwf	??_pic_init
  7059  0AC5  0878               	movf	??_pic_init,w
  7060  0AC6  0022               	movlb	2	; select bank2
  7061  0AC7  058D               	andwf	13,f	;volatile
  7062  0AC8  0008               	return
  7063  0AC9                     __end_of_pic_init:	
  7064                           
  7065                           	psect	text26
  7066  08AE                     __ptext26:	
  7067 ;; *************** function _timer0_init *****************
  7068 ;; Defined at:
  7069 ;;		line 67 in file "lib/io.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;		None
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  1    wreg      void 
  7076 ;; Registers used:
  7077 ;;		status,2
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;Total ram usage:        0 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_pic_init
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           
  7098                           ;psect for function _timer0_init
  7099  08AE                     _timer0_init:	
  7100                           
  7101                           ;io.c: 68: TMR0 = 0;
  7102                           
  7103                           ;incstack = 0
  7104                           ; Regs used in _timer0_init: [status,2]
  7105  08AE  0020               	movlb	0	; select bank0
  7106  08AF  0195               	clrf	21	;volatile
  7107                           
  7108                           ;io.c: 69: TMR0CS = 0;
  7109  08B0  0021               	movlb	1	; select bank1
  7110  08B1  1295               	bcf	21,5	;volatile
  7111                           
  7112                           ;io.c: 70: TMR0SE = 0;
  7113  08B2  1215               	bcf	21,4	;volatile
  7114                           
  7115                           ;io.c: 71: PSA = 0;
  7116  08B3  1195               	bcf	21,3	;volatile
  7117                           
  7118                           ;io.c: 72: PS0 = 1;
  7119  08B4  1415               	bsf	21,0	;volatile
  7120                           
  7121                           ;io.c: 73: PS1 = 1;
  7122  08B5  1495               	bsf	21,1	;volatile
  7123                           
  7124                           ;io.c: 74: PS2 = 1;
  7125  08B6  1515               	bsf	21,2	;volatile
  7126  08B7  0008               	return
  7127  08B8                     __end_of_timer0_init:	
  7128                           
  7129                           	psect	text27
  7130  08C3                     __ptext27:	
  7131 ;; *************** function _setup_io *****************
  7132 ;; Defined at:
  7133 ;;		line 12 in file "lib/io.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;		None
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;		None
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;Total ram usage:        0 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    1
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_pic_init
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           
  7162                           ;psect for function _setup_io
  7163  08C3                     _setup_io:	
  7164                           
  7165                           ;io.c: 13: TRISA = 0b11000110;
  7166                           
  7167                           ;incstack = 0
  7168                           ; Regs used in _setup_io: [wreg]
  7169  08C3  30C6               	movlw	198
  7170  08C4  0021               	movlb	1	; select bank1
  7171  08C5  008C               	movwf	12	;volatile
  7172                           
  7173                           ;io.c: 14: ANSELA = 0b00000100;
  7174  08C6  3004               	movlw	4
  7175  08C7  0023               	movlb	3	; select bank3
  7176  08C8  008C               	movwf	12	;volatile
  7177                           
  7178                           ;io.c: 15: TRISB = 0b00110100;
  7179  08C9  3034               	movlw	52
  7180  08CA  0021               	movlb	1	; select bank1
  7181  08CB  008D               	movwf	13	;volatile
  7182                           
  7183                           ;io.c: 16: TRISC = 0b10100001;
  7184  08CC  30A1               	movlw	161
  7185  08CD  008E               	movwf	14	;volatile
  7186  08CE  0008               	return
  7187  08CF                     __end_of_setup_io:	
  7188                           
  7189                           	psect	text28
  7190  086A                     __ptext28:	
  7191 ;; *************** function _setup_interrupts *****************
  7192 ;; Defined at:
  7193 ;;		line 60 in file "lib/io.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;		None
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;		None
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		None
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;Total ram usage:        0 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:    1
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		_pic_init
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           
  7222                           ;psect for function _setup_interrupts
  7223  086A                     _setup_interrupts:	
  7224                           
  7225                           ;io.c: 61: RCIE = 0;
  7226                           
  7227                           ;incstack = 0
  7228                           ; Regs used in _setup_interrupts: []
  7229  086A  0021               	movlb	1	; select bank1
  7230  086B  1291               	bcf	17,5	;volatile
  7231                           
  7232                           ;io.c: 62: TMR0IE = 0;
  7233  086C  128B               	bcf	11,5	;volatile
  7234                           
  7235                           ;io.c: 63: PEIE = 1;
  7236  086D  170B               	bsf	11,6	;volatile
  7237                           
  7238                           ;io.c: 64: GIE = 1;
  7239  086E  178B               	bsf	11,7	;volatile
  7240  086F  0008               	return
  7241  0870                     __end_of_setup_interrupts:	
  7242                           
  7243                           	psect	text29
  7244  08A4                     __ptext29:	
  7245 ;; *************** function _setup_fvrc *****************
  7246 ;; Defined at:
  7247 ;;		line 19 in file "lib/io.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;		None
  7250 ;; Auto vars:     Size  Location     Type
  7251 ;;		None
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  1    wreg      void 
  7254 ;; Registers used:
  7255 ;;		wreg
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;Total ram usage:        0 bytes
  7266 ;; Hardware stack levels used:    1
  7267 ;; Hardware stack levels required when called:    1
  7268 ;; This function calls:
  7269 ;;		Nothing
  7270 ;; This function is called by:
  7271 ;;		_pic_init
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           
  7276                           ;psect for function _setup_fvrc
  7277  08A4                     _setup_fvrc:	
  7278                           
  7279                           ;io.c: 20: CM1CON0 = 0x96;
  7280                           
  7281                           ;incstack = 0
  7282                           ; Regs used in _setup_fvrc: [wreg]
  7283  08A4  3096               	movlw	150
  7284  08A5  0022               	movlb	2	; select bank2
  7285  08A6  0091               	movwf	17	;volatile
  7286                           
  7287                           ;io.c: 24: CM1CON1 = 0x20;
  7288  08A7  3020               	movlw	32
  7289  08A8  0092               	movwf	18	;volatile
  7290                           
  7291                           ;io.c: 27: FVRCON = 0xC4;
  7292  08A9  30C4               	movlw	196
  7293  08AA  0097               	movwf	23	;volatile
  7294  08AB                     l515:	
  7295                           ;io.c: 29: while (!FVRRDY);
  7296                           
  7297  08AB  1B17               	btfsc	23,6	;volatile
  7298  08AC  0008               	return
  7299  08AD  28AB               	goto	l515
  7300  08AE                     __end_of_setup_fvrc:	
  7301                           
  7302                           	psect	text30
  7303  0AC9                     __ptext30:	
  7304 ;; *************** function _pwm_init *****************
  7305 ;; Defined at:
  7306 ;;		line 77 in file "lib/io.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;		None
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;		None
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;Total ram usage:        0 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    2
  7327 ;; This function calls:
  7328 ;;		_set_led_duty
  7329 ;; This function is called by:
  7330 ;;		_pic_init
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           
  7335                           ;psect for function _pwm_init
  7336  0AC9                     _pwm_init:	
  7337                           
  7338                           ;io.c: 79: CCP1CON= 0x0C;
  7339                           
  7340                           ;incstack = 0
  7341                           ; Regs used in _pwm_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7342  0AC9  300C               	movlw	12
  7343  0ACA  0025               	movlb	5	; select bank5
  7344  0ACB  0093               	movwf	19	;volatile
  7345                           
  7346                           ;io.c: 80: CCP2CON= 0x0C;
  7347  0ACC  300C               	movlw	12
  7348  0ACD  009A               	movwf	26	;volatile
  7349                           
  7350                           ;io.c: 82: PR2 = 0x17;
  7351  0ACE  3017               	movlw	23
  7352  0ACF  0020               	movlb	0	; select bank0
  7353  0AD0  009B               	movwf	27	;volatile
  7354                           
  7355                           ;io.c: 83: T2CON = 0x04;
  7356  0AD1  3004               	movlw	4
  7357  0AD2  009C               	movwf	28	;volatile
  7358                           
  7359                           ;io.c: 85: set_led_duty(0, 0);
  7360  0AD3  3000               	movlw	0
  7361  0AD4  00F3               	movwf	set_led_duty@duty
  7362  0AD5  00F4               	movwf	set_led_duty@duty+1
  7363  0AD6  3000               	movlw	0
  7364  0AD7  318E  26F8  318A   	fcall	_set_led_duty
  7365                           
  7366                           ;io.c: 86: set_led_duty(1, 0);
  7367  0ADA  3000               	movlw	0
  7368  0ADB  00F3               	movwf	set_led_duty@duty
  7369  0ADC  00F4               	movwf	set_led_duty@duty+1
  7370  0ADD  3001               	movlw	1
  7371  0ADE  318E  26F8  318A   	fcall	_set_led_duty
  7372                           
  7373                           ;io.c: 87: set_led_duty(2, 0);
  7374  0AE1  3000               	movlw	0
  7375  0AE2  00F3               	movwf	set_led_duty@duty
  7376  0AE3  00F4               	movwf	set_led_duty@duty+1
  7377  0AE4  3002               	movlw	2
  7378  0AE5  318E  26F8         	fcall	_set_led_duty
  7379                           
  7380                           ;io.c: 89: TMR2ON = 1;
  7381  0AE7  0020               	movlb	0	; select bank0
  7382  0AE8  151C               	bsf	28,2	;volatile
  7383  0AE9  0008               	return
  7384  0AEA                     __end_of_pwm_init:	
  7385                           
  7386                           	psect	text31
  7387  089A                     __ptext31:	
  7388 ;; *************** function _i2c_init *****************
  7389 ;; Defined at:
  7390 ;;		line 52 in file "lib/io.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;		None
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;		None
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, status,2
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;Total ram usage:        0 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    1
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_pic_init
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           
  7419                           ;psect for function _i2c_init
  7420  089A                     _i2c_init:	
  7421                           
  7422                           ;io.c: 53: SSPADD = 0x04;
  7423                           
  7424                           ;incstack = 0
  7425                           ; Regs used in _i2c_init: [wreg+status,2]
  7426  089A  3004               	movlw	4
  7427  089B  0024               	movlb	4	; select bank4
  7428  089C  0092               	movwf	18	;volatile
  7429                           
  7430                           ;io.c: 54: SSPCON1 = 0x28;
  7431  089D  3028               	movlw	40
  7432  089E  0095               	movwf	21	;volatile
  7433                           
  7434                           ;io.c: 55: SSPSTAT = 0x00;
  7435  089F  0194               	clrf	20	;volatile
  7436                           
  7437                           ;io.c: 57: TRISC = 0x18;
  7438  08A0  3018               	movlw	24
  7439  08A1  0021               	movlb	1	; select bank1
  7440  08A2  008E               	movwf	14	;volatile
  7441  08A3  0008               	return
  7442  08A4                     __end_of_i2c_init:	
  7443                           
  7444                           	psect	text32
  7445  0890                     __ptext32:	
  7446 ;; *************** function _eusart_init *****************
  7447 ;; Defined at:
  7448 ;;		line 33 in file "lib/io.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;		None
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;		None
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  1    wreg      void 
  7455 ;; Registers used:
  7456 ;;		wreg
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;Total ram usage:        0 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:    1
  7469 ;; This function calls:
  7470 ;;		Nothing
  7471 ;; This function is called by:
  7472 ;;		_pic_init
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           
  7477                           ;psect for function _eusart_init
  7478  0890                     _eusart_init:	
  7479                           
  7480                           ;io.c: 34: SP1BRGL = 0x0C;
  7481                           
  7482                           ;incstack = 0
  7483                           ; Regs used in _eusart_init: [wreg]
  7484  0890  300C               	movlw	12
  7485  0891  0023               	movlb	3	; select bank3
  7486  0892  009B               	movwf	27	;volatile
  7487                           
  7488                           ;io.c: 38: BRGH = 1;
  7489  0893  151E               	bsf	30,2	;volatile
  7490                           
  7491                           ;io.c: 39: SYNC = 0;
  7492  0894  121E               	bcf	30,4	;volatile
  7493                           
  7494                           ;io.c: 40: BRG16 = 0;
  7495  0895  119F               	bcf	31,3	;volatile
  7496                           
  7497                           ;io.c: 46: SPEN = 1;
  7498  0896  179D               	bsf	29,7	;volatile
  7499                           
  7500                           ;io.c: 47: CREN = 1;
  7501  0897  161D               	bsf	29,4	;volatile
  7502                           
  7503                           ;io.c: 48: TXEN = 1;
  7504  0898  169E               	bsf	30,5	;volatile
  7505  0899  0008               	return
  7506  089A                     __end_of_eusart_init:	
  7507                           
  7508                           	psect	text33
  7509  0B53                     __ptext33:	
  7510 ;; *************** function _let_nrf_update_eeprom *****************
  7511 ;; Defined at:
  7512 ;;		line 18 in file "sys/brex.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;Total ram usage:        1 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:   10
  7533 ;; This function calls:
  7534 ;;		_eeprom_write_nrf52_sig_byte
  7535 ;;		_is_nrfcomplete_high
  7536 ;;		_uart_write_string
  7537 ;; This function is called by:
  7538 ;;		_main
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function _let_nrf_update_eeprom
  7544  0B53                     _let_nrf_update_eeprom:	
  7545                           
  7546                           ;brex.c: 21: eeprom_write_nrf52_sig_byte(0x0F);
  7547                           
  7548                           ;incstack = 0
  7549                           ; Regs used in _let_nrf_update_eeprom: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7550  0B53  300F               	movlw	15
  7551  0B54  3188  2086  318B   	fcall	_eeprom_write_nrf52_sig_byte
  7552                           
  7553                           ;brex.c: 23: LATA |= 0x08; LATB |= 0x20;
  7554  0B57  0022               	movlb	2	; select bank2
  7555  0B58  158C               	bsf	12,3	;volatile
  7556  0B59  168D               	bsf	13,5	;volatile
  7557                           
  7558                           ;brex.c: 25: uart_write_string("Waiting for NRF52 to finish...\r\n");
  7559  0B5A  302A               	movlw	low (STR_11| (0+32768))
  7560  0B5B  0020               	movlb	0	; select bank0
  7561  0B5C  00A3               	movwf	uart_write_string@str
  7562  0B5D  3081               	movlw	high (STR_11| (0+32768))
  7563  0B5E  00A4               	movwf	uart_write_string@str+1
  7564  0B5F  318A  2234  318B   	fcall	_uart_write_string
  7565  0B62                     l4222:	
  7566                           ;brex.c: 27: while (!is_nrfcomplete_high());
  7567                           
  7568  0B62  3188  205A  318B   	fcall	_is_nrfcomplete_high
  7569  0B65  3A00               	xorlw	0
  7570  0B66  1903               	skipnz
  7571  0B67  2B62               	goto	l4222
  7572                           
  7573                           ;brex.c: 29: uart_write_string("...NRF52 has finished.\r\n");
  7574  0B68  30F6               	movlw	low (STR_12| (0+32768))
  7575  0B69  0020               	movlb	0	; select bank0
  7576  0B6A  00A3               	movwf	uart_write_string@str
  7577  0B6B  3081               	movlw	high (STR_12| (0+32768))
  7578  0B6C  00A4               	movwf	uart_write_string@str+1
  7579  0B6D  318A  2234         	fcall	_uart_write_string
  7580                           
  7581                           ;brex.c: 31: LATA &= (0x08); LATB &= ~(0x20);
  7582  0B6F  3008               	movlw	8
  7583  0B70  0020               	movlb	0	; select bank0
  7584  0B71  00C7               	movwf	??_let_nrf_update_eeprom
  7585  0B72  0847               	movf	??_let_nrf_update_eeprom,w
  7586  0B73  0022               	movlb	2	; select bank2
  7587  0B74  058C               	andwf	12,f	;volatile
  7588  0B75  30DF               	movlw	223
  7589  0B76  0020               	movlb	0	; select bank0
  7590  0B77  00C7               	movwf	??_let_nrf_update_eeprom
  7591  0B78  0847               	movf	??_let_nrf_update_eeprom,w
  7592  0B79  0022               	movlb	2	; select bank2
  7593  0B7A  058D               	andwf	13,f	;volatile
  7594  0B7B  0008               	return
  7595  0B7C                     __end_of_let_nrf_update_eeprom:	
  7596                           
  7597                           	psect	text34
  7598  085A                     __ptext34:	
  7599 ;; *************** function _is_nrfcomplete_high *****************
  7600 ;; Defined at:
  7601 ;;		line 140 in file "lib/io.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;		None
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;		None
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  1    wreg      unsigned char 
  7608 ;; Registers used:
  7609 ;;		wreg, status,2
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7619 ;;Total ram usage:        0 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    1
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_let_nrf_update_eeprom
  7626 ;;		_i3gnav
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           
  7631                           ;psect for function _is_nrfcomplete_high
  7632  085A                     _is_nrfcomplete_high:	
  7633                           
  7634                           ;io.c: 141: return (PORTA & 0x02);
  7635                           
  7636                           ;incstack = 0
  7637                           ; Regs used in _is_nrfcomplete_high: [wreg+status,2]
  7638  085A  0020               	movlb	0	; select bank0
  7639  085B  080C               	movf	12,w	;volatile
  7640  085C  3902               	andlw	2
  7641  085D  0008               	return
  7642  085E                     __end_of_is_nrfcomplete_high:	
  7643                           
  7644                           	psect	text35
  7645  0886                     __ptext35:	
  7646 ;; *************** function _eeprom_write_nrf52_sig_byte *****************
  7647 ;; Defined at:
  7648 ;;		line 154 in file "lib/eeprom.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  sig_byte        1    wreg     unsigned char 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  sig_byte        1   38[BANK0 ] unsigned char 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  1    wreg      void 
  7655 ;; Registers used:
  7656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;Total ram usage:        2 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; Hardware stack levels required when called:    9
  7669 ;; This function calls:
  7670 ;;		_eeprom_single_write
  7671 ;; This function is called by:
  7672 ;;		_let_nrf_update_eeprom
  7673 ;;		_i3gnav
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           
  7678                           ;psect for function _eeprom_write_nrf52_sig_byte
  7679  0886                     _eeprom_write_nrf52_sig_byte:	
  7680                           
  7681                           ;incstack = 0
  7682                           ; Regs used in _eeprom_write_nrf52_sig_byte: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7683                           ;eeprom_write_nrf52_sig_byte@sig_byte stored from wreg
  7684  0886  0020               	movlb	0	; select bank0
  7685  0887  00C6               	movwf	eeprom_write_nrf52_sig_byte@sig_byte
  7686                           
  7687                           ;eeprom.c: 155: eeprom_single_write(0x0A, sig_byte);
  7688  0888  0846               	movf	eeprom_write_nrf52_sig_byte@sig_byte,w
  7689  0889  00C5               	movwf	??_eeprom_write_nrf52_sig_byte
  7690  088A  0845               	movf	??_eeprom_write_nrf52_sig_byte,w
  7691  088B  00C3               	movwf	eeprom_single_write@addr
  7692  088C  300A               	movlw	10
  7693  088D  318A  228B         	fcall	_eeprom_single_write
  7694  088F  0008               	return
  7695  0890                     __end_of_eeprom_write_nrf52_sig_byte:	
  7696                           
  7697                           	psect	text36
  7698  0856                     __ptext36:	
  7699 ;; *************** function _is_usb_plugged_in *****************
  7700 ;; Defined at:
  7701 ;;		line 116 in file "lib/io.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;		None
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;		None
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      unsigned char 
  7708 ;; Registers used:
  7709 ;;		wreg, status,2
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;Total ram usage:        0 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    1
  7722 ;; This function calls:
  7723 ;;		Nothing
  7724 ;; This function is called by:
  7725 ;;		_main
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           
  7730                           ;psect for function _is_usb_plugged_in
  7731  0856                     _is_usb_plugged_in:	
  7732                           
  7733                           ;io.c: 117: return (PORTC & 0x01);
  7734                           
  7735                           ;incstack = 0
  7736                           ; Regs used in _is_usb_plugged_in: [wreg+status,2]
  7737  0856  0020               	movlb	0	; select bank0
  7738  0857  080E               	movf	14,w	;volatile
  7739  0858  3901               	andlw	1
  7740  0859  0008               	return
  7741  085A                     __end_of_is_usb_plugged_in:	
  7742                           
  7743                           	psect	text37
  7744  08B8                     __ptext37:	
  7745 ;; *************** function _is_this_the_first_pwrup *****************
  7746 ;; Defined at:
  7747 ;;		line 7 in file "sys/ichex.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      unsigned char 
  7754 ;; Registers used:
  7755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    9
  7768 ;; This function calls:
  7769 ;;		_eeprom_single_read
  7770 ;; This function is called by:
  7771 ;;		_main
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           
  7776                           ;psect for function _is_this_the_first_pwrup
  7777  08B8                     _is_this_the_first_pwrup:	
  7778                           
  7779                           ;ichex.c: 8: if (eeprom_single_read(0x0F) != 1) {
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in _is_this_the_first_pwrup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7783  08B8  300F               	movlw	15
  7784  08B9  318C  2400  3188   	fcall	_eeprom_single_read
  7785  08BC  3A01               	xorlw	1
  7786  08BD  1903               	skipnz
  7787  08BE  28C1               	goto	l4162
  7788                           
  7789                           ;ichex.c: 9: return 1;
  7790  08BF  3001               	movlw	1
  7791  08C0  0008               	return
  7792  08C1                     l4162:	
  7793                           
  7794                           ;ichex.c: 10: }
  7795                           ;ichex.c: 11: return 0;
  7796  08C1  3000               	movlw	0
  7797  08C2  0008               	return
  7798  08C3                     __end_of_is_this_the_first_pwrup:	
  7799                           
  7800                           	psect	text38
  7801  0C00                     __ptext38:	
  7802 ;; *************** function _eeprom_single_read *****************
  7803 ;; Defined at:
  7804 ;;		line 31 in file "lib/eeprom.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  addr            1    wreg     unsigned char 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  addr            1   36[BANK0 ] unsigned char 
  7809 ;;  ret             1   37[BANK0 ] unsigned char 
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  1    wreg      unsigned char 
  7812 ;; Registers used:
  7813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;Total ram usage:        3 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:    8
  7826 ;; This function calls:
  7827 ;;		_i2c_gen_read
  7828 ;;		_i2c_get_read_data
  7829 ;;		_i2c_send_nack
  7830 ;;		_i2c_start
  7831 ;;		_i2c_stop
  7832 ;;		_i2c_wait_for_ack
  7833 ;;		_i2c_write_data
  7834 ;;		_send_eeprom_read
  7835 ;;		_send_eeprom_write
  7836 ;; This function is called by:
  7837 ;;		_main
  7838 ;;		_is_this_the_first_pwrup
  7839 ;;		_cti_instruction_loop
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function _eeprom_single_read
  7845  0C00                     _eeprom_single_read:	
  7846                           
  7847                           ;incstack = 0
  7848                           ; Regs used in _eeprom_single_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7849                           ;eeprom_single_read@addr stored from wreg
  7850  0C00  0020               	movlb	0	; select bank0
  7851  0C01  00C4               	movwf	eeprom_single_read@addr
  7852                           
  7853                           ;eeprom.c: 33: uint8_t ret;
  7854                           ;eeprom.c: 35: i2c_start();
  7855  0C02  3189  216E  318C   	fcall	_i2c_start
  7856                           
  7857                           ;eeprom.c: 36: send_eeprom_write();
  7858  0C05  3188  205E  318C   	fcall	_send_eeprom_write
  7859                           
  7860                           ;eeprom.c: 37: i2c_wait_for_ack();
  7861  0C08  3189  2122  318C   	fcall	_i2c_wait_for_ack
  7862                           
  7863                           ;eeprom.c: 38: i2c_write_data(addr);
  7864  0C0B  0020               	movlb	0	; select bank0
  7865  0C0C  0844               	movf	eeprom_single_read@addr,w
  7866  0C0D  3189  21EA  318C   	fcall	_i2c_write_data
  7867                           
  7868                           ;eeprom.c: 39: i2c_wait_for_ack();
  7869  0C10  3189  2122  318C   	fcall	_i2c_wait_for_ack
  7870                           
  7871                           ;eeprom.c: 41: i2c_start();
  7872  0C13  3189  216E  318C   	fcall	_i2c_start
  7873                           
  7874                           ;eeprom.c: 42: send_eeprom_read();
  7875  0C16  3188  2064  318C   	fcall	_send_eeprom_read
  7876                           
  7877                           ;eeprom.c: 43: i2c_wait_for_ack();
  7878  0C19  3189  2122  318C   	fcall	_i2c_wait_for_ack
  7879                           
  7880                           ;eeprom.c: 44: i2c_gen_read();
  7881  0C1C  3189  215A  318C   	fcall	_i2c_gen_read
  7882                           
  7883                           ;eeprom.c: 45: ret = i2c_get_read_data();
  7884  0C1F  3188  2076  318C   	fcall	_i2c_get_read_data
  7885  0C22  0020               	movlb	0	; select bank0
  7886  0C23  00C3               	movwf	??_eeprom_single_read
  7887  0C24  0843               	movf	??_eeprom_single_read,w
  7888  0C25  00C5               	movwf	eeprom_single_read@ret
  7889                           
  7890                           ;eeprom.c: 46: i2c_send_nack();
  7891  0C26  3189  21C0  318C   	fcall	_i2c_send_nack
  7892                           
  7893                           ;eeprom.c: 47: i2c_stop();
  7894  0C29  3189  2182         	fcall	_i2c_stop
  7895                           
  7896                           ;eeprom.c: 49: return ret;
  7897  0C2B  0020               	movlb	0	; select bank0
  7898  0C2C  0845               	movf	eeprom_single_read@ret,w
  7899  0C2D  0008               	return
  7900  0C2E                     __end_of_eeprom_single_read:	
  7901                           
  7902                           	psect	text39
  7903  0864                     __ptext39:	
  7904 ;; *************** function _send_eeprom_read *****************
  7905 ;; Defined at:
  7906 ;;		line 10 in file "lib/eeprom.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;		None
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;Total ram usage:        0 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    1
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_eeprom_single_read
  7931 ;;		_eeprom_seq_read
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           
  7936                           ;psect for function _send_eeprom_read
  7937  0864                     _send_eeprom_read:	
  7938                           
  7939                           ;eeprom.c: 11: SSPBUF = 0xA1;
  7940                           
  7941                           ;incstack = 0
  7942                           ; Regs used in _send_eeprom_read: [wreg]
  7943  0864  30A1               	movlw	161
  7944  0865  0024               	movlb	4	; select bank4
  7945  0866  0091               	movwf	17	;volatile
  7946  0867                     l325:	
  7947                           ;eeprom.c: 12: while(R_nW);
  7948                           
  7949  0867  1D14               	btfss	20,2	;volatile
  7950  0868  0008               	return
  7951  0869  2867               	goto	l325
  7952  086A                     __end_of_send_eeprom_read:	
  7953                           
  7954                           	psect	text40
  7955  09C0                     __ptext40:	
  7956 ;; *************** function _i2c_send_nack *****************
  7957 ;; Defined at:
  7958 ;;		line 71 in file "lib/i2c.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;		None
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;		None
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  1    wreg      void 
  7965 ;; Registers used:
  7966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;Total ram usage:        0 bytes
  7977 ;; Hardware stack levels used:    1
  7978 ;; Hardware stack levels required when called:    7
  7979 ;; This function calls:
  7980 ;;		_hard_lockup
  7981 ;; This function is called by:
  7982 ;;		_eeprom_single_read
  7983 ;;		_eeprom_seq_read
  7984 ;;		_am1805_update_pic_time
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           
  7989                           ;psect for function _i2c_send_nack
  7990  09C0                     _i2c_send_nack:	
  7991                           
  7992                           ;i2c.c: 72: ACKDT = 1;
  7993                           
  7994                           ;incstack = 0
  7995                           ; Regs used in _i2c_send_nack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7996  09C0  0024               	movlb	4	; select bank4
  7997  09C1  1696               	bsf	22,5	;volatile
  7998                           
  7999                           ;i2c.c: 73: ACKEN = 1;
  8000  09C2  1616               	bsf	22,4	;volatile
  8001                           
  8002                           ;i2c.c: 74: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  8003  09C3  0020               	movlb	0	; select bank0
  8004  09C4  0195               	clrf	21	;volatile
  8005  09C5  168B               	bsf	11,5	;volatile
  8006  09C6  01FA               	clrf	_tmr0_overflow
  8007  09C7                     l3764:	
  8008                           ;i2c.c: 75: while(ACKEN) {
  8009                           
  8010  09C7  0024               	movlb	4	; select bank4
  8011  09C8  1E16               	btfss	22,4	;volatile
  8012  09C9  29D3               	goto	l163
  8013                           
  8014                           ;i2c.c: 76: if (tmr0_overflow > 10) hard_lockup(2);
  8015  09CA  300B               	movlw	11
  8016  09CB  027A               	subwf	_tmr0_overflow,w
  8017  09CC  1C03               	skipc
  8018  09CD  29C7               	goto	l3764
  8019  09CE  3002               	movlw	2
  8020  09CF  318F  27A5  3189   	fcall	_hard_lockup
  8021  09D2  29C7               	goto	l3764
  8022  09D3                     l163:	
  8023                           
  8024                           ;i2c.c: 77: }
  8025                           ;i2c.c: 78: } TMR0IE = 0;
  8026  09D3  128B               	bcf	11,5	;volatile
  8027  09D4  0008               	return
  8028  09D5                     __end_of_i2c_send_nack:	
  8029                           
  8030                           	psect	text41
  8031  0852                     __ptext41:	
  8032 ;; *************** function _is_tc_high *****************
  8033 ;; Defined at:
  8034 ;;		line 120 in file "lib/io.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;		None
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      unsigned char 
  8041 ;; Registers used:
  8042 ;;		wreg, status,2
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;Total ram usage:        0 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:    1
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_main
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           
  8063                           ;psect for function _is_tc_high
  8064  0852                     _is_tc_high:	
  8065                           
  8066                           ;io.c: 121: return (PORTB & 0x10);
  8067                           
  8068                           ;incstack = 0
  8069                           ; Regs used in _is_tc_high: [wreg+status,2]
  8070  0852  0020               	movlb	0	; select bank0
  8071  0853  080D               	movf	13,w	;volatile
  8072  0854  3910               	andlw	16
  8073  0855  0008               	return
  8074  0856                     __end_of_is_tc_high:	
  8075                           
  8076                           	psect	text42
  8077  087D                     __ptext42:	
  8078 ;; *************** function _first_pwrup_calls *****************
  8079 ;; Defined at:
  8080 ;;		line 12 in file "sys/brex.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;		None
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;		None
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;Total ram usage:        0 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:   10
  8101 ;; This function calls:
  8102 ;;		_am1805_write_defaults
  8103 ;;		_am1805_write_pgm_time
  8104 ;;		_eeprom_write_defaults
  8105 ;; This function is called by:
  8106 ;;		_main
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           
  8111                           ;psect for function _first_pwrup_calls
  8112  087D                     _first_pwrup_calls:	
  8113                           
  8114                           ;brex.c: 13: am1805_write_pgm_time();
  8115                           
  8116                           ;incstack = 0
  8117                           ; Regs used in _first_pwrup_calls: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8118  087D  318D  2502  3188   	fcall	_am1805_write_pgm_time
  8119                           
  8120                           ;brex.c: 14: am1805_write_defaults();
  8121  0880  318B  232F  3188   	fcall	_am1805_write_defaults
  8122                           
  8123                           ;brex.c: 15: eeprom_write_defaults();
  8124  0883  318D  253F         	fcall	_eeprom_write_defaults
  8125  0885  0008               	return
  8126  0886                     __end_of_first_pwrup_calls:	
  8127                           
  8128                           	psect	text43
  8129  0D3F                     __ptext43:	
  8130 ;; *************** function _eeprom_write_defaults *****************
  8131 ;; Defined at:
  8132 ;;		line 93 in file "lib/eeprom.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;		None
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;  sp_defaults     8   44[BANK0 ] unsigned char [8]
  8137 ;;  sleep_defaul    4   52[BANK0 ] unsigned char [4]
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      void 
  8140 ;; Registers used:
  8141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;Total ram usage:       14 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; Hardware stack levels required when called:    9
  8154 ;; This function calls:
  8155 ;;		_eeprom_page_write
  8156 ;;		_eeprom_single_write
  8157 ;; This function is called by:
  8158 ;;		_first_pwrup_calls
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           
  8163                           ;psect for function _eeprom_write_defaults
  8164  0D3F                     _eeprom_write_defaults:	
  8165                           
  8166                           ;eeprom.c: 95: uint8_t sleep_defaults[4] = {0x00, 0xFF, 0x00};
  8167                           
  8168                           ;incstack = 0
  8169                           ; Regs used in _eeprom_write_defaults: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8170  0D3F  0021               	movlb	1	; select bank1
  8171  0D40  0866               	movf	(eeprom_write_defaults@F3293+3)^(0+128),w
  8172  0D41  0020               	movlb	0	; select bank0
  8173  0D42  00D7               	movwf	eeprom_write_defaults@sleep_defaults+3
  8174  0D43  0021               	movlb	1	; select bank1
  8175  0D44  0865               	movf	(eeprom_write_defaults@F3293+2)^(0+128),w
  8176  0D45  0020               	movlb	0	; select bank0
  8177  0D46  00D6               	movwf	eeprom_write_defaults@sleep_defaults+2
  8178  0D47  0021               	movlb	1	; select bank1
  8179  0D48  0864               	movf	(eeprom_write_defaults@F3293+1)^(0+128),w
  8180  0D49  0020               	movlb	0	; select bank0
  8181  0D4A  00D5               	movwf	eeprom_write_defaults@sleep_defaults+1
  8182  0D4B  0021               	movlb	1	; select bank1
  8183  0D4C  0863               	movf	eeprom_write_defaults@F3293^(0+128),w
  8184  0D4D  0020               	movlb	0	; select bank0
  8185  0D4E  00D4               	movwf	eeprom_write_defaults@sleep_defaults
  8186                           
  8187                           ;eeprom.c: 96: uint8_t sp_defaults[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  8188  0D4F  30BF               	movlw	low eeprom_write_defaults@F3295
  8189  0D50  0086               	movwf	6
  8190  0D51  3000               	movlw	high eeprom_write_defaults@F3295
  8191  0D52  0087               	movwf	7
  8192  0D53  304C               	movlw	low eeprom_write_defaults@sp_defaults
  8193  0D54  0084               	movwf	4
  8194  0D55  3000               	movlw	high eeprom_write_defaults@sp_defaults
  8195  0D56  0085               	movwf	5
  8196  0D57  3008               	movlw	8
  8197  0D58  00CA               	movwf	??_eeprom_write_defaults
  8198  0D59                     u2600:	
  8199  0D59  0016               	moviw fsr1++
  8200  0D5A  001A               	movwi fsr0++
  8201  0D5B  0BCA               	decfsz	??_eeprom_write_defaults,f
  8202  0D5C  2D59               	goto	u2600
  8203                           
  8204                           ;eeprom.c: 98: eeprom_page_write(0, sleep_defaults, 3);
  8205  0D5D  3054               	movlw	(low (eeprom_write_defaults@sleep_defaults| 0))& (0+255)
  8206  0D5E  00CA               	movwf	??_eeprom_write_defaults
  8207  0D5F  084A               	movf	??_eeprom_write_defaults,w
  8208  0D60  00C3               	movwf	eeprom_page_write@page_data
  8209  0D61  3003               	movlw	3
  8210  0D62  00CB               	movwf	??_eeprom_write_defaults+1
  8211  0D63  084B               	movf	??_eeprom_write_defaults+1,w
  8212  0D64  00C4               	movwf	eeprom_page_write@len
  8213  0D65  3000               	movlw	0
  8214  0D66  318C  24C8  318D   	fcall	_eeprom_page_write
  8215                           
  8216                           ;eeprom.c: 99: eeprom_single_write(0x01, 0x0F);
  8217  0D69  300F               	movlw	15
  8218  0D6A  0020               	movlb	0	; select bank0
  8219  0D6B  00CA               	movwf	??_eeprom_write_defaults
  8220  0D6C  084A               	movf	??_eeprom_write_defaults,w
  8221  0D6D  00C3               	movwf	eeprom_single_write@addr
  8222  0D6E  3001               	movlw	1
  8223  0D6F  318A  228B  318D   	fcall	_eeprom_single_write
  8224                           
  8225                           ;eeprom.c: 100: eeprom_page_write(8, sp_defaults, 7);
  8226  0D72  304C               	movlw	(low (eeprom_write_defaults@sp_defaults| 0))& (0+255)
  8227  0D73  0020               	movlb	0	; select bank0
  8228  0D74  00CA               	movwf	??_eeprom_write_defaults
  8229  0D75  084A               	movf	??_eeprom_write_defaults,w
  8230  0D76  00C3               	movwf	eeprom_page_write@page_data
  8231  0D77  3007               	movlw	7
  8232  0D78  00CB               	movwf	??_eeprom_write_defaults+1
  8233  0D79  084B               	movf	??_eeprom_write_defaults+1,w
  8234  0D7A  00C4               	movwf	eeprom_page_write@len
  8235  0D7B  3008               	movlw	8
  8236  0D7C  318C  24C8         	fcall	_eeprom_page_write
  8237  0D7E  0008               	return
  8238  0D7F                     __end_of_eeprom_write_defaults:	
  8239                           
  8240                           	psect	text44
  8241  0A8B                     __ptext44:	
  8242 ;; *************** function _eeprom_single_write *****************
  8243 ;; Defined at:
  8244 ;;		line 20 in file "lib/eeprom.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  data            1    wreg     unsigned char 
  8247 ;;  addr            1   35[BANK0 ] unsigned char 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  data            1   36[BANK0 ] unsigned char 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  1    wreg      void 
  8252 ;; Registers used:
  8253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8259 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8260 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;Total ram usage:        2 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:    8
  8266 ;; This function calls:
  8267 ;;		_i2c_start
  8268 ;;		_i2c_stop
  8269 ;;		_i2c_wait_for_ack
  8270 ;;		_i2c_write_data
  8271 ;;		_send_eeprom_write
  8272 ;; This function is called by:
  8273 ;;		_eeprom_write_defaults
  8274 ;;		_eeprom_write_nrf52_sig_byte
  8275 ;;		_reset_instruction_ptr
  8276 ;;		_sleep_start
  8277 ;;		_idsn
  8278 ;;		_cti_instruction_loop
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           
  8283                           ;psect for function _eeprom_single_write
  8284  0A8B                     _eeprom_single_write:	
  8285                           
  8286                           ;incstack = 0
  8287                           ; Regs used in _eeprom_single_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8288                           ;eeprom_single_write@data stored from wreg
  8289  0A8B  0020               	movlb	0	; select bank0
  8290  0A8C  00C4               	movwf	eeprom_single_write@data
  8291                           
  8292                           ;eeprom.c: 21: i2c_start();
  8293  0A8D  3189  216E  318A   	fcall	_i2c_start
  8294                           
  8295                           ;eeprom.c: 22: send_eeprom_write();
  8296  0A90  3188  205E  318A   	fcall	_send_eeprom_write
  8297                           
  8298                           ;eeprom.c: 23: i2c_wait_for_ack();
  8299  0A93  3189  2122  318A   	fcall	_i2c_wait_for_ack
  8300                           
  8301                           ;eeprom.c: 24: i2c_write_data(addr);
  8302  0A96  0020               	movlb	0	; select bank0
  8303  0A97  0843               	movf	eeprom_single_write@addr,w
  8304  0A98  3189  21EA  318A   	fcall	_i2c_write_data
  8305                           
  8306                           ;eeprom.c: 25: i2c_wait_for_ack();
  8307  0A9B  3189  2122  318A   	fcall	_i2c_wait_for_ack
  8308                           
  8309                           ;eeprom.c: 26: i2c_write_data(data);
  8310  0A9E  0020               	movlb	0	; select bank0
  8311  0A9F  0844               	movf	eeprom_single_write@data,w
  8312  0AA0  3189  21EA  318A   	fcall	_i2c_write_data
  8313                           
  8314                           ;eeprom.c: 27: i2c_wait_for_ack();
  8315  0AA3  3189  2122  318A   	fcall	_i2c_wait_for_ack
  8316                           
  8317                           ;eeprom.c: 28: i2c_stop();
  8318  0AA6  3189  2182         	fcall	_i2c_stop
  8319  0AA8  0008               	return
  8320  0AA9                     __end_of_eeprom_single_write:	
  8321                           
  8322                           	psect	text45
  8323  0CC8                     __ptext45:	
  8324 ;; *************** function _eeprom_page_write *****************
  8325 ;; Defined at:
  8326 ;;		line 52 in file "lib/eeprom.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  page            1    wreg     unsigned char 
  8329 ;;  page_data       1   35[BANK0 ] PTR unsigned char 
  8330 ;;		 -> eeprom_write_gps_minimum@gpspage4(7), eeprom_write_gps_minimum@gpspage3(8), eeprom_write_gps_minimum@gpspage2(8)
      +, eeprom_write_gps_minimum@gpspage1(8), 
  8331 ;;		 -> eeprom_write_defaults@sp_defaults(8), eeprom_write_defaults@sleep_defaults(4), 
  8332 ;;  len             1   36[BANK0 ] unsigned char 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  page            1   39[BANK0 ] unsigned char 
  8335 ;;  i               1   41[BANK0 ] unsigned char 
  8336 ;;  start_addr      1   40[BANK0 ] unsigned char 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      void 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8350 ;;Total ram usage:        7 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    8
  8353 ;; This function calls:
  8354 ;;		_i2c_start
  8355 ;;		_i2c_stop
  8356 ;;		_i2c_wait_for_ack
  8357 ;;		_i2c_write_data
  8358 ;;		_send_eeprom_write
  8359 ;; This function is called by:
  8360 ;;		_eeprom_write_defaults
  8361 ;;		_eeprom_write_gps_minimum
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           
  8366                           ;psect for function _eeprom_page_write
  8367  0CC8                     _eeprom_page_write:	
  8368                           
  8369                           ;incstack = 0
  8370                           ; Regs used in _eeprom_page_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8371                           ;eeprom_page_write@page stored from wreg
  8372  0CC8  0020               	movlb	0	; select bank0
  8373  0CC9  00C7               	movwf	eeprom_page_write@page
  8374                           
  8375                           ;eeprom.c: 53: uint8_t start_addr = page * 8, i;
  8376  0CCA  0847               	movf	eeprom_page_write@page,w
  8377  0CCB  00C5               	movwf	??_eeprom_page_write
  8378  0CCC  3002               	movlw	2
  8379  0CCD                     u2165:	
  8380  0CCD  35C5               	lslf	??_eeprom_page_write,f
  8381  0CCE  3EFF               	addlw	-1
  8382  0CCF  1D03               	skipz
  8383  0CD0  2CCD               	goto	u2165
  8384  0CD1  3545               	lslf	??_eeprom_page_write,w
  8385  0CD2  00C6               	movwf	??_eeprom_page_write+1
  8386  0CD3  0846               	movf	??_eeprom_page_write+1,w
  8387  0CD4  00C8               	movwf	eeprom_page_write@start_addr
  8388                           
  8389                           ;eeprom.c: 55: i2c_start();
  8390  0CD5  3189  216E  318C   	fcall	_i2c_start
  8391                           
  8392                           ;eeprom.c: 56: send_eeprom_write();
  8393  0CD8  3188  205E  318C   	fcall	_send_eeprom_write
  8394                           
  8395                           ;eeprom.c: 57: i2c_wait_for_ack();
  8396  0CDB  3189  2122  318C   	fcall	_i2c_wait_for_ack
  8397                           
  8398                           ;eeprom.c: 58: i2c_write_data(start_addr);
  8399  0CDE  0020               	movlb	0	; select bank0
  8400  0CDF  0848               	movf	eeprom_page_write@start_addr,w
  8401  0CE0  3189  21EA  318C   	fcall	_i2c_write_data
  8402                           
  8403                           ;eeprom.c: 59: i2c_wait_for_ack();
  8404  0CE3  3189  2122  318C   	fcall	_i2c_wait_for_ack
  8405                           
  8406                           ;eeprom.c: 61: for (i=0;i<len;i++) {
  8407  0CE6  0020               	movlb	0	; select bank0
  8408  0CE7  01C9               	clrf	eeprom_page_write@i
  8409  0CE8                     l3626:	
  8410  0CE8  0844               	movf	eeprom_page_write@len,w
  8411  0CE9  0249               	subwf	eeprom_page_write@i,w
  8412  0CEA  1803               	btfsc	3,0
  8413  0CEB  2CFF               	goto	l3628
  8414                           
  8415                           ;eeprom.c: 62: i2c_write_data(page_data[i]);
  8416  0CEC  0849               	movf	eeprom_page_write@i,w
  8417  0CED  0743               	addwf	eeprom_page_write@page_data,w
  8418  0CEE  00C5               	movwf	??_eeprom_page_write
  8419  0CEF  0845               	movf	??_eeprom_page_write,w
  8420  0CF0  0086               	movwf	6
  8421  0CF1  0187               	clrf	7
  8422  0CF2  0801               	movf	1,w
  8423  0CF3  3189  21EA  318C   	fcall	_i2c_write_data
  8424                           
  8425                           ;eeprom.c: 63: i2c_wait_for_ack();
  8426  0CF6  3189  2122  318C   	fcall	_i2c_wait_for_ack
  8427  0CF9  3001               	movlw	1
  8428  0CFA  0020               	movlb	0	; select bank0
  8429  0CFB  00C5               	movwf	??_eeprom_page_write
  8430  0CFC  0845               	movf	??_eeprom_page_write,w
  8431  0CFD  07C9               	addwf	eeprom_page_write@i,f
  8432  0CFE  2CE8               	goto	l3626
  8433  0CFF                     l3628:	
  8434                           
  8435                           ;eeprom.c: 64: }
  8436                           ;eeprom.c: 66: i2c_stop();
  8437  0CFF  3189  2182         	fcall	_i2c_stop
  8438  0D01  0008               	return
  8439  0D02                     __end_of_eeprom_page_write:	
  8440                           
  8441                           	psect	text46
  8442  085E                     __ptext46:	
  8443 ;; *************** function _send_eeprom_write *****************
  8444 ;; Defined at:
  8445 ;;		line 15 in file "lib/eeprom.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:    1
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_eeprom_single_write
  8470 ;;		_eeprom_single_read
  8471 ;;		_eeprom_page_write
  8472 ;;		_eeprom_seq_read
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           
  8477                           ;psect for function _send_eeprom_write
  8478  085E                     _send_eeprom_write:	
  8479                           
  8480                           ;eeprom.c: 16: SSPBUF = 0xA0;
  8481                           
  8482                           ;incstack = 0
  8483                           ; Regs used in _send_eeprom_write: [wreg]
  8484  085E  30A0               	movlw	160
  8485  085F  0024               	movlb	4	; select bank4
  8486  0860  0091               	movwf	17	;volatile
  8487  0861                     l331:	
  8488                           ;eeprom.c: 17: while(R_nW);
  8489                           
  8490  0861  1D14               	btfss	20,2	;volatile
  8491  0862  0008               	return
  8492  0863  2861               	goto	l331
  8493  0864                     __end_of_send_eeprom_write:	
  8494                           
  8495                           	psect	text47
  8496  0D02                     __ptext47:	
  8497 ;; *************** function _am1805_write_pgm_time *****************
  8498 ;; Defined at:
  8499 ;;		line 212 in file "lib/am1805.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;		None
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;		None
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  1    wreg      void 
  8506 ;; Registers used:
  8507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8517 ;;Total ram usage:        0 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    8
  8520 ;; This function calls:
  8521 ;;		_i2c_start
  8522 ;;		_i2c_stop
  8523 ;;		_i2c_wait_for_ack
  8524 ;;		_i2c_write_data
  8525 ;;		_send_am1805_write
  8526 ;; This function is called by:
  8527 ;;		_first_pwrup_calls
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           
  8532                           ;psect for function _am1805_write_pgm_time
  8533  0D02                     _am1805_write_pgm_time:	
  8534                           
  8535                           ;am1805.c: 213: i2c_start();
  8536                           
  8537                           ;incstack = 0
  8538                           ; Regs used in _am1805_write_pgm_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8539  0D02  3189  216E  318D   	fcall	_i2c_start
  8540                           
  8541                           ;am1805.c: 214: send_am1805_write();
  8542  0D05  3189  21AB  318D   	fcall	_send_am1805_write
  8543                           
  8544                           ;am1805.c: 215: i2c_wait_for_ack();
  8545  0D08  3189  2122  318D   	fcall	_i2c_wait_for_ack
  8546                           
  8547                           ;am1805.c: 216: i2c_write_data(0x01);
  8548  0D0B  3001               	movlw	1
  8549  0D0C  3189  21EA  318D   	fcall	_i2c_write_data
  8550                           
  8551                           ;am1805.c: 217: i2c_wait_for_ack();
  8552  0D0F  3189  2122  318D   	fcall	_i2c_wait_for_ack
  8553                           
  8554                           ;am1805.c: 218: i2c_write_data(0);
  8555  0D12  3000               	movlw	0
  8556  0D13  3189  21EA  318D   	fcall	_i2c_write_data
  8557                           
  8558                           ;am1805.c: 219: i2c_wait_for_ack();
  8559  0D16  3189  2122  318D   	fcall	_i2c_wait_for_ack
  8560                           
  8561                           ;am1805.c: 220: i2c_write_data(0b00010101);
  8562  0D19  3015               	movlw	21
  8563  0D1A  3189  21EA  318D   	fcall	_i2c_write_data
  8564                           
  8565                           ;am1805.c: 221: i2c_wait_for_ack();
  8566  0D1D  3189  2122  318D   	fcall	_i2c_wait_for_ack
  8567                           
  8568                           ;am1805.c: 222: i2c_write_data(0b00001001);
  8569  0D20  3009               	movlw	9
  8570  0D21  3189  21EA  318D   	fcall	_i2c_write_data
  8571                           
  8572                           ;am1805.c: 223: i2c_wait_for_ack();
  8573  0D24  3189  2122  318D   	fcall	_i2c_wait_for_ack
  8574                           
  8575                           ;am1805.c: 224: i2c_write_data(0b00000110);
  8576  0D27  3006               	movlw	6
  8577  0D28  3189  21EA  318D   	fcall	_i2c_write_data
  8578                           
  8579                           ;am1805.c: 225: i2c_wait_for_ack();
  8580  0D2B  3189  2122  318D   	fcall	_i2c_wait_for_ack
  8581                           
  8582                           ;am1805.c: 226: i2c_write_data(0b00000011);
  8583  0D2E  3003               	movlw	3
  8584  0D2F  3189  21EA  318D   	fcall	_i2c_write_data
  8585                           
  8586                           ;am1805.c: 227: i2c_wait_for_ack();
  8587  0D32  3189  2122  318D   	fcall	_i2c_wait_for_ack
  8588                           
  8589                           ;am1805.c: 228: i2c_write_data(0b00010110);
  8590  0D35  3016               	movlw	22
  8591  0D36  3189  21EA  318D   	fcall	_i2c_write_data
  8592                           
  8593                           ;am1805.c: 229: i2c_wait_for_ack();
  8594  0D39  3189  2122  318D   	fcall	_i2c_wait_for_ack
  8595                           
  8596                           ;am1805.c: 230: i2c_stop();
  8597  0D3C  3189  2182         	fcall	_i2c_stop
  8598  0D3E  0008               	return
  8599  0D3F                     __end_of_am1805_write_pgm_time:	
  8600                           
  8601                           	psect	text48
  8602  0B2F                     __ptext48:	
  8603 ;; *************** function _am1805_write_defaults *****************
  8604 ;; Defined at:
  8605 ;;		line 45 in file "lib/am1805.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;		None
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      void 
  8612 ;; Registers used:
  8613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8623 ;;Total ram usage:        1 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    9
  8626 ;; This function calls:
  8627 ;;		_am1805_write_to_addr
  8628 ;; This function is called by:
  8629 ;;		_first_pwrup_calls
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           
  8634                           ;psect for function _am1805_write_defaults
  8635  0B2F                     _am1805_write_defaults:	
  8636                           
  8637                           ;am1805.c: 46: am1805_write_to_addr(0x18, 0x11);
  8638                           
  8639                           ;incstack = 0
  8640                           ; Regs used in _am1805_write_defaults: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8641  0B2F  3011               	movlw	17
  8642  0B30  0020               	movlb	0	; select bank0
  8643  0B31  00C5               	movwf	??_am1805_write_defaults
  8644  0B32  0845               	movf	??_am1805_write_defaults,w
  8645  0B33  00C3               	movwf	am1805_write_to_addr@addr
  8646  0B34  3018               	movlw	24
  8647  0B35  318A  226D  318B   	fcall	_am1805_write_to_addr
  8648                           
  8649                           ;am1805.c: 47: am1805_write_to_addr(0x2D, 0x30);
  8650  0B38  3030               	movlw	48
  8651  0B39  0020               	movlb	0	; select bank0
  8652  0B3A  00C5               	movwf	??_am1805_write_defaults
  8653  0B3B  0845               	movf	??_am1805_write_defaults,w
  8654  0B3C  00C3               	movwf	am1805_write_to_addr@addr
  8655  0B3D  302D               	movlw	45
  8656  0B3E  318A  226D  318B   	fcall	_am1805_write_to_addr
  8657                           
  8658                           ;am1805.c: 48: am1805_write_to_addr(0x04, 0x10);
  8659  0B41  3010               	movlw	16
  8660  0B42  0020               	movlb	0	; select bank0
  8661  0B43  00C5               	movwf	??_am1805_write_defaults
  8662  0B44  0845               	movf	??_am1805_write_defaults,w
  8663  0B45  00C3               	movwf	am1805_write_to_addr@addr
  8664  0B46  3004               	movlw	4
  8665  0B47  318A  226D  318B   	fcall	_am1805_write_to_addr
  8666                           
  8667                           ;am1805.c: 49: am1805_write_to_addr(0x00, 0x1C);
  8668  0B4A  301C               	movlw	28
  8669  0B4B  0020               	movlb	0	; select bank0
  8670  0B4C  00C5               	movwf	??_am1805_write_defaults
  8671  0B4D  0845               	movf	??_am1805_write_defaults,w
  8672  0B4E  00C3               	movwf	am1805_write_to_addr@addr
  8673  0B4F  3000               	movlw	0
  8674  0B50  318A  226D         	fcall	_am1805_write_to_addr
  8675  0B52  0008               	return
  8676  0B53                     __end_of_am1805_write_defaults:	
  8677                           
  8678                           	psect	text49
  8679  0A6D                     __ptext49:	
  8680 ;; *************** function _am1805_write_to_addr *****************
  8681 ;; Defined at:
  8682 ;;		line 34 in file "lib/am1805.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  data            1    wreg     unsigned char 
  8685 ;;  addr            1   35[BANK0 ] unsigned char 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;  data            1   36[BANK0 ] unsigned char 
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1    wreg      void 
  8690 ;; Registers used:
  8691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8697 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;Total ram usage:        2 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:    8
  8704 ;; This function calls:
  8705 ;;		_i2c_start
  8706 ;;		_i2c_stop
  8707 ;;		_i2c_wait_for_ack
  8708 ;;		_i2c_write_data
  8709 ;;		_send_am1805_write
  8710 ;; This function is called by:
  8711 ;;		_am1805_write_defaults
  8712 ;;		_am1805_start_ctdn_tmr
  8713 ;;		_am1805_initiate_ctdn_sleep
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           
  8718                           ;psect for function _am1805_write_to_addr
  8719  0A6D                     _am1805_write_to_addr:	
  8720                           
  8721                           ;incstack = 0
  8722                           ; Regs used in _am1805_write_to_addr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8723                           ;am1805_write_to_addr@data stored from wreg
  8724  0A6D  0020               	movlb	0	; select bank0
  8725  0A6E  00C4               	movwf	am1805_write_to_addr@data
  8726                           
  8727                           ;am1805.c: 35: i2c_start();
  8728  0A6F  3189  216E  318A   	fcall	_i2c_start
  8729                           
  8730                           ;am1805.c: 36: send_am1805_write();
  8731  0A72  3189  21AB  318A   	fcall	_send_am1805_write
  8732                           
  8733                           ;am1805.c: 37: i2c_wait_for_ack();
  8734  0A75  3189  2122  318A   	fcall	_i2c_wait_for_ack
  8735                           
  8736                           ;am1805.c: 38: i2c_write_data(addr);
  8737  0A78  0020               	movlb	0	; select bank0
  8738  0A79  0843               	movf	am1805_write_to_addr@addr,w
  8739  0A7A  3189  21EA  318A   	fcall	_i2c_write_data
  8740                           
  8741                           ;am1805.c: 39: i2c_wait_for_ack();
  8742  0A7D  3189  2122  318A   	fcall	_i2c_wait_for_ack
  8743                           
  8744                           ;am1805.c: 40: i2c_write_data(data);
  8745  0A80  0020               	movlb	0	; select bank0
  8746  0A81  0844               	movf	am1805_write_to_addr@data,w
  8747  0A82  3189  21EA  318A   	fcall	_i2c_write_data
  8748                           
  8749                           ;am1805.c: 41: i2c_wait_for_ack();
  8750  0A85  3189  2122  318A   	fcall	_i2c_wait_for_ack
  8751                           
  8752                           ;am1805.c: 42: i2c_stop();
  8753  0A88  3189  2182         	fcall	_i2c_stop
  8754  0A8A  0008               	return
  8755  0A8B                     __end_of_am1805_write_to_addr:	
  8756                           
  8757                           	psect	text50
  8758  0901                     __ptext50:	
  8759 ;; *************** function _blink *****************
  8760 ;; Defined at:
  8761 ;;		line 124 in file "lib/io.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;		None
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;		None
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  1    wreg      void 
  8768 ;; Registers used:
  8769 ;;		wreg
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8779 ;;Total ram usage:        2 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:    1
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_main
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           
  8790                           ;psect for function _blink
  8791  0901                     _blink:	
  8792                           
  8793                           ;incstack = 0
  8794                           ; Regs used in _blink: [wreg]
  8795  0901  0020               	banksel	16	;# 
  8796  0902  3002               	movlw	2	;# 
  8797  0903  0090               	movwf	16	;# 
  8798                           
  8799                           ;io.c: 131: _delay((unsigned long)((200)*(2000000/4000.0)));
  8800  0904  3082               	movlw	130
  8801  0905  00F4               	movwf	??_blink+1
  8802  0906  30DD               	movlw	221
  8803  0907  00F3               	movwf	??_blink
  8804  0908                     u2837:	
  8805  0908  0BF3               	decfsz	??_blink,f
  8806  0909  2908               	goto	u2837
  8807  090A  0BF4               	decfsz	??_blink+1,f
  8808  090B  2908               	goto	u2837
  8809  090C  3200               	nop2
  8810  090D  0020               	banksel	16	;# 
  8811  090E  3000               	movlw	0	;# 
  8812  090F  0090               	movwf	16	;# 
  8813  0910  0008               	return
  8814  0911                     __end_of_blink:	
  8815                           
  8816                           	psect	text51
  8817  0003                     __ptext51:	
  8818 ;; *************** function _am1805_sleep_error *****************
  8819 ;; Defined at:
  8820 ;;		line 111 in file "lib/am1805.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;		None
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;		None
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      void 
  8827 ;; Registers used:
  8828 ;;		None
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;Total ram usage:        0 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    1
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_main
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           
  8849                           ;psect for function _am1805_sleep_error
  8850  0003                     _am1805_sleep_error:	
  8851                           
  8852                           ;incstack = 0
  8853                           ; Regs used in _am1805_sleep_error: []
  8854  0003  0008               	return
  8855  0004                     __end_of_am1805_sleep_error:	
  8856                           
  8857                           	psect	text52
  8858  0C2E                     __ptext52:	
  8859 ;; *************** function _am1805_are_we_asleep *****************
  8860 ;; Defined at:
  8861 ;;		line 88 in file "lib/am1805.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;		None
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;  val             1   36[BANK0 ] unsigned char 
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      unsigned char 
  8868 ;; Registers used:
  8869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;Total ram usage:        2 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:    8
  8882 ;; This function calls:
  8883 ;;		_i2c_gen_read
  8884 ;;		_i2c_get_read_data
  8885 ;;		_i2c_start
  8886 ;;		_i2c_stop
  8887 ;;		_i2c_wait_for_ack
  8888 ;;		_i2c_write_data
  8889 ;;		_send_am1805_read
  8890 ;;		_send_am1805_write
  8891 ;; This function is called by:
  8892 ;;		_main
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           
  8897                           ;psect for function _am1805_are_we_asleep
  8898  0C2E                     _am1805_are_we_asleep:	
  8899                           
  8900                           ;am1805.c: 90: uint8_t val;
  8901                           ;am1805.c: 92: i2c_start();
  8902                           
  8903                           ;incstack = 0
  8904                           ; Regs used in _am1805_are_we_asleep: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8905  0C2E  3189  216E  318C   	fcall	_i2c_start
  8906                           
  8907                           ;am1805.c: 93: send_am1805_write();
  8908  0C31  3189  21AB  318C   	fcall	_send_am1805_write
  8909                           
  8910                           ;am1805.c: 94: i2c_wait_for_ack();
  8911  0C34  3189  2122  318C   	fcall	_i2c_wait_for_ack
  8912                           
  8913                           ;am1805.c: 95: i2c_write_data(0x17);
  8914  0C37  3017               	movlw	23
  8915  0C38  3189  21EA  318C   	fcall	_i2c_write_data
  8916                           
  8917                           ;am1805.c: 96: i2c_wait_for_ack();
  8918  0C3B  3189  2122  318C   	fcall	_i2c_wait_for_ack
  8919                           
  8920                           ;am1805.c: 97: i2c_stop();
  8921  0C3E  3189  2182  318C   	fcall	_i2c_stop
  8922                           
  8923                           ;am1805.c: 99: i2c_start();
  8924  0C41  3189  216E  318C   	fcall	_i2c_start
  8925                           
  8926                           ;am1805.c: 100: send_am1805_read();
  8927  0C44  3189  2196  318C   	fcall	_send_am1805_read
  8928                           
  8929                           ;am1805.c: 101: i2c_wait_for_ack();
  8930  0C47  3189  2122  318C   	fcall	_i2c_wait_for_ack
  8931                           
  8932                           ;am1805.c: 102: i2c_gen_read();
  8933  0C4A  3189  215A  318C   	fcall	_i2c_gen_read
  8934                           
  8935                           ;am1805.c: 103: val = i2c_get_read_data();
  8936  0C4D  3188  2076  318C   	fcall	_i2c_get_read_data
  8937  0C50  0020               	movlb	0	; select bank0
  8938  0C51  00C3               	movwf	??_am1805_are_we_asleep
  8939  0C52  0843               	movf	??_am1805_are_we_asleep,w
  8940  0C53  00C4               	movwf	am1805_are_we_asleep@val
  8941                           
  8942                           ;am1805.c: 104: i2c_stop();
  8943  0C54  3189  2182  318C   	fcall	_i2c_stop
  8944                           
  8945                           ;am1805.c: 106: if (val & 0x80) return 1;
  8946  0C57  0020               	movlb	0	; select bank0
  8947  0C58  1FC4               	btfss	am1805_are_we_asleep@val,7
  8948  0C59  2C5C               	goto	l4210
  8949  0C5A  3001               	movlw	1
  8950  0C5B  0008               	return
  8951  0C5C                     l4210:	
  8952                           
  8953                           ;am1805.c: 107: return 0;
  8954  0C5C  3000               	movlw	0
  8955  0C5D  0008               	return
  8956  0C5E                     __end_of_am1805_are_we_asleep:	
  8957                           
  8958                           	psect	text53
  8959  09AB                     __ptext53:	
  8960 ;; *************** function _send_am1805_write *****************
  8961 ;; Defined at:
  8962 ;;		line 25 in file "lib/am1805.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8980 ;;Total ram usage:        0 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    7
  8983 ;; This function calls:
  8984 ;;		_hard_lockup
  8985 ;; This function is called by:
  8986 ;;		_am1805_write_to_addr
  8987 ;;		_am1805_are_we_asleep
  8988 ;;		_am1805_write_pgm_time
  8989 ;;		_am1805_print_register
  8990 ;;		_am1805_update_pic_time
  8991 ;;		_am1805_write_alarm_pgm_time
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           
  8996                           ;psect for function _send_am1805_write
  8997  09AB                     _send_am1805_write:	
  8998                           
  8999                           ;am1805.c: 26: SSPBUF = 0xD2;
  9000                           
  9001                           ;incstack = 0
  9002                           ; Regs used in _send_am1805_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9003  09AB  30D2               	movlw	210
  9004  09AC  0024               	movlb	4	; select bank4
  9005  09AD  0091               	movwf	17	;volatile
  9006                           
  9007                           ;am1805.c: 27: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  9008  09AE  0020               	movlb	0	; select bank0
  9009  09AF  0195               	clrf	21	;volatile
  9010  09B0  168B               	bsf	11,5	;volatile
  9011  09B1  01FA               	clrf	_tmr0_overflow
  9012  09B2                     l3548:	
  9013                           ;am1805.c: 28: while(R_nW) {
  9014                           
  9015  09B2  0024               	movlb	4	; select bank4
  9016  09B3  1D14               	btfss	20,2	;volatile
  9017  09B4  29BE               	goto	l242
  9018                           
  9019                           ;am1805.c: 29: if (tmr0_overflow > 10) hard_lockup(2);
  9020  09B5  300B               	movlw	11
  9021  09B6  027A               	subwf	_tmr0_overflow,w
  9022  09B7  1C03               	skipc
  9023  09B8  29B2               	goto	l3548
  9024  09B9  3002               	movlw	2
  9025  09BA  318F  27A5  3189   	fcall	_hard_lockup
  9026  09BD  29B2               	goto	l3548
  9027  09BE                     l242:	
  9028                           
  9029                           ;am1805.c: 30: }
  9030                           ;am1805.c: 31: } TMR0IE = 0;
  9031  09BE  128B               	bcf	11,5	;volatile
  9032  09BF  0008               	return
  9033  09C0                     __end_of_send_am1805_write:	
  9034                           
  9035                           	psect	text54
  9036  0996                     __ptext54:	
  9037 ;; *************** function _send_am1805_read *****************
  9038 ;; Defined at:
  9039 ;;		line 16 in file "lib/am1805.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;		None
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;		None
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  1    wreg      void 
  9046 ;; Registers used:
  9047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;Total ram usage:        0 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    7
  9060 ;; This function calls:
  9061 ;;		_hard_lockup
  9062 ;; This function is called by:
  9063 ;;		_am1805_are_we_asleep
  9064 ;;		_am1805_print_register
  9065 ;;		_am1805_update_pic_time
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           
  9070                           ;psect for function _send_am1805_read
  9071  0996                     _send_am1805_read:	
  9072                           
  9073                           ;am1805.c: 17: SSPBUF = 0xD3;
  9074                           
  9075                           ;incstack = 0
  9076                           ; Regs used in _send_am1805_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9077  0996  30D3               	movlw	211
  9078  0997  0024               	movlb	4	; select bank4
  9079  0998  0091               	movwf	17	;volatile
  9080                           
  9081                           ;am1805.c: 18: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  9082  0999  0020               	movlb	0	; select bank0
  9083  099A  0195               	clrf	21	;volatile
  9084  099B  168B               	bsf	11,5	;volatile
  9085  099C  01FA               	clrf	_tmr0_overflow
  9086  099D                     l4038:	
  9087                           ;am1805.c: 19: while(R_nW) {
  9088                           
  9089  099D  0024               	movlb	4	; select bank4
  9090  099E  1D14               	btfss	20,2	;volatile
  9091  099F  29A9               	goto	l235
  9092                           
  9093                           ;am1805.c: 20: if (tmr0_overflow > 10) hard_lockup(2);
  9094  09A0  300B               	movlw	11
  9095  09A1  027A               	subwf	_tmr0_overflow,w
  9096  09A2  1C03               	skipc
  9097  09A3  299D               	goto	l4038
  9098  09A4  3002               	movlw	2
  9099  09A5  318F  27A5  3189   	fcall	_hard_lockup
  9100  09A8  299D               	goto	l4038
  9101  09A9                     l235:	
  9102                           
  9103                           ;am1805.c: 21: }
  9104                           ;am1805.c: 22: } TMR0IE = 0;
  9105  09A9  128B               	bcf	11,5	;volatile
  9106  09AA  0008               	return
  9107  09AB                     __end_of_send_am1805_read:	
  9108                           
  9109                           	psect	text55
  9110  09EA                     __ptext55:	
  9111 ;; *************** function _i2c_write_data *****************
  9112 ;; Defined at:
  9113 ;;		line 52 in file "lib/i2c.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  data            1    wreg     unsigned char 
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;  data            1   34[BANK0 ] unsigned char 
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  1    wreg      void 
  9120 ;; Registers used:
  9121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;Total ram usage:        1 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; Hardware stack levels required when called:    7
  9134 ;; This function calls:
  9135 ;;		_hard_lockup
  9136 ;; This function is called by:
  9137 ;;		_am1805_write_to_addr
  9138 ;;		_am1805_are_we_asleep
  9139 ;;		_am1805_write_pgm_time
  9140 ;;		_eeprom_single_write
  9141 ;;		_eeprom_single_read
  9142 ;;		_eeprom_page_write
  9143 ;;		_eeprom_seq_read
  9144 ;;		_am1805_print_register
  9145 ;;		_am1805_update_pic_time
  9146 ;;		_am1805_write_alarm_pgm_time
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           
  9151                           ;psect for function _i2c_write_data
  9152  09EA                     _i2c_write_data:	
  9153                           
  9154                           ;incstack = 0
  9155                           ; Regs used in _i2c_write_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9156                           ;i2c_write_data@data stored from wreg
  9157  09EA  0020               	movlb	0	; select bank0
  9158  09EB  00C2               	movwf	i2c_write_data@data
  9159                           
  9160                           ;i2c.c: 53: SSPBUF = data;
  9161  09EC  0842               	movf	i2c_write_data@data,w
  9162  09ED  0024               	movlb	4	; select bank4
  9163  09EE  0091               	movwf	17	;volatile
  9164                           
  9165                           ;i2c.c: 54: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  9166  09EF  0020               	movlb	0	; select bank0
  9167  09F0  0195               	clrf	21	;volatile
  9168  09F1  168B               	bsf	11,5	;volatile
  9169  09F2  01FA               	clrf	_tmr0_overflow
  9170  09F3                     l3534:	
  9171                           ;i2c.c: 55: while(R_nW) {
  9172                           
  9173  09F3  0024               	movlb	4	; select bank4
  9174  09F4  1D14               	btfss	20,2	;volatile
  9175  09F5  29FF               	goto	l149
  9176                           
  9177                           ;i2c.c: 56: if (tmr0_overflow > 10) hard_lockup(2);
  9178  09F6  300B               	movlw	11
  9179  09F7  027A               	subwf	_tmr0_overflow,w
  9180  09F8  1C03               	skipc
  9181  09F9  29F3               	goto	l3534
  9182  09FA  3002               	movlw	2
  9183  09FB  318F  27A5  3189   	fcall	_hard_lockup
  9184  09FE  29F3               	goto	l3534
  9185  09FF                     l149:	
  9186                           
  9187                           ;i2c.c: 57: }
  9188                           ;i2c.c: 58: } TMR0IE = 0;
  9189  09FF  128B               	bcf	11,5	;volatile
  9190  0A00  0008               	return
  9191  0A01                     __end_of_i2c_write_data:	
  9192                           
  9193                           	psect	text56
  9194  0922                     __ptext56:	
  9195 ;; *************** function _i2c_wait_for_ack *****************
  9196 ;; Defined at:
  9197 ;;		line 29 in file "lib/i2c.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;		None
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;		None
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      void 
  9204 ;; Registers used:
  9205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;Total ram usage:        0 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    7
  9218 ;; This function calls:
  9219 ;;		_hard_lockup
  9220 ;; This function is called by:
  9221 ;;		_am1805_write_to_addr
  9222 ;;		_am1805_are_we_asleep
  9223 ;;		_am1805_write_pgm_time
  9224 ;;		_eeprom_single_write
  9225 ;;		_eeprom_single_read
  9226 ;;		_eeprom_page_write
  9227 ;;		_eeprom_seq_read
  9228 ;;		_am1805_print_register
  9229 ;;		_am1805_update_pic_time
  9230 ;;		_am1805_write_alarm_pgm_time
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           
  9235                           ;psect for function _i2c_wait_for_ack
  9236  0922                     _i2c_wait_for_ack:	
  9237                           
  9238                           ;i2c.c: 30: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  9239                           
  9240                           ;incstack = 0
  9241                           ; Regs used in _i2c_wait_for_ack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9242  0922  0020               	movlb	0	; select bank0
  9243  0923  0195               	clrf	21	;volatile
  9244  0924  168B               	bsf	11,5	;volatile
  9245  0925  01FA               	clrf	_tmr0_overflow
  9246  0926                     l3520:	
  9247                           ;i2c.c: 31: while(ACKSTAT) {
  9248                           
  9249  0926  0024               	movlb	4	; select bank4
  9250  0927  1F16               	btfss	22,6	;volatile
  9251  0928  2932               	goto	l132
  9252                           
  9253                           ;i2c.c: 32: if (tmr0_overflow > 10) hard_lockup(2);
  9254  0929  300B               	movlw	11
  9255  092A  027A               	subwf	_tmr0_overflow,w
  9256  092B  1C03               	skipc
  9257  092C  2926               	goto	l3520
  9258  092D  3002               	movlw	2
  9259  092E  318F  27A5  3189   	fcall	_hard_lockup
  9260  0931  2926               	goto	l3520
  9261  0932                     l132:	
  9262                           
  9263                           ;i2c.c: 33: }
  9264                           ;i2c.c: 34: } TMR0IE = 0;
  9265  0932  128B               	bcf	11,5	;volatile
  9266  0933  0008               	return
  9267  0934                     __end_of_i2c_wait_for_ack:	
  9268                           
  9269                           	psect	text57
  9270  0982                     __ptext57:	
  9271 ;; *************** function _i2c_stop *****************
  9272 ;; Defined at:
  9273 ;;		line 20 in file "lib/i2c.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;		None
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;		None
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;Total ram usage:        0 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    7
  9294 ;; This function calls:
  9295 ;;		_hard_lockup
  9296 ;; This function is called by:
  9297 ;;		_am1805_write_to_addr
  9298 ;;		_am1805_are_we_asleep
  9299 ;;		_am1805_write_pgm_time
  9300 ;;		_eeprom_single_write
  9301 ;;		_eeprom_single_read
  9302 ;;		_eeprom_page_write
  9303 ;;		_eeprom_seq_read
  9304 ;;		_am1805_print_register
  9305 ;;		_am1805_update_pic_time
  9306 ;;		_am1805_write_alarm_pgm_time
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function _i2c_stop
  9312  0982                     _i2c_stop:	
  9313                           
  9314                           ;i2c.c: 21: PEN = 1;
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in _i2c_stop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9318  0982  0024               	movlb	4	; select bank4
  9319  0983  1516               	bsf	22,2	;volatile
  9320                           
  9321                           ;i2c.c: 22: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  9322  0984  0020               	movlb	0	; select bank0
  9323  0985  0195               	clrf	21	;volatile
  9324  0986  168B               	bsf	11,5	;volatile
  9325  0987  01FA               	clrf	_tmr0_overflow
  9326  0988                     l3510:	
  9327                           ;i2c.c: 23: while(PEN) {
  9328                           
  9329  0988  0024               	movlb	4	; select bank4
  9330  0989  1D16               	btfss	22,2	;volatile
  9331  098A  2994               	goto	l125
  9332                           
  9333                           ;i2c.c: 24: if (tmr0_overflow > 10) hard_lockup(2);
  9334  098B  300B               	movlw	11
  9335  098C  027A               	subwf	_tmr0_overflow,w
  9336  098D  1C03               	skipc
  9337  098E  2988               	goto	l3510
  9338  098F  3002               	movlw	2
  9339  0990  318F  27A5  3189   	fcall	_hard_lockup
  9340  0993  2988               	goto	l3510
  9341  0994                     l125:	
  9342                           
  9343                           ;i2c.c: 25: }
  9344                           ;i2c.c: 26: } TMR0IE = 0;
  9345  0994  128B               	bcf	11,5	;volatile
  9346  0995  0008               	return
  9347  0996                     __end_of_i2c_stop:	
  9348                           
  9349                           	psect	text58
  9350  096E                     __ptext58:	
  9351 ;; *************** function _i2c_start *****************
  9352 ;; Defined at:
  9353 ;;		line 11 in file "lib/i2c.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;		None
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;		None
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1    wreg      void 
  9360 ;; Registers used:
  9361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;Total ram usage:        0 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:    7
  9374 ;; This function calls:
  9375 ;;		_hard_lockup
  9376 ;; This function is called by:
  9377 ;;		_am1805_write_to_addr
  9378 ;;		_am1805_are_we_asleep
  9379 ;;		_am1805_write_pgm_time
  9380 ;;		_eeprom_single_write
  9381 ;;		_eeprom_single_read
  9382 ;;		_eeprom_page_write
  9383 ;;		_eeprom_seq_read
  9384 ;;		_am1805_print_register
  9385 ;;		_am1805_update_pic_time
  9386 ;;		_am1805_write_alarm_pgm_time
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           
  9391                           ;psect for function _i2c_start
  9392  096E                     _i2c_start:	
  9393                           
  9394                           ;i2c.c: 12: SEN = 1;
  9395                           
  9396                           ;incstack = 0
  9397                           ; Regs used in _i2c_start: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9398  096E  0024               	movlb	4	; select bank4
  9399  096F  1416               	bsf	22,0	;volatile
  9400                           
  9401                           ;i2c.c: 13: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  9402  0970  0020               	movlb	0	; select bank0
  9403  0971  0195               	clrf	21	;volatile
  9404  0972  168B               	bsf	11,5	;volatile
  9405  0973  01FA               	clrf	_tmr0_overflow
  9406  0974                     l3498:	
  9407                           ;i2c.c: 14: while(SEN) {
  9408                           
  9409  0974  0024               	movlb	4	; select bank4
  9410  0975  1C16               	btfss	22,0	;volatile
  9411  0976  2980               	goto	l118
  9412                           
  9413                           ;i2c.c: 15: if (tmr0_overflow > 10) hard_lockup(2);
  9414  0977  300B               	movlw	11
  9415  0978  027A               	subwf	_tmr0_overflow,w
  9416  0979  1C03               	skipc
  9417  097A  2974               	goto	l3498
  9418  097B  3002               	movlw	2
  9419  097C  318F  27A5  3189   	fcall	_hard_lockup
  9420  097F  2974               	goto	l3498
  9421  0980                     l118:	
  9422                           
  9423                           ;i2c.c: 16: }
  9424                           ;i2c.c: 17: } TMR0IE = 0;
  9425  0980  128B               	bcf	11,5	;volatile
  9426  0981  0008               	return
  9427  0982                     __end_of_i2c_start:	
  9428                           
  9429                           	psect	text59
  9430  0876                     __ptext59:	
  9431 ;; *************** function _i2c_get_read_data *****************
  9432 ;; Defined at:
  9433 ;;		line 46 in file "lib/i2c.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;		None
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  latest_byte     1    4[COMMON] unsigned char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      unsigned char 
  9440 ;; Registers used:
  9441 ;;		wreg
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9451 ;;Total ram usage:        2 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    1
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_am1805_are_we_asleep
  9458 ;;		_eeprom_single_read
  9459 ;;		_eeprom_seq_read
  9460 ;;		_am1805_print_register
  9461 ;;		_am1805_update_pic_time
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           
  9466                           ;psect for function _i2c_get_read_data
  9467  0876                     _i2c_get_read_data:	
  9468                           
  9469                           ;i2c.c: 47: uint8_t latest_byte;
  9470                           ;i2c.c: 48: latest_byte = SSPBUF;
  9471                           
  9472                           ;incstack = 0
  9473                           ; Regs used in _i2c_get_read_data: [wreg]
  9474  0876  0024               	movlb	4	; select bank4
  9475  0877  0811               	movf	17,w	;volatile
  9476  0878  00F3               	movwf	??_i2c_get_read_data
  9477  0879  0873               	movf	??_i2c_get_read_data,w
  9478  087A  00F4               	movwf	i2c_get_read_data@latest_byte
  9479                           
  9480                           ;i2c.c: 49: return latest_byte;
  9481  087B  0874               	movf	i2c_get_read_data@latest_byte,w
  9482  087C  0008               	return
  9483  087D                     __end_of_i2c_get_read_data:	
  9484                           
  9485                           	psect	text60
  9486  095A                     __ptext60:	
  9487 ;; *************** function _i2c_gen_read *****************
  9488 ;; Defined at:
  9489 ;;		line 37 in file "lib/i2c.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;		None
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;		None
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;Total ram usage:        0 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    7
  9510 ;; This function calls:
  9511 ;;		_hard_lockup
  9512 ;; This function is called by:
  9513 ;;		_am1805_are_we_asleep
  9514 ;;		_eeprom_single_read
  9515 ;;		_eeprom_seq_read
  9516 ;;		_am1805_print_register
  9517 ;;		_am1805_update_pic_time
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           
  9522                           ;psect for function _i2c_gen_read
  9523  095A                     _i2c_gen_read:	
  9524                           
  9525                           ;i2c.c: 38: RCEN = 1;
  9526                           
  9527                           ;incstack = 0
  9528                           ; Regs used in _i2c_gen_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9529  095A  0024               	movlb	4	; select bank4
  9530  095B  1596               	bsf	22,3	;volatile
  9531                           
  9532                           ;i2c.c: 39: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
  9533  095C  0020               	movlb	0	; select bank0
  9534  095D  0195               	clrf	21	;volatile
  9535  095E  168B               	bsf	11,5	;volatile
  9536  095F  01FA               	clrf	_tmr0_overflow
  9537  0960                     l3748:	
  9538                           ;i2c.c: 40: while(RCEN) {
  9539                           
  9540  0960  0024               	movlb	4	; select bank4
  9541  0961  1D96               	btfss	22,3	;volatile
  9542  0962  296C               	goto	l139
  9543                           
  9544                           ;i2c.c: 41: if (tmr0_overflow > 10) hard_lockup(2);
  9545  0963  300B               	movlw	11
  9546  0964  027A               	subwf	_tmr0_overflow,w
  9547  0965  1C03               	skipc
  9548  0966  2960               	goto	l3748
  9549  0967  3002               	movlw	2
  9550  0968  318F  27A5  3189   	fcall	_hard_lockup
  9551  096B  2960               	goto	l3748
  9552  096C                     l139:	
  9553                           
  9554                           ;i2c.c: 42: }
  9555                           ;i2c.c: 43: } TMR0IE = 0;
  9556  096C  128B               	bcf	11,5	;volatile
  9557  096D  0008               	return
  9558  096E                     __end_of_i2c_gen_read:	
  9559                           
  9560                           	psect	text61
  9561  0FA5                     __ptext61:	
  9562 ;; *************** function _hard_lockup *****************
  9563 ;; Defined at:
  9564 ;;		line 36 in file "lib/error.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  err_num         1    wreg     unsigned char 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;  err_num         1   33[BANK0 ] unsigned char 
  9569 ;;  i               1   32[BANK0 ] unsigned char 
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9580 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9582 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9583 ;;Total ram usage:        5 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:    6
  9586 ;; This function calls:
  9587 ;;		_error_blaster
  9588 ;;		_set_led_duty
  9589 ;; This function is called by:
  9590 ;;		_main
  9591 ;;		_i2c_start
  9592 ;;		_i2c_stop
  9593 ;;		_i2c_wait_for_ack
  9594 ;;		_i2c_gen_read
  9595 ;;		_i2c_write_data
  9596 ;;		_i2c_send_ack
  9597 ;;		_i2c_send_nack
  9598 ;;		_send_am1805_read
  9599 ;;		_send_am1805_write
  9600 ;;		_get_pvt_str
  9601 ;;		_have_3d_fix
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           
  9606                           ;psect for function _hard_lockup
  9607  0FA5                     _hard_lockup:	
  9608                           
  9609                           ;incstack = 0
  9610                           ; Regs used in _hard_lockup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9611                           ;hard_lockup@err_num stored from wreg
  9612  0FA5  0020               	movlb	0	; select bank0
  9613  0FA6  00C1               	movwf	hard_lockup@err_num
  9614                           
  9615                           ;error.c: 38: uint8_t i;
  9616                           ;error.c: 40: set_led_duty(0, 20);
  9617  0FA7  3014               	movlw	20
  9618  0FA8  00F3               	movwf	set_led_duty@duty
  9619  0FA9  3000               	movlw	0
  9620  0FAA  00F4               	movwf	set_led_duty@duty+1
  9621  0FAB  3000               	movlw	0
  9622  0FAC  318E  26F8  318F   	fcall	_set_led_duty
  9623                           
  9624                           ;error.c: 42: _delay((unsigned long)((1000)*(2000000/4000.0)));
  9625  0FAF  3003               	movlw	3
  9626  0FB0  0020               	movlb	0	; select bank0
  9627  0FB1  00BF               	movwf	??_hard_lockup+2
  9628  0FB2  308A               	movlw	138
  9629  0FB3  00BE               	movwf	??_hard_lockup+1
  9630  0FB4  3056               	movlw	86
  9631  0FB5  00BD               	movwf	??_hard_lockup
  9632  0FB6                     u2847:	
  9633  0FB6  0BBD               	decfsz	??_hard_lockup,f
  9634  0FB7  2FB6               	goto	u2847
  9635  0FB8  0BBE               	decfsz	??_hard_lockup+1,f
  9636  0FB9  2FB6               	goto	u2847
  9637  0FBA  0BBF               	decfsz	??_hard_lockup+2,f
  9638  0FBB  2FB6               	goto	u2847
  9639  0FBC  3200               	nop2
  9640  0FBD                     l3460:	
  9641                           ;error.c: 44: while(1) {
  9642                           
  9643                           
  9644                           ;error.c: 46: for (i=0;i<err_num;i++) {
  9645  0FBD  0020               	movlb	0	; select bank0
  9646  0FBE  01C0               	clrf	hard_lockup@i
  9647  0FBF                     l3470:	
  9648  0FBF  0841               	movf	hard_lockup@err_num,w
  9649  0FC0  0240               	subwf	hard_lockup@i,w
  9650  0FC1  1803               	btfsc	3,0
  9651  0FC2  2FED               	goto	l3472
  9652                           
  9653                           ;error.c: 47: set_led_duty(0, 80);
  9654  0FC3  3050               	movlw	80
  9655  0FC4  00F3               	movwf	set_led_duty@duty
  9656  0FC5  3000               	movlw	0
  9657  0FC6  00F4               	movwf	set_led_duty@duty+1
  9658  0FC7  3000               	movlw	0
  9659  0FC8  318E  26F8  318F   	fcall	_set_led_duty
  9660                           
  9661                           ;error.c: 48: _delay((unsigned long)((80)*(2000000/4000.0)));
  9662  0FCB  3034               	movlw	52
  9663  0FCC  0020               	movlb	0	; select bank0
  9664  0FCD  00BE               	movwf	??_hard_lockup+1
  9665  0FCE  30F1               	movlw	241
  9666  0FCF  00BD               	movwf	??_hard_lockup
  9667  0FD0                     u2857:	
  9668  0FD0  0BBD               	decfsz	??_hard_lockup,f
  9669  0FD1  2FD0               	goto	u2857
  9670  0FD2  0BBE               	decfsz	??_hard_lockup+1,f
  9671  0FD3  2FD0               	goto	u2857
  9672  0FD4  3200               	nop2
  9673                           
  9674                           ;error.c: 49: set_led_duty(0, 20);
  9675  0FD5  3014               	movlw	20
  9676  0FD6  00F3               	movwf	set_led_duty@duty
  9677  0FD7  3000               	movlw	0
  9678  0FD8  00F4               	movwf	set_led_duty@duty+1
  9679  0FD9  3000               	movlw	0
  9680  0FDA  318E  26F8  318F   	fcall	_set_led_duty
  9681                           
  9682                           ;error.c: 50: _delay((unsigned long)((220)*(2000000/4000.0)));
  9683  0FDD  308F               	movlw	143
  9684  0FDE  0020               	movlb	0	; select bank0
  9685  0FDF  00BE               	movwf	??_hard_lockup+1
  9686  0FE0  30DA               	movlw	218
  9687  0FE1  00BD               	movwf	??_hard_lockup
  9688  0FE2                     u2867:	
  9689  0FE2  0BBD               	decfsz	??_hard_lockup,f
  9690  0FE3  2FE2               	goto	u2867
  9691  0FE4  0BBE               	decfsz	??_hard_lockup+1,f
  9692  0FE5  2FE2               	goto	u2867
  9693  0FE6  0000               	nop
  9694  0FE7  3001               	movlw	1
  9695  0FE8  0020               	movlb	0	; select bank0
  9696  0FE9  00BD               	movwf	??_hard_lockup
  9697  0FEA  083D               	movf	??_hard_lockup,w
  9698  0FEB  07C0               	addwf	hard_lockup@i,f
  9699  0FEC  2FBF               	goto	l3470
  9700  0FED                     l3472:	
  9701                           
  9702                           ;error.c: 51: }
  9703                           ;error.c: 52: error_blaster(err_num);
  9704  0FED  0841               	movf	hard_lockup@err_num,w
  9705  0FEE  318E  26A5  318F   	fcall	_error_blaster
  9706                           
  9707                           ;error.c: 53: _delay((unsigned long)((4000)*(2000000/4000.0)));
  9708  0FF1  300B               	movlw	11
  9709  0FF2  0020               	movlb	0	; select bank0
  9710  0FF3  00BF               	movwf	??_hard_lockup+2
  9711  0FF4  3026               	movlw	38
  9712  0FF5  00BE               	movwf	??_hard_lockup+1
  9713  0FF6  3066               	movlw	102
  9714  0FF7  00BD               	movwf	??_hard_lockup
  9715  0FF8                     u2877:	
  9716  0FF8  0BBD               	decfsz	??_hard_lockup,f
  9717  0FF9  2FF8               	goto	u2877
  9718  0FFA  0BBE               	decfsz	??_hard_lockup+1,f
  9719  0FFB  2FF8               	goto	u2877
  9720  0FFC  0BBF               	decfsz	??_hard_lockup+2,f
  9721  0FFD  2FF8               	goto	u2877
  9722  0FFE  3200               	nop2
  9723  0FFF  2FBD               	goto	l3460
  9724  1000                     __end_of_hard_lockup:	
  9725                           
  9726                           	psect	text62
  9727  0EA5                     __ptext62:	
  9728 ;; *************** function _error_blaster *****************
  9729 ;; Defined at:
  9730 ;;		line 10 in file "lib/error.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  err_num         1    wreg     unsigned char 
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;  err_num         1   28[BANK0 ] unsigned char 
  9735 ;;  str            20    8[BANK0 ] unsigned char [20]
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  1    wreg      void 
  9738 ;; Registers used:
  9739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;Total ram usage:       21 bytes
  9750 ;; Hardware stack levels used:    1
  9751 ;; Hardware stack levels required when called:    5
  9752 ;; This function calls:
  9753 ;;		_strcpy
  9754 ;;		_uart_write_string
  9755 ;; This function is called by:
  9756 ;;		_hard_lockup
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           
  9761                           ;psect for function _error_blaster
  9762  0EA5                     _error_blaster:	
  9763                           
  9764                           ;incstack = 0
  9765                           ; Regs used in _error_blaster: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9766                           ;error_blaster@err_num stored from wreg
  9767  0EA5  0020               	movlb	0	; select bank0
  9768  0EA6  00BC               	movwf	error_blaster@err_num
  9769                           
  9770                           ;error.c: 11: char str[20];
  9771                           ;error.c: 12: switch (err_num) {
  9772  0EA7  2EE8               	goto	l3446
  9773  0EA8                     l3428:	
  9774                           ;error.c: 13: case 1:
  9775                           
  9776                           
  9777                           ;error.c: 14: strcpy(str, "1 - Hard Lock\r\n");
  9778  0EA8  30AE               	movlw	low (STR_7| (0+32768))
  9779  0EA9  00F3               	movwf	strcpy@from
  9780  0EAA  3082               	movlw	high (STR_7| (0+32768))
  9781  0EAB  00F4               	movwf	strcpy@from+1
  9782  0EAC  3028               	movlw	(low (error_blaster@str| 0))& (0+255)
  9783  0EAD  318A  221A  318E   	fcall	_strcpy
  9784                           
  9785                           ;error.c: 15: uart_write_string(str);
  9786  0EB0  3028               	movlw	low error_blaster@str
  9787  0EB1  0020               	movlb	0	; select bank0
  9788  0EB2  00A3               	movwf	uart_write_string@str
  9789  0EB3  3000               	movlw	high error_blaster@str
  9790  0EB4  00A4               	movwf	uart_write_string@str+1
  9791  0EB5  318A  2234         	fcall	_uart_write_string
  9792                           
  9793                           ;error.c: 16: break;
  9794  0EB7  0008               	return
  9795  0EB8                     l3432:	
  9796                           ;error.c: 17: case 2:
  9797                           
  9798                           
  9799                           ;error.c: 18: strcpy(str, "2 - I2C Lock\r\n");
  9800  0EB8  30BE               	movlw	low (STR_8| (0+32768))
  9801  0EB9  00F3               	movwf	strcpy@from
  9802  0EBA  3082               	movlw	high (STR_8| (0+32768))
  9803  0EBB  00F4               	movwf	strcpy@from+1
  9804  0EBC  3028               	movlw	(low (error_blaster@str| 0))& (0+255)
  9805  0EBD  318A  221A  318E   	fcall	_strcpy
  9806                           
  9807                           ;error.c: 19: uart_write_string(str);
  9808  0EC0  3028               	movlw	low error_blaster@str
  9809  0EC1  0020               	movlb	0	; select bank0
  9810  0EC2  00A3               	movwf	uart_write_string@str
  9811  0EC3  3000               	movlw	high error_blaster@str
  9812  0EC4  00A4               	movwf	uart_write_string@str+1
  9813  0EC5  318A  2234         	fcall	_uart_write_string
  9814                           
  9815                           ;error.c: 20: break;
  9816  0EC7  0008               	return
  9817  0EC8                     l3436:	
  9818                           ;error.c: 21: case 4:
  9819                           
  9820                           
  9821                           ;error.c: 22: strcpy(str, "4 - Unimp Lock\r\n");
  9822  0EC8  309D               	movlw	low (STR_9| (0+32768))
  9823  0EC9  00F3               	movwf	strcpy@from
  9824  0ECA  3082               	movlw	high (STR_9| (0+32768))
  9825  0ECB  00F4               	movwf	strcpy@from+1
  9826  0ECC  3028               	movlw	(low (error_blaster@str| 0))& (0+255)
  9827  0ECD  318A  221A  318E   	fcall	_strcpy
  9828                           
  9829                           ;error.c: 23: uart_write_string(str);
  9830  0ED0  3028               	movlw	low error_blaster@str
  9831  0ED1  0020               	movlb	0	; select bank0
  9832  0ED2  00A3               	movwf	uart_write_string@str
  9833  0ED3  3000               	movlw	high error_blaster@str
  9834  0ED4  00A4               	movwf	uart_write_string@str+1
  9835  0ED5  318A  2234         	fcall	_uart_write_string
  9836                           
  9837                           ;error.c: 24: break;
  9838  0ED7  0008               	return
  9839  0ED8                     l3440:	
  9840                           ;error.c: 25: case 5:
  9841                           
  9842                           
  9843                           ;error.c: 26: strcpy(str, "5 - GPS Comm Lock\r\n");
  9844  0ED8  3051               	movlw	low (STR_10| (0+32768))
  9845  0ED9  00F3               	movwf	strcpy@from
  9846  0EDA  3082               	movlw	high (STR_10| (0+32768))
  9847  0EDB  00F4               	movwf	strcpy@from+1
  9848  0EDC  3028               	movlw	(low (error_blaster@str| 0))& (0+255)
  9849  0EDD  318A  221A  318E   	fcall	_strcpy
  9850                           
  9851                           ;error.c: 27: uart_write_string(str);
  9852  0EE0  3028               	movlw	low error_blaster@str
  9853  0EE1  0020               	movlb	0	; select bank0
  9854  0EE2  00A3               	movwf	uart_write_string@str
  9855  0EE3  3000               	movlw	high error_blaster@str
  9856  0EE4  00A4               	movwf	uart_write_string@str+1
  9857  0EE5  318A  2234         	fcall	_uart_write_string
  9858                           
  9859                           ;error.c: 29: }
  9860                           
  9861                           ;error.c: 28: break;
  9862  0EE7  0008               	return
  9863  0EE8                     l3446:	
  9864  0EE8  0020               	movlb	0	; select bank0
  9865  0EE9  083C               	movf	error_blaster@err_num,w
  9866                           
  9867                           ; Switch size 1, requested type "space"
  9868                           ; Number of cases is 4, Range of values is 1 to 5
  9869                           ; switch strategies available:
  9870                           ; Name         Instructions Cycles
  9871                           ; simple_byte           13     7 (average)
  9872                           ; direct_byte           19     9 (fixed)
  9873                           ; jumptable            263     9 (fixed)
  9874                           ;	Chosen strategy is simple_byte
  9875  0EEA  3A01               	xorlw	1	; case 1
  9876  0EEB  1903               	skipnz
  9877  0EEC  2EA8               	goto	l3428
  9878  0EED  3A03               	xorlw	3	; case 2
  9879  0EEE  1903               	skipnz
  9880  0EEF  2EB8               	goto	l3432
  9881  0EF0  3A06               	xorlw	6	; case 4
  9882  0EF1  1903               	skipnz
  9883  0EF2  2EC8               	goto	l3436
  9884  0EF3  3A01               	xorlw	1	; case 5
  9885  0EF4  1903               	skipnz
  9886  0EF5  2ED8               	goto	l3440
  9887  0EF6  2EF7               	goto	l384
  9888  0EF7                     l384:	
  9889  0EF7  0008               	return
  9890  0EF8                     __end_of_error_blaster:	
  9891                           
  9892                           	psect	text63
  9893  0A34                     __ptext63:	
  9894 ;; *************** function _uart_write_string *****************
  9895 ;; Defined at:
  9896 ;;		line 23 in file "lib/eusart.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;  str             2    3[BANK0 ] PTR const unsigned char 
  9899 ;;		 -> STR_25(30), STR_24(34), STR_23(28), STR_22(30), 
  9900 ;;		 -> STR_21(17), STR_20(24), idsn@debug(20), STR_18(39), 
  9901 ;;		 -> STR_17(48), STR_16(19), STR_15(25), STR_14(31), 
  9902 ;;		 -> STR_13(37), STR_12(25), STR_11(33), error_blaster@str(20), 
  9903 ;;		 -> am1805_print_pic_time@pictime(30), STR_5(21), STR_4(21), STR_3(15), 
  9904 ;;		 -> STR_2(14), STR_1(27), 
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;  i               2    6[BANK0 ] int 
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  1    wreg      void 
  9909 ;; Registers used:
  9910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;Total ram usage:        5 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:    4
  9923 ;; This function calls:
  9924 ;;		_uart_write
  9925 ;; This function is called by:
  9926 ;;		_main
  9927 ;;		_error_blaster
  9928 ;;		_let_nrf_update_eeprom
  9929 ;;		_reset_instruction_ptr
  9930 ;;		_i3gnav
  9931 ;;		_idsn
  9932 ;;		_cti_instruction_loop
  9933 ;;		_am1805_print_pic_time
  9934 ;; This function uses a non-reentrant model
  9935 ;;
  9936                           
  9937                           
  9938                           ;psect for function _uart_write_string
  9939  0A34                     _uart_write_string:	
  9940                           
  9941                           ;eusart.c: 24: int i;
  9942                           ;eusart.c: 25: for(i=0;str[i]!='\0';i++) {
  9943                           
  9944                           ;incstack = 0
  9945                           ; Regs used in _uart_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9946  0A34  0020               	movlb	0	; select bank0
  9947  0A35  01A6               	clrf	uart_write_string@i
  9948  0A36  01A7               	clrf	uart_write_string@i+1
  9949  0A37                     l3416:	
  9950  0A37  0823               	movf	uart_write_string@str,w
  9951  0A38  0726               	addwf	uart_write_string@i,w
  9952  0A39  0084               	movwf	4
  9953  0A3A  0824               	movf	uart_write_string@str+1,w
  9954  0A3B  3D27               	addwfc	uart_write_string@i+1,w
  9955  0A3C  0085               	movwf	5
  9956  0A3D  0012               	moviw fsr0++
  9957  0A3E  1903               	btfsc	3,2
  9958  0A3F  0008               	return
  9959                           
  9960                           ;eusart.c: 26: uart_write(str[i]);
  9961  0A40  0823               	movf	uart_write_string@str,w
  9962  0A41  0726               	addwf	uart_write_string@i,w
  9963  0A42  0084               	movwf	4
  9964  0A43  0824               	movf	uart_write_string@str+1,w
  9965  0A44  3D27               	addwfc	uart_write_string@i+1,w
  9966  0A45  0085               	movwf	5
  9967  0A46  0800               	movf	0,w	;code access
  9968  0A47  3189  2134  318A   	fcall	_uart_write
  9969  0A4A  3001               	movlw	1
  9970  0A4B  0020               	movlb	0	; select bank0
  9971  0A4C  07A6               	addwf	uart_write_string@i,f
  9972  0A4D  3000               	movlw	0
  9973  0A4E  3DA7               	addwfc	uart_write_string@i+1,f
  9974  0A4F  2A37               	goto	l3416
  9975  0A50                     __end_of_uart_write_string:	
  9976                           
  9977                           	psect	text64
  9978  0934                     __ptext64:	
  9979 ;; *************** function _uart_write *****************
  9980 ;; Defined at:
  9981 ;;		line 14 in file "lib/eusart.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  data            1    wreg     unsigned char 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;  data            1    9[COMMON] unsigned char 
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  1    wreg      void 
  9988 ;; Registers used:
  9989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;Total ram usage:        1 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:    3
 10002 ;; This function calls:
 10003 ;;		_hard_lockup_uart
 10004 ;; This function is called by:
 10005 ;;		_uart_write_string
 10006 ;;		_ubx_send_str
 10007 ;;		_am1805_print_register
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           
 10012                           ;psect for function _uart_write
 10013  0934                     _uart_write:	
 10014                           
 10015                           ;incstack = 0
 10016                           ; Regs used in _uart_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10017                           ;uart_write@data stored from wreg
 10018  0934  00F9               	movwf	uart_write@data
 10019                           
 10020                           ;eusart.c: 15: TMR0 = 0; TMR0IE = 1; tmr0_overflow = 0; {
 10021  0935  0020               	movlb	0	; select bank0
 10022  0936  0195               	clrf	21	;volatile
 10023  0937  168B               	bsf	11,5	;volatile
 10024  0938  01FA               	clrf	_tmr0_overflow
 10025  0939                     l179:	
 10026                           ;eusart.c: 16: while(!TRMT); {
 10027                           
 10028  0939  0023               	movlb	3	; select bank3
 10029  093A  1C9E               	btfss	30,1	;volatile
 10030  093B  2939               	goto	l179
 10031                           
 10032                           ;eusart.c: 17: if (tmr0_overflow > 10) hard_lockup_uart();
 10033  093C  300B               	movlw	11
 10034  093D  027A               	subwf	_tmr0_overflow,w
 10035  093E  1C03               	skipc
 10036  093F  2942               	goto	l3406
 10037  0940  318F  274E         	fcall	_hard_lockup_uart
 10038  0942                     l3406:	
 10039                           
 10040                           ;eusart.c: 18: }
 10041                           ;eusart.c: 19: } TMR0IE = 0;
 10042  0942  128B               	bcf	11,5	;volatile
 10043                           
 10044                           ;eusart.c: 20: TXREG = data;
 10045  0943  0879               	movf	uart_write@data,w
 10046  0944  0023               	movlb	3	; select bank3
 10047  0945  009A               	movwf	26	;volatile
 10048  0946  0008               	return
 10049  0947                     __end_of_uart_write:	
 10050                           
 10051                           	psect	text65
 10052  0F4E                     __ptext65:	
 10053 ;; *************** function _hard_lockup_uart *****************
 10054 ;; Defined at:
 10055 ;;		line 57 in file "lib/error.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;  i               1    8[COMMON] unsigned char 
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;Total ram usage:        4 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; Hardware stack levels required when called:    2
 10076 ;; This function calls:
 10077 ;;		_set_led_duty
 10078 ;; This function is called by:
 10079 ;;		_uart_write
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           
 10084                           ;psect for function _hard_lockup_uart
 10085  0F4E                     _hard_lockup_uart:	
 10086                           
 10087                           ;error.c: 58: uint8_t i;
 10088                           ;error.c: 60: set_led_duty(0, 20);
 10089                           
 10090                           ;incstack = 0
 10091                           ; Regs used in _hard_lockup_uart: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10092  0F4E  3014               	movlw	20
 10093  0F4F  00F3               	movwf	set_led_duty@duty
 10094  0F50  3000               	movlw	0
 10095  0F51  00F4               	movwf	set_led_duty@duty+1
 10096  0F52  3000               	movlw	0
 10097  0F53  318E  26F8  318F   	fcall	_set_led_duty
 10098                           
 10099                           ;error.c: 62: _delay((unsigned long)((1000)*(2000000/4000.0)));
 10100  0F56  3003               	movlw	3
 10101  0F57  0020               	movlb	0	; select bank0
 10102  0F58  00A2               	movwf	??_hard_lockup_uart+2
 10103  0F59  308A               	movlw	138
 10104  0F5A  00A1               	movwf	??_hard_lockup_uart+1
 10105  0F5B  3056               	movlw	86
 10106  0F5C  00A0               	movwf	??_hard_lockup_uart
 10107  0F5D                     u2887:	
 10108  0F5D  0BA0               	decfsz	??_hard_lockup_uart,f
 10109  0F5E  2F5D               	goto	u2887
 10110  0F5F  0BA1               	decfsz	??_hard_lockup_uart+1,f
 10111  0F60  2F5D               	goto	u2887
 10112  0F61  0BA2               	decfsz	??_hard_lockup_uart+2,f
 10113  0F62  2F5D               	goto	u2887
 10114  0F63  3200               	nop2
 10115  0F64                     l3380:	
 10116                           ;error.c: 64: while(1) {
 10117                           
 10118                           
 10119                           ;error.c: 66: for (i=0;i<3;i++) {
 10120  0F64  01F8               	clrf	hard_lockup_uart@i
 10121  0F65  3003               	movlw	3
 10122  0F66  0278               	subwf	hard_lockup_uart@i,w
 10123  0F67  1803               	btfsc	3,0
 10124  0F68  2F96               	goto	l3396
 10125  0F69                     l3386:	
 10126                           
 10127                           ;error.c: 67: set_led_duty(0, 80);
 10128  0F69  3050               	movlw	80
 10129  0F6A  00F3               	movwf	set_led_duty@duty
 10130  0F6B  3000               	movlw	0
 10131  0F6C  00F4               	movwf	set_led_duty@duty+1
 10132  0F6D  3000               	movlw	0
 10133  0F6E  318E  26F8  318F   	fcall	_set_led_duty
 10134                           
 10135                           ;error.c: 68: _delay((unsigned long)((80)*(2000000/4000.0)));
 10136  0F71  3034               	movlw	52
 10137  0F72  0020               	movlb	0	; select bank0
 10138  0F73  00A1               	movwf	??_hard_lockup_uart+1
 10139  0F74  30F1               	movlw	241
 10140  0F75  00A0               	movwf	??_hard_lockup_uart
 10141  0F76                     u2897:	
 10142  0F76  0BA0               	decfsz	??_hard_lockup_uart,f
 10143  0F77  2F76               	goto	u2897
 10144  0F78  0BA1               	decfsz	??_hard_lockup_uart+1,f
 10145  0F79  2F76               	goto	u2897
 10146  0F7A  3200               	nop2
 10147                           
 10148                           ;error.c: 69: set_led_duty(0, 20);
 10149  0F7B  3014               	movlw	20
 10150  0F7C  00F3               	movwf	set_led_duty@duty
 10151  0F7D  3000               	movlw	0
 10152  0F7E  00F4               	movwf	set_led_duty@duty+1
 10153  0F7F  3000               	movlw	0
 10154  0F80  318E  26F8  318F   	fcall	_set_led_duty
 10155                           
 10156                           ;error.c: 70: _delay((unsigned long)((220)*(2000000/4000.0)));
 10157  0F83  308F               	movlw	143
 10158  0F84  0020               	movlb	0	; select bank0
 10159  0F85  00A1               	movwf	??_hard_lockup_uart+1
 10160  0F86  30DA               	movlw	218
 10161  0F87  00A0               	movwf	??_hard_lockup_uart
 10162  0F88                     u2907:	
 10163  0F88  0BA0               	decfsz	??_hard_lockup_uart,f
 10164  0F89  2F88               	goto	u2907
 10165  0F8A  0BA1               	decfsz	??_hard_lockup_uart+1,f
 10166  0F8B  2F88               	goto	u2907
 10167  0F8C  0000               	nop
 10168  0F8D  3001               	movlw	1
 10169  0F8E  0020               	movlb	0	; select bank0
 10170  0F8F  00A0               	movwf	??_hard_lockup_uart
 10171  0F90  0820               	movf	??_hard_lockup_uart,w
 10172  0F91  07F8               	addwf	hard_lockup_uart@i,f
 10173  0F92  3003               	movlw	3
 10174  0F93  0278               	subwf	hard_lockup_uart@i,w
 10175  0F94  1C03               	skipc
 10176  0F95  2F69               	goto	l3386
 10177  0F96                     l3396:	
 10178                           
 10179                           ;error.c: 71: }
 10180                           ;error.c: 72: _delay((unsigned long)((4000)*(2000000/4000.0)));
 10181  0F96  300B               	movlw	11
 10182  0F97  0020               	movlb	0	; select bank0
 10183  0F98  00A2               	movwf	??_hard_lockup_uart+2
 10184  0F99  3026               	movlw	38
 10185  0F9A  00A1               	movwf	??_hard_lockup_uart+1
 10186  0F9B  3066               	movlw	102
 10187  0F9C  00A0               	movwf	??_hard_lockup_uart
 10188  0F9D                     u2917:	
 10189  0F9D  0BA0               	decfsz	??_hard_lockup_uart,f
 10190  0F9E  2F9D               	goto	u2917
 10191  0F9F  0BA1               	decfsz	??_hard_lockup_uart+1,f
 10192  0FA0  2F9D               	goto	u2917
 10193  0FA1  0BA2               	decfsz	??_hard_lockup_uart+2,f
 10194  0FA2  2F9D               	goto	u2917
 10195  0FA3  3200               	nop2
 10196  0FA4  2F64               	goto	l3380
 10197  0FA5                     __end_of_hard_lockup_uart:	
 10198                           
 10199                           	psect	text66
 10200  0EF8                     __ptext66:	
 10201 ;; *************** function _set_led_duty *****************
 10202 ;; Defined at:
 10203 ;;		line 96 in file "lib/io.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  color           1    wreg     unsigned char 
 10206 ;;  duty            2    3[COMMON] unsigned int 
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;  color           1    7[COMMON] unsigned char 
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;Total ram usage:        5 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:    1
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		_hard_lockup
 10229 ;;		_hard_lockup_uart
 10230 ;;		_pwm_init
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           
 10235                           ;psect for function _set_led_duty
 10236  0EF8                     _set_led_duty:	
 10237                           
 10238                           ;incstack = 0
 10239                           ; Regs used in _set_led_duty: [wreg-fsr0h+status,2+status,0]
 10240                           ;set_led_duty@color stored from wreg
 10241  0EF8  00F7               	movwf	set_led_duty@color
 10242                           
 10243                           ;io.c: 97: switch (color) {
 10244  0EF9  2F42               	goto	l3374
 10245  0EFA                     l3368:	
 10246                           ;io.c: 98: case 0:
 10247                           
 10248                           
 10249                           ;io.c: 99: CCP1CON |= (duty & 2) << 4;
 10250  0EFA  0873               	movf	set_led_duty@duty,w
 10251  0EFB  3902               	andlw	2
 10252  0EFC  00F5               	movwf	??_set_led_duty
 10253  0EFD  3003               	movlw	3
 10254  0EFE                     u1885:	
 10255  0EFE  35F5               	lslf	??_set_led_duty,f
 10256  0EFF  3EFF               	addlw	-1
 10257  0F00  1D03               	skipz
 10258  0F01  2EFE               	goto	u1885
 10259  0F02  3575               	lslf	??_set_led_duty,w
 10260  0F03  00F6               	movwf	??_set_led_duty+1
 10261  0F04  0876               	movf	??_set_led_duty+1,w
 10262  0F05  0025               	movlb	5	; select bank5
 10263  0F06  0493               	iorwf	19,f	;volatile
 10264                           
 10265                           ;io.c: 100: CCP1CON |= (duty & 1) << 4;
 10266  0F07  0873               	movf	set_led_duty@duty,w
 10267  0F08  3901               	andlw	1
 10268  0F09  00F5               	movwf	??_set_led_duty
 10269  0F0A  3003               	movlw	3
 10270  0F0B                     u1895:	
 10271  0F0B  35F5               	lslf	??_set_led_duty,f
 10272  0F0C  3EFF               	addlw	-1
 10273  0F0D  1D03               	skipz
 10274  0F0E  2F0B               	goto	u1895
 10275  0F0F  3575               	lslf	??_set_led_duty,w
 10276  0F10  00F6               	movwf	??_set_led_duty+1
 10277  0F11  0876               	movf	??_set_led_duty+1,w
 10278  0F12  0493               	iorwf	19,f	;volatile
 10279                           
 10280                           ;io.c: 101: CCPR1L = duty >> 2;
 10281  0F13  0874               	movf	set_led_duty@duty+1,w
 10282  0F14  00F6               	movwf	??_set_led_duty+1
 10283  0F15  0873               	movf	set_led_duty@duty,w
 10284  0F16  00F5               	movwf	??_set_led_duty
 10285  0F17  36F6               	lsrf	??_set_led_duty+1,f
 10286  0F18  0CF5               	rrf	??_set_led_duty,f
 10287  0F19  36F6               	lsrf	??_set_led_duty+1,f
 10288  0F1A  0CF5               	rrf	??_set_led_duty,f
 10289  0F1B  0875               	movf	??_set_led_duty,w
 10290  0F1C  0091               	movwf	17	;volatile
 10291                           
 10292                           ;io.c: 102: break;
 10293  0F1D  0008               	return
 10294  0F1E                     l3370:	
 10295                           ;io.c: 103: case 1:
 10296                           
 10297                           
 10298                           ;io.c: 104: CCP2CON |= (duty & 2) << 4;
 10299  0F1E  0873               	movf	set_led_duty@duty,w
 10300  0F1F  3902               	andlw	2
 10301  0F20  00F5               	movwf	??_set_led_duty
 10302  0F21  3003               	movlw	3
 10303  0F22                     u1905:	
 10304  0F22  35F5               	lslf	??_set_led_duty,f
 10305  0F23  3EFF               	addlw	-1
 10306  0F24  1D03               	skipz
 10307  0F25  2F22               	goto	u1905
 10308  0F26  3575               	lslf	??_set_led_duty,w
 10309  0F27  00F6               	movwf	??_set_led_duty+1
 10310  0F28  0876               	movf	??_set_led_duty+1,w
 10311  0F29  0025               	movlb	5	; select bank5
 10312  0F2A  049A               	iorwf	26,f	;volatile
 10313                           
 10314                           ;io.c: 105: CCP2CON |= (duty & 1) << 4;
 10315  0F2B  0873               	movf	set_led_duty@duty,w
 10316  0F2C  3901               	andlw	1
 10317  0F2D  00F5               	movwf	??_set_led_duty
 10318  0F2E  3003               	movlw	3
 10319  0F2F                     u1915:	
 10320  0F2F  35F5               	lslf	??_set_led_duty,f
 10321  0F30  3EFF               	addlw	-1
 10322  0F31  1D03               	skipz
 10323  0F32  2F2F               	goto	u1915
 10324  0F33  3575               	lslf	??_set_led_duty,w
 10325  0F34  00F6               	movwf	??_set_led_duty+1
 10326  0F35  0876               	movf	??_set_led_duty+1,w
 10327  0F36  049A               	iorwf	26,f	;volatile
 10328                           
 10329                           ;io.c: 106: CCPR2L = duty >> 2;
 10330  0F37  0874               	movf	set_led_duty@duty+1,w
 10331  0F38  00F6               	movwf	??_set_led_duty+1
 10332  0F39  0873               	movf	set_led_duty@duty,w
 10333  0F3A  00F5               	movwf	??_set_led_duty
 10334  0F3B  36F6               	lsrf	??_set_led_duty+1,f
 10335  0F3C  0CF5               	rrf	??_set_led_duty,f
 10336  0F3D  36F6               	lsrf	??_set_led_duty+1,f
 10337  0F3E  0CF5               	rrf	??_set_led_duty,f
 10338  0F3F  0875               	movf	??_set_led_duty,w
 10339  0F40  0098               	movwf	24	;volatile
 10340                           
 10341                           ;io.c: 113: }
 10342                           
 10343                           ;io.c: 112: break;
 10344                           
 10345                           ;io.c: 108: case 2:
 10346                           
 10347                           ;io.c: 107: break;
 10348  0F41  0008               	return
 10349  0F42                     l3374:	
 10350  0F42  0877               	movf	set_led_duty@color,w
 10351                           
 10352                           ; Switch size 1, requested type "space"
 10353                           ; Number of cases is 3, Range of values is 0 to 2
 10354                           ; switch strategies available:
 10355                           ; Name         Instructions Cycles
 10356                           ; simple_byte           10     6 (average)
 10357                           ; direct_byte           12     6 (fixed)
 10358                           ; jumptable            260     6 (fixed)
 10359                           ;	Chosen strategy is simple_byte
 10360  0F43  3A00               	xorlw	0	; case 0
 10361  0F44  1903               	skipnz
 10362  0F45  2EFA               	goto	l3368
 10363  0F46  3A01               	xorlw	1	; case 1
 10364  0F47  1903               	skipnz
 10365  0F48  2F1E               	goto	l3370
 10366  0F49  3A03               	xorlw	3	; case 2
 10367  0F4A  1903               	skipnz
 10368  0F4B  2F4D               	goto	l541
 10369  0F4C  2F4D               	goto	l541
 10370  0F4D                     l541:	
 10371  0F4D  0008               	return
 10372  0F4E                     __end_of_set_led_duty:	
 10373                           
 10374                           	psect	text67
 10375  0A1A                     __ptext67:	
 10376 ;; *************** function _strcpy *****************
 10377 ;; Defined at:
 10378 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/strcpy.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;  to              1    wreg     PTR unsigned char 
 10381 ;;		 -> error_blaster@str(20), 
 10382 ;;  from            2    3[COMMON] PTR const unsigned char 
 10383 ;;		 -> STR_10(20), STR_9(17), STR_8(15), STR_7(16), 
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;  to              1    7[COMMON] PTR unsigned char 
 10386 ;;		 -> error_blaster@str(20), 
 10387 ;;  cp              1    6[COMMON] PTR unsigned char 
 10388 ;;		 -> error_blaster@str(20), 
 10389 ;; Return value:  Size  Location     Type
 10390 ;;                  1    wreg      PTR unsigned char 
 10391 ;; Registers used:
 10392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10401 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10402 ;;Total ram usage:        5 bytes
 10403 ;; Hardware stack levels used:    1
 10404 ;; Hardware stack levels required when called:    1
 10405 ;; This function calls:
 10406 ;;		Nothing
 10407 ;; This function is called by:
 10408 ;;		_error_blaster
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           
 10413                           ;psect for function _strcpy
 10414  0A1A                     _strcpy:	
 10415                           
 10416                           ;incstack = 0
 10417                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10418                           ;strcpy@to stored from wreg
 10419  0A1A  00F7               	movwf	strcpy@to
 10420  0A1B  0877               	movf	strcpy@to,w
 10421  0A1C  00F5               	movwf	??_strcpy
 10422  0A1D  0875               	movf	??_strcpy,w
 10423  0A1E  00F6               	movwf	strcpy@cp
 10424  0A1F                     l3424:	
 10425  0A1F  0876               	movf	strcpy@cp,w
 10426  0A20  0086               	movwf	6
 10427  0A21  0187               	clrf	7
 10428  0A22  0873               	movf	strcpy@from,w
 10429  0A23  0084               	movwf	4
 10430  0A24  0874               	movf	strcpy@from+1,w
 10431  0A25  0085               	movwf	5
 10432  0A26  0800               	movf	0,w	;code access
 10433  0A27  3FC0               	movwi [0]fsr1
 10434  0A28  0889               	movf	9,f
 10435  0A29  1903               	btfsc	3,2
 10436  0A2A  0008               	return
 10437  0A2B  3001               	movlw	1
 10438  0A2C  00F5               	movwf	??_strcpy
 10439  0A2D  0875               	movf	??_strcpy,w
 10440  0A2E  07F6               	addwf	strcpy@cp,f
 10441  0A2F  3001               	movlw	1
 10442  0A30  07F3               	addwf	strcpy@from,f
 10443  0A31  3000               	movlw	0
 10444  0A32  3DF4               	addwfc	strcpy@from+1,f
 10445  0A33  2A1F               	goto	l3424
 10446  0A34                     __end_of_strcpy:	
 10447                           ;	Return value of _strcpy is never used
 10448                           
 10449                           
 10450                           	psect	intentry
 10451  0004                     __pintentry:	
 10452 ;; *************** function _ISR *****************
 10453 ;; Defined at:
 10454 ;;		line 54 in file "src/main.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;		None
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;		None
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  1    wreg      void 
 10461 ;; Registers used:
 10462 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10470 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;Total ram usage:        3 bytes
 10473 ;; Hardware stack levels used:    1
 10474 ;; This function calls:
 10475 ;;		Nothing
 10476 ;; This function is called by:
 10477 ;;		Interrupt level 1
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481  0004                     _ISR:	
 10482                           
 10483                           ;incstack = 0
 10484                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10485  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10486  0005  3180               	pagesel	$
 10487  0006  0020               	movlb	0	; select bank0
 10488  0007  087F               	movf	127,w
 10489  0008  00F2               	movwf	??_ISR+2
 10490                           
 10491                           ;main.c: 55: if (TMR0IF == 1) {
 10492  0009  1D0B               	btfss	11,2	;volatile
 10493  000A  280D               	goto	i1l71
 10494  000B  0AFA               	incf	_tmr0_overflow,f	;# 
 10495                           
 10496                           ;main.c: 59: TMR0IF = 0;
 10497  000C  110B               	bcf	11,2	;volatile
 10498  000D                     i1l71:	
 10499                           
 10500                           ;main.c: 60: }
 10501                           ;main.c: 61: if (RCIF == 1) {
 10502  000D  0020               	movlb	0	; select bank0
 10503  000E  1E91               	btfss	17,5	;volatile
 10504  000F  2837               	goto	i1l74
 10505                           
 10506                           ;main.c: 62: UbxReceiver.buf[UbxReceiver.idx++] = RCREG;
 10507  0010  30EF               	movlw	239
 10508  0011  0086               	movwf	6
 10509  0012  3023               	movlw	35
 10510  0013  0087               	movwf	7
 10511  0014  0801               	movf	1,w
 10512  0015  3E89               	addlw	137
 10513  0016  00F0               	movwf	??_ISR
 10514  0017  01F1               	clrf	??_ISR+1
 10515  0018  3023               	movlw	35
 10516  0019  3DF1               	addwfc	??_ISR+1,f
 10517  001A  0870               	movf	??_ISR,w
 10518  001B  0086               	movwf	6
 10519  001C  0871               	movf	??_ISR+1,w
 10520  001D  0087               	movwf	7
 10521  001E  0023               	movlb	3	; select bank3
 10522  001F  0819               	movf	25,w	;volatile
 10523  0020  0081               	movwf	1
 10524  0021  3001               	movlw	1
 10525  0022  00F0               	movwf	??_ISR
 10526  0023  30EF               	movlw	239
 10527  0024  0086               	movwf	6
 10528  0025  3023               	movlw	35
 10529  0026  0087               	movwf	7
 10530  0027  0870               	movf	??_ISR,w
 10531  0028  0781               	addwf	1,f
 10532                           
 10533                           ;main.c: 63: if (UbxReceiver.idx == 101) UbxReceiver.idx = 0;
 10534  0029  30EF               	movlw	239
 10535  002A  0086               	movwf	6
 10536  002B  3023               	movlw	35
 10537  002C  0087               	movwf	7
 10538  002D  3065               	movlw	101
 10539  002E  0601               	xorwf	1,w
 10540  002F  1D03               	btfss	3,2
 10541  0030  2836               	goto	i1l2238
 10542  0031  30EF               	movlw	239
 10543  0032  0086               	movwf	6
 10544  0033  3023               	movlw	35
 10545  0034  0087               	movwf	7
 10546  0035  0181               	clrf	1
 10547  0036                     i1l2238:	
 10548                           
 10549                           ;main.c: 64: tmr0_overflow = 0;
 10550  0036  01FA               	clrf	_tmr0_overflow
 10551  0037                     i1l74:	
 10552  0037  0872               	movf	??_ISR+2,w
 10553  0038  0020               	movlb	0	; select bank0
 10554  0039  00FF               	movwf	127
 10555  003A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10556  003B  0009               	retfie
 10557  003C                     __end_of_ISR:	
 10558  007E                     btemp	set	126	;btemp
 10559  007E                     int$flags	set	126
 10560  007E                     wtemp	set	126
 10561  007E                     wtemp0	set	126
 10562  0080                     wtemp1	set	128
 10563  0082                     wtemp2	set	130
 10564  0084                     wtemp3	set	132
 10565  0086                     wtemp4	set	134
 10566  0088                     wtemp5	set	136
 10567  007F                     wtemp6	set	127
 10568  007E                     ttemp	set	126
 10569  007E                     ttemp0	set	126
 10570  0081                     ttemp1	set	129
 10571  0084                     ttemp2	set	132
 10572  0087                     ttemp3	set	135
 10573  007F                     ttemp4	set	127
 10574  007E                     ltemp	set	126
 10575  007E                     ltemp0	set	126
 10576  0082                     ltemp1	set	130
 10577  0086                     ltemp2	set	134
 10578  0080                     ltemp3	set	128


Data Sizes:
    Strings     619
    Constant    10
    Data        121
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     80      80
    BANK1            80     18      80
    BANK2            80      1      75
    BANK3            80      0      34
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           25      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[20]), STR_9(CODE[17]), STR_8(CODE[15]), STR_7(CODE[16]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 20
		 -> error_blaster@str(BANK0[20]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 20
		 -> error_blaster@str(BANK0[20]), 

    memset@p1	PTR void  size(2) Largest target is 103
		 -> UbxReceiver.buf(BIGRAM[102]), UbxReceiver(BIGRAM[103]), 

    memset@p	PTR unsigned char  size(2) Largest target is 103
		 -> UbxReceiver.buf(BIGRAM[102]), UbxReceiver(BIGRAM[103]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[13]), STR_6(CODE[20]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> idsn@debug(BANK0[20]), am1805_print_pic_time@pictime(BANK0[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ubx_send_and_recv@ubx_cmd	PTR unsigned char  size(2) Largest target is 9
		 -> ubx_poll_status(BANK1[9]), ubx_poll_pvt(BANK2[9]), 

    ubx_send_str@str	PTR unsigned char  size(2) Largest target is 12
		 -> ubx_poll_status(BANK1[9]), ubx_poll_pvt(BANK2[9]), ubx_disable_gxvtg(BANK3[12]), ubx_disable_gxrmc(BANK3[12]), 
		 -> ubx_disable_gxgsv(BANK2[12]), ubx_disable_gxgsa(BANK2[12]), ubx_disable_gxgll(BANK2[12]), ubx_disable_gxgga(BANK2[12]), 

    sp__memset	PTR void  size(2) Largest target is 103
		 -> UbxReceiver.buf(BIGRAM[102]), UbxReceiver(BIGRAM[103]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> error_blaster@str(BANK0[20]), 

    eeprom_seq_read@return_data	PTR unsigned char  size(1) Largest target is 4
		 -> sleep_start@sleep_vals(BANK1[4]), 

    eeprom_page_write@page_data	PTR unsigned char  size(1) Largest target is 8
		 -> eeprom_write_gps_minimum@gpspage4(BANK0[7]), eeprom_write_gps_minimum@gpspage3(BANK0[8]), eeprom_write_gps_minimum@gpspage2(BANK0[8]), eeprom_write_gps_minimum@gpspage1(BANK0[8]), 
		 -> eeprom_write_defaults@sp_defaults(BANK0[8]), eeprom_write_defaults@sleep_defaults(BANK0[4]), 

    uart_write_string@str	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_25(CODE[30]), STR_24(CODE[34]), STR_23(CODE[28]), STR_22(CODE[30]), 
		 -> STR_21(CODE[17]), STR_20(CODE[24]), idsn@debug(BANK0[20]), STR_18(CODE[39]), 
		 -> STR_17(CODE[48]), STR_16(CODE[19]), STR_15(CODE[25]), STR_14(CODE[31]), 
		 -> STR_13(CODE[37]), STR_12(CODE[25]), STR_11(CODE[33]), error_blaster@str(BANK0[20]), 
		 -> am1805_print_pic_time@pictime(BANK0[30]), STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[15]), 
		 -> STR_2(CODE[14]), STR_1(CODE[27]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ubx_send_str->_uart_write
    _reset_ubx_struct->_memset
    _pwm_init->_set_led_duty
    _uart_write_string->_uart_write
    _uart_write->_hard_lockup_uart
    _hard_lockup_uart->_set_led_duty

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sleep_start
    _eeprom_seq_read->_i2c_write_data
    _i2c_send_ack->_hard_lockup
    _cti_instruction_loop->_i3gnav
    _reset_instruction_ptr->_eeprom_single_write
    _idsn->_am1805_start_ctdn_tmr
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _am1805_start_ctdn_tmr->_am1805_write_to_addr
    _am1805_initiate_ctdn_sleep->_am1805_write_to_addr
    _i3gnav->_eeprom_write_gps_minimum
    _update_gps_fix_data->_get_pvt_str
    _get_pvt_str->_hard_lockup
    _ubx_silence_nmea->_ubx_send_str
    _have_3d_fix->_hard_lockup
    _ubx_send_and_recv->_ubx_send_str
    _reset_ubx_struct->_memset
    _eeprom_write_gps_minimum->_eeprom_page_write
    _let_nrf_update_eeprom->_eeprom_write_nrf52_sig_byte
    _eeprom_write_nrf52_sig_byte->_eeprom_single_write
    _is_this_the_first_pwrup->_eeprom_single_read
    _eeprom_single_read->_i2c_write_data
    _i2c_send_nack->_hard_lockup
    _first_pwrup_calls->_eeprom_write_defaults
    _eeprom_write_defaults->_eeprom_page_write
    _eeprom_single_write->_i2c_write_data
    _eeprom_page_write->_i2c_write_data
    _am1805_write_pgm_time->_i2c_write_data
    _am1805_write_defaults->_am1805_write_to_addr
    _am1805_write_to_addr->_i2c_write_data
    _am1805_are_we_asleep->_i2c_write_data
    _send_am1805_write->_hard_lockup
    _send_am1805_read->_hard_lockup
    _i2c_write_data->_hard_lockup
    _i2c_wait_for_ack->_hard_lockup
    _i2c_stop->_hard_lockup
    _i2c_start->_hard_lockup
    _i2c_gen_read->_hard_lockup
    _hard_lockup->_error_blaster
    _error_blaster->_uart_write_string
    _uart_write->_hard_lockup_uart

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sleep_start
    _adjusted_start->_cti_instruction_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  687848
                                             15 BANK1      3     3      0
                                              0 BANK2      1     1      0
               _am1805_are_we_asleep
                 _am1805_sleep_error
                              _blink
               _cti_instruction_loop
                 _eeprom_single_read
                  _first_pwrup_calls
                        _hard_lockup
                         _is_tc_high
            _is_this_the_first_pwrup
                  _is_usb_plugged_in
              _let_nrf_update_eeprom
                           _pic_init
              _reset_instruction_ptr
                        _sleep_start
                  _uart_write_string
 ---------------------------------------------------------------------------------
 (1) _sleep_start                                          6     6      0  284432
                                             78 BANK0      2     2      0
                                             11 BANK1      4     4      0
                     _adjusted_start
         _am1805_initiate_ctdn_sleep
              _am1805_start_ctdn_tmr
                    _eeprom_seq_read
                _eeprom_single_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_seq_read                                      6     4      2   30777
                                             35 BANK0      6     4      2
                       _i2c_gen_read
                  _i2c_get_read_data
                       _i2c_send_ack
                      _i2c_send_nack
                          _i2c_start
                           _i2c_stop
                   _i2c_wait_for_ack
                     _i2c_write_data
                   _send_eeprom_read
                  _send_eeprom_write
 ---------------------------------------------------------------------------------
 (3) _i2c_send_ack                                         0     0      0    4337
                        _hard_lockup
 ---------------------------------------------------------------------------------
 (2) _adjusted_start                                       0     0      0  190411
               _cti_instruction_loop
 ---------------------------------------------------------------------------------
 (3) _cti_instruction_loop                                11    11      0  190411
                                              0 BANK1     11    11      0
                 _eeprom_single_read
                _eeprom_single_write
                             _i3gnav
                               _idsn
              _reset_instruction_ptr
                  _uart_write_string
 ---------------------------------------------------------------------------------
 (4) _reset_instruction_ptr                                1     1      0   20812
                                             37 BANK0      1     1      0
                _eeprom_single_write
                  _uart_write_string
 ---------------------------------------------------------------------------------
 (4) _idsn                                                28    26      2   67800
                                             41 BANK0     28    26      2
         _am1805_initiate_ctdn_sleep
              _am1805_start_ctdn_tmr
                _eeprom_single_write
                            _sprintf
                  _uart_write_string
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             33    19     14    1619
                                              7 BANK0     25    11     14
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     362
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     371
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _am1805_start_ctdn_tmr                                4     4      0   22459
                                             37 BANK0      4     4      0
               _am1805_write_to_addr
 ---------------------------------------------------------------------------------
 (2) _am1805_initiate_ctdn_sleep                           1     1      0   22428
                                             37 BANK0      1     1      0
               _am1805_write_to_addr
 ---------------------------------------------------------------------------------
 (4) _i3gnav                                               3     3      0   54541
                                             75 BANK0      3     3      0
           _eeprom_write_gps_minimum
        _eeprom_write_nrf52_sig_byte
                        _have_3d_fix
                _is_nrfcomplete_high
                  _uart_write_string
                   _ubx_silence_nmea
                _update_gps_fix_data
 ---------------------------------------------------------------------------------
 (5) _update_gps_fix_data                                  0     0      0    6464
                        _get_pvt_str
      _sort_pvt_data_into_gps_struct
 ---------------------------------------------------------------------------------
 (6) _sort_pvt_data_into_gps_struct                        1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _get_pvt_str                                          3     3      0    6464
                                             34 BANK0      3     3      0
                        _hard_lockup
                  _ubx_send_and_recv
 ---------------------------------------------------------------------------------
 (5) _ubx_silence_nmea                                     3     3      0    1269
                                              7 BANK0      3     3      0
                       _ubx_send_str
 ---------------------------------------------------------------------------------
 (5) _have_3d_fix                                          3     3      0    6464
                                             34 BANK0      3     3      0
               _eval_ubx_buf_for_fix
                        _hard_lockup
                  _ubx_send_and_recv
 ---------------------------------------------------------------------------------
 (7) _ubx_send_and_recv                                    7     3      4    2090
                                              7 BANK0      7     3      4
                   _reset_ubx_struct
                       _ubx_send_str
 ---------------------------------------------------------------------------------
 (8) _ubx_send_str                                         4     2      2    1269
                                              3 BANK0      4     2      2
                         _uart_write
 ---------------------------------------------------------------------------------
 (8) _reset_ubx_struct                                     0     0      0     332
                             _memset
 ---------------------------------------------------------------------------------
 (9) _memset                                               8     2      6     332
                                              3 COMMON     6     0      6
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _eval_ubx_buf_for_fix                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _eeprom_write_gps_minimum                            33    33      0   19501
                                             42 BANK0     33    33      0
                  _eeprom_page_write
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             1     1      0     802
                                              8 COMMON     1     1      0
                        _eusart_init
                           _i2c_init
                           _pwm_init
                         _setup_fvrc
                   _setup_interrupts
                           _setup_io
                        _timer0_init
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_io                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_interrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_fvrc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             0     0      0     802
                       _set_led_duty
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _let_nrf_update_eeprom                                1     1      0   20843
                                             39 BANK0      1     1      0
        _eeprom_write_nrf52_sig_byte
                _is_nrfcomplete_high
                  _uart_write_string
 ---------------------------------------------------------------------------------
 (5) _is_nrfcomplete_high                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _eeprom_write_nrf52_sig_byte                          2     2      0   18187
                                             37 BANK0      2     2      0
                _eeprom_single_write
 ---------------------------------------------------------------------------------
 (1) _is_usb_plugged_in                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _is_this_the_first_pwrup                              0     0      0   26152
                 _eeprom_single_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_single_read                                   3     3      0   26152
                                             35 BANK0      3     3      0
                       _i2c_gen_read
                  _i2c_get_read_data
                      _i2c_send_nack
                          _i2c_start
                           _i2c_stop
                   _i2c_wait_for_ack
                     _i2c_write_data
                   _send_eeprom_read
                  _send_eeprom_write
 ---------------------------------------------------------------------------------
 (3) _send_eeprom_read                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_send_nack                                        0     0      0    4337
                        _hard_lockup
 ---------------------------------------------------------------------------------
 (1) _is_tc_high                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _first_pwrup_calls                                    0     0      0   80728
              _am1805_write_defaults
              _am1805_write_pgm_time
              _eeprom_write_defaults
 ---------------------------------------------------------------------------------
 (2) _eeprom_write_defaults                               14    14      0   36584
                                             42 BANK0     14    14      0
                  _eeprom_page_write
                _eeprom_single_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_single_write                                  2     1      1   18156
                                             35 BANK0      2     1      1
                          _i2c_start
                           _i2c_stop
                   _i2c_wait_for_ack
                     _i2c_write_data
                  _send_eeprom_write
 ---------------------------------------------------------------------------------
 (6) _eeprom_page_write                                    7     5      2   18354
                                             35 BANK0      7     5      2
                          _i2c_start
                           _i2c_stop
                   _i2c_wait_for_ack
                     _i2c_write_data
                  _send_eeprom_write
 ---------------------------------------------------------------------------------
 (3) _send_eeprom_write                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _am1805_write_pgm_time                                0     0      0   21716
                          _i2c_start
                           _i2c_stop
                   _i2c_wait_for_ack
                     _i2c_write_data
                  _send_am1805_write
 ---------------------------------------------------------------------------------
 (2) _am1805_write_defaults                                1     1      0   22428
                                             37 BANK0      1     1      0
               _am1805_write_to_addr
 ---------------------------------------------------------------------------------
 (3) _am1805_write_to_addr                                 2     1      1   22428
                                             35 BANK0      2     1      1
                          _i2c_start
                           _i2c_stop
                   _i2c_wait_for_ack
                     _i2c_write_data
                  _send_am1805_write
 ---------------------------------------------------------------------------------
 (1) _blink                                                2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _am1805_sleep_error                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _am1805_are_we_asleep                                 2     2      0   30458
                                             35 BANK0      2     2      0
                       _i2c_gen_read
                  _i2c_get_read_data
                          _i2c_start
                           _i2c_stop
                   _i2c_wait_for_ack
                     _i2c_write_data
                   _send_am1805_read
                  _send_am1805_write
 ---------------------------------------------------------------------------------
 (4) _send_am1805_write                                    0     0      0    4337
                        _hard_lockup
 ---------------------------------------------------------------------------------
 (2) _send_am1805_read                                     0     0      0    4337
                        _hard_lockup
 ---------------------------------------------------------------------------------
 (3) _i2c_write_data                                       1     1      0    4368
                                             34 BANK0      1     1      0
                        _hard_lockup
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_for_ack                                     0     0      0    4337
                        _hard_lockup
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0    4337
                        _hard_lockup
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0    4337
                        _hard_lockup
 ---------------------------------------------------------------------------------
 (3) _i2c_get_read_data                                    2     2      0      34
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_gen_read                                         0     0      0    4337
                        _hard_lockup
 ---------------------------------------------------------------------------------
 (4) _hard_lockup                                          5     5      0    4337
                                             29 BANK0      5     5      0
                      _error_blaster
                       _set_led_duty
 ---------------------------------------------------------------------------------
 (5) _error_blaster                                       21    21      0    3436
                                              8 BANK0     21    21      0
                             _strcpy
                  _uart_write_string
 ---------------------------------------------------------------------------------
 (1) _uart_write_string                                    5     3      2    2656
                                              3 BANK0      5     3      2
                         _uart_write
 ---------------------------------------------------------------------------------
 (2) _uart_write                                           1     1      0     901
                                              9 COMMON     1     1      0
                   _hard_lockup_uart
 ---------------------------------------------------------------------------------
 (3) _hard_lockup_uart                                     4     4      0     870
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                       _set_led_duty
 ---------------------------------------------------------------------------------
 (4) _set_led_duty                                         5     3      2     802
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               5     3      2     489
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ISR                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _am1805_are_we_asleep
     _i2c_gen_read
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _i2c_get_read_data
     _i2c_start
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _i2c_stop
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _i2c_wait_for_ack
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _i2c_write_data
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _send_am1805_read
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _send_am1805_write
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
   _am1805_sleep_error
   _blink
   _cti_instruction_loop
     _eeprom_single_read
       _i2c_gen_read
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_get_read_data
       _i2c_send_nack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_start
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_stop
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_wait_for_ack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_write_data
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _send_eeprom_read
       _send_eeprom_write
     _eeprom_single_write
       _i2c_start
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_stop
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_wait_for_ack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_write_data
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _send_eeprom_write
     _i3gnav
       _eeprom_write_gps_minimum
         _eeprom_page_write
           _i2c_start
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_stop
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_wait_for_ack
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_write_data
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _send_eeprom_write
       _eeprom_write_nrf52_sig_byte
         _eeprom_single_write
           _i2c_start
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_stop
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_wait_for_ack
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_write_data
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _send_eeprom_write
       _have_3d_fix
         _eval_ubx_buf_for_fix
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
         _ubx_send_and_recv
           _reset_ubx_struct
             _memset
           _ubx_send_str
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
       _is_nrfcomplete_high
       _uart_write_string
         _uart_write
           _hard_lockup_uart
             _set_led_duty
       _ubx_silence_nmea
         _ubx_send_str
           _uart_write
             _hard_lockup_uart
               _set_led_duty
       _update_gps_fix_data
         _get_pvt_str
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
           _ubx_send_and_recv
             _reset_ubx_struct
               _memset
             _ubx_send_str
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
         _sort_pvt_data_into_gps_struct
     _idsn
       _am1805_initiate_ctdn_sleep
         _am1805_write_to_addr
           _i2c_start
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_stop
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_wait_for_ack
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_write_data
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _send_am1805_write
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
       _am1805_start_ctdn_tmr
         _am1805_write_to_addr
           _i2c_start
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_stop
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_wait_for_ack
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_write_data
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _send_am1805_write
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
       _eeprom_single_write
         _i2c_start
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_stop
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_wait_for_ack
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_write_data
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _send_eeprom_write
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _uart_write_string
         _uart_write
           _hard_lockup_uart
             _set_led_duty
     _reset_instruction_ptr
       _eeprom_single_write
         _i2c_start
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_stop
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_wait_for_ack
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_write_data
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _send_eeprom_write
       _uart_write_string
         _uart_write
           _hard_lockup_uart
             _set_led_duty
     _uart_write_string
       _uart_write
         _hard_lockup_uart
           _set_led_duty
   _eeprom_single_read
     _i2c_gen_read
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _i2c_get_read_data
     _i2c_send_nack
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _i2c_start
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _i2c_stop
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _i2c_wait_for_ack
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _i2c_write_data
       _hard_lockup
         _error_blaster
           _strcpy
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _set_led_duty
     _send_eeprom_read
     _send_eeprom_write
   _first_pwrup_calls
     _am1805_write_defaults
       _am1805_write_to_addr
         _i2c_start
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_stop
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_wait_for_ack
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_write_data
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _send_am1805_write
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
     _am1805_write_pgm_time
       _i2c_start
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_stop
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_wait_for_ack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_write_data
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _send_am1805_write
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
     _eeprom_write_defaults
       _eeprom_page_write
         _i2c_start
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_stop
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_wait_for_ack
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_write_data
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _send_eeprom_write
       _eeprom_single_write
         _i2c_start
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_stop
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_wait_for_ack
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_write_data
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _send_eeprom_write
   _hard_lockup
     _error_blaster
       _strcpy
       _uart_write_string
         _uart_write
           _hard_lockup_uart
             _set_led_duty
     _set_led_duty
   _is_tc_high
   _is_this_the_first_pwrup
     _eeprom_single_read
       _i2c_gen_read
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_get_read_data
       _i2c_send_nack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_start
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_stop
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_wait_for_ack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_write_data
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _send_eeprom_read
       _send_eeprom_write
   _is_usb_plugged_in
   _let_nrf_update_eeprom
     _eeprom_write_nrf52_sig_byte
       _eeprom_single_write
         _i2c_start
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_stop
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_wait_for_ack
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_write_data
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _send_eeprom_write
     _is_nrfcomplete_high
     _uart_write_string
       _uart_write
         _hard_lockup_uart
           _set_led_duty
   _pic_init
     _eusart_init
     _i2c_init
     _pwm_init
       _set_led_duty
     _setup_fvrc
     _setup_interrupts
     _setup_io
     _timer0_init
   _reset_instruction_ptr
     _eeprom_single_write
       _i2c_start
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_stop
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_wait_for_ack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_write_data
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _send_eeprom_write
     _uart_write_string
       _uart_write
         _hard_lockup_uart
           _set_led_duty
   _sleep_start
     _adjusted_start
       _cti_instruction_loop
         _eeprom_single_read
           _i2c_gen_read
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_get_read_data
           _i2c_send_nack
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_start
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_stop
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_wait_for_ack
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_write_data
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _send_eeprom_read
           _send_eeprom_write
         _eeprom_single_write
           _i2c_start
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_stop
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_wait_for_ack
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _i2c_write_data
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
           _send_eeprom_write
         _i3gnav
           _eeprom_write_gps_minimum
             _eeprom_page_write
               _i2c_start
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_stop
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_wait_for_ack
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_write_data
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _send_eeprom_write
           _eeprom_write_nrf52_sig_byte
             _eeprom_single_write
               _i2c_start
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_stop
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_wait_for_ack
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_write_data
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _send_eeprom_write
           _have_3d_fix
             _eval_ubx_buf_for_fix
             _hard_lockup
               _error_blaster
                 _strcpy
                 _uart_write_string
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
               _set_led_duty
             _ubx_send_and_recv
               _reset_ubx_struct
                 _memset
               _ubx_send_str
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
           _is_nrfcomplete_high
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
           _ubx_silence_nmea
             _ubx_send_str
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _update_gps_fix_data
             _get_pvt_str
               _hard_lockup
                 _error_blaster
                   _strcpy
                   _uart_write_string
                     _uart_write
                       _hard_lockup_uart
                         _set_led_duty
                 _set_led_duty
               _ubx_send_and_recv
                 _reset_ubx_struct
                   _memset
                 _ubx_send_str
                   _uart_write
                     _hard_lockup_uart
                       _set_led_duty
             _sort_pvt_data_into_gps_struct
         _idsn
           _am1805_initiate_ctdn_sleep
             _am1805_write_to_addr
               _i2c_start
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_stop
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_wait_for_ack
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_write_data
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _send_am1805_write
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
           _am1805_start_ctdn_tmr
             _am1805_write_to_addr
               _i2c_start
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_stop
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_wait_for_ack
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _i2c_write_data
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
               _send_am1805_write
                 _hard_lockup
                   _error_blaster
                     _strcpy
                     _uart_write_string
                       _uart_write
                         _hard_lockup_uart
                           _set_led_duty
                   _set_led_duty
           _eeprom_single_write
             _i2c_start
               _hard_lockup
                 _error_blaster
                   _strcpy
                   _uart_write_string
                     _uart_write
                       _hard_lockup_uart
                         _set_led_duty
                 _set_led_duty
             _i2c_stop
               _hard_lockup
                 _error_blaster
                   _strcpy
                   _uart_write_string
                     _uart_write
                       _hard_lockup_uart
                         _set_led_duty
                 _set_led_duty
             _i2c_wait_for_ack
               _hard_lockup
                 _error_blaster
                   _strcpy
                   _uart_write_string
                     _uart_write
                       _hard_lockup_uart
                         _set_led_duty
                 _set_led_duty
             _i2c_write_data
               _hard_lockup
                 _error_blaster
                   _strcpy
                   _uart_write_string
                     _uart_write
                       _hard_lockup_uart
                         _set_led_duty
                 _set_led_duty
             _send_eeprom_write
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _reset_instruction_ptr
           _eeprom_single_write
             _i2c_start
               _hard_lockup
                 _error_blaster
                   _strcpy
                   _uart_write_string
                     _uart_write
                       _hard_lockup_uart
                         _set_led_duty
                 _set_led_duty
             _i2c_stop
               _hard_lockup
                 _error_blaster
                   _strcpy
                   _uart_write_string
                     _uart_write
                       _hard_lockup_uart
                         _set_led_duty
                 _set_led_duty
             _i2c_wait_for_ack
               _hard_lockup
                 _error_blaster
                   _strcpy
                   _uart_write_string
                     _uart_write
                       _hard_lockup_uart
                         _set_led_duty
                 _set_led_duty
             _i2c_write_data
               _hard_lockup
                 _error_blaster
                   _strcpy
                   _uart_write_string
                     _uart_write
                       _hard_lockup_uart
                         _set_led_duty
                 _set_led_duty
             _send_eeprom_write
           _uart_write_string
             _uart_write
               _hard_lockup_uart
                 _set_led_duty
         _uart_write_string
           _uart_write
             _hard_lockup_uart
               _set_led_duty
     _am1805_initiate_ctdn_sleep
       _am1805_write_to_addr
         _i2c_start
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_stop
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_wait_for_ack
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_write_data
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _send_am1805_write
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
     _am1805_start_ctdn_tmr
       _am1805_write_to_addr
         _i2c_start
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_stop
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_wait_for_ack
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _i2c_write_data
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
         _send_am1805_write
           _hard_lockup
             _error_blaster
               _strcpy
               _uart_write_string
                 _uart_write
                   _hard_lockup_uart
                     _set_led_duty
             _set_led_duty
     _eeprom_seq_read
       _i2c_gen_read
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_get_read_data
       _i2c_send_ack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_send_nack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_start
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_stop
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_wait_for_ack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_write_data
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _send_eeprom_read
       _send_eeprom_write
     _eeprom_single_write
       _i2c_start
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_stop
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_wait_for_ack
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _i2c_write_data
         _hard_lockup
           _error_blaster
             _strcpy
             _uart_write_string
               _uart_write
                 _hard_lockup_uart
                   _set_led_duty
           _set_led_duty
       _send_eeprom_write
   _uart_write_string
     _uart_write
       _hard_lockup_uart
         _set_led_duty

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     12      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      1      4B       9       93.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      22      11       42.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     118      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              19      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     118      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Mar 12 16:55:32 2016

                                 __CFG_CP$OFF 0000                                uart_write@data 0079  
                   __end_of_send_am1805_write 09C0                                  ?_get_pvt_str 0070  
                                 __CFG_LVP$ON 0000                                           l132 0932  
                                         l125 0994                                           l118 0980  
                                         l242 09BE                                           l139 096C  
                                         l235 09A9                                           l331 0861  
                                         l163 09D3                                           l156 09E8  
                                         l149 09FF                                           l325 0867  
                                         l610 0DBD                                           l179 0939  
                                         l515 08AB                                           l541 0F4D  
                                         l605 0DAA                                           l384 0EF7  
                                         l770 0DFC                                           l692 063D  
                                         l698 0778                                           _GIE 005F  
                                         _PS0 04A8                                           _PR2 001B  
                                         _PS1 04A9                                           _PEN 10B2  
                                         _PS2 04AA                                  __CFG_CPD$OFF 0000  
                                         _ISR 0004                                           _SEN 10B0  
                                         _PSA 04AB                         _reset_instruction_ptr 0911  
            __end_of_eeprom_write_gps_minimum 04EB                                  __CFG_BORV$LO 0000  
                                         wreg 0009                                  __CFG_IESO$ON 0000  
                     __size_of_i2c_write_data 0017                                          ?_ISR 0070  
                          eeprom_page_write@i 0049                                 ?_i2c_gen_read 0070  
                           _is_usb_plugged_in 0856                                          PORTE 0010  
                                        l4002 0745                                          l4004 0755  
                                        l4006 076D                                          l4024 09DC  
                                        l4210 0C5C                                          l3406 0942  
                                        l3510 0988                                          l4038 099D  
                                        l4222 0B62                                          l4070 0E9C  
                                        l3424 0A1F                                          l3416 0A37  
                                        l3440 0ED8                                          l3432 0EB8  
                                        l3520 0926                                          l4072 0E75  
                                        l3370 0F1E                                          l4162 08C1  
                                        l4074 0EA2                                          l4242 06D6  
                                        l3380 0F64                                          l3436 0EC8  
                                        l3428 0EA8                                          l3460 0FBD  
                                        l3700 0C9C                                          l4068 0E99  
                                        l4252 06F0                                          l3374 0F42  
                                        l3446 0EE8                                          l3470 0FBF  
                                        l3534 09F3                                          l3454 0A06  
                                        l3702 0CA8                                          l4190 0DAB  
                                        l4270 071F                                          l3368 0EFA  
                                        l3472 0FED                                          l3712 0CC3  
                                        l3800 0541                                          l3386 0F69  
                                        l3626 0CE8                                          l3650 0BA8  
                                        l3730 0BF2                                          l4194 0DBE  
                                        l4274 0726                                          l4258 0701  
                                        l3396 0F96                                          l3548 09B2  
                                        l3628 0CFF                                          l3636 08F2  
                                        l3572 0DF0                                          l3708 0CBA  
                                        l3724 0BDA                                          l3812 0566  
                                        l4276 072A                                          l3486 0B11  
                                        l3566 0DDA                                          l3646 0BC4  
                                        l3726 0BE6                                          l3734 0BFB  
                                        l3806 0547                                          l3830 05B4  
                                        l3568 0DED                                          l3498 0974  
                                        l3586 0E0B                                          l3930 0684  
                                        l3826 0579                                          l3818 0575  
                                        l3748 0960                                          l3764 09C7  
                                        l3828 04F1                                          l3870 0C60  
                                        l3790 052B                                          l3872 0C89  
                                        l3928 066F                                          l3784 0513  
                                        l3866 0C7A                                          l3946 06A2  
                                        l3962 05BC                                          l3964 05CC  
                                        l3878 0C91                                          l3982 061E  
                                        STR_1 01C2                       ??_am1805_write_defaults 0045  
                                        STR_2 02DC                                          STR_3 02CD  
                                        STR_4 0227                                          STR_5 023C  
                                        STR_6 0265                                          STR_7 02AE  
                                        STR_8 02BE                                          STR_9 029D  
                                        _BRGH 0CF2                                          _CREN 0CEC  
                                        u2005 0B1C                                          _LATA 010C  
                                        _LATB 010D                                          u2225 0C9F  
                                        u2315 0BEC                                          u2165 0CCD  
                                        u2245 0CA9                                          u2325 0BF3  
                                        u2255 0CB3                                          u2415 055C  
                                        u2600 0D59                                          u2265 0CBB  
                                        u2295 0BDD                                          u1905 0F22  
                                        u1915 0F2F                                          u2807 0C83  
                                        u2817 0DCA                                          u2737 073C  
                                        u2907 0F88                                          u2827 0DE2  
                                        u2747 0B96                                          _PEIE 005E  
                                        u1885 0EFE                                          u2917 0F9D  
                                        u2837 0908                                          u2757 064F  
                                        u1895 0F0B                                          u2847 0FB6  
                                        u2767 0660                                          u2857 0FD0  
                                        u2777 067C                                          u2867 0FE2  
                                        u2787 0BCD                                          _RCIE 048D  
                                        _RCEN 10B3                                          _RCIF 008D  
                                        u2877 0FF8                                          u2797 07F5  
                                        i1l71 000D                                          u2887 0F5D  
                                        u2897 0F76                                          i1l74 0037  
                                        _TMR0 0015                                          _SPEN 0CEF  
                      ?_let_nrf_update_eeprom 0070                                          _TRMT 0CF1  
                                        _TXEN 0CF5                                          _SYNC 0CF4  
                                        _R_nW 10A2                                  __CFG_WRT$OFF 0000  
                               __CFG_FCMEN$ON 0000                            ?_is_usb_plugged_in 0070  
                  eeprom_page_write@page_data 0043                                          _data 0129  
                                        _idsn 05B9                                          _main 06C2  
                      ?_eeprom_write_defaults 0070                                          fsr0h 0005  
                                        fsr1h 0007                                          fsr0l 0004  
                                        indf0 0000                                          indf1 0001  
                                        fsr1l 0006                                          btemp 007E  
         eeprom_write_defaults@sleep_defaults 0054                        ??_eval_ubx_buf_for_fix 0073  
                               __CFG_BOREN$ON 0000                                          ltemp 007E  
                                        start 003C                                          ttemp 007E  
                                        wtemp 007E                                 __CFG_FOSC$ECH 0000  
                 __size_of_am1805_sleep_error 0001                                 ?_i2c_send_ack 0070  
                         ??_is_usb_plugged_in 0073                                 __CFG_MCLRE$ON 0000  
                 __end_of_update_gps_fix_data 0876                ubx_send_and_recv@response_time 0029  
                               _i2c_send_nack 09C0                                         ??_ISR 0070  
                     ??_am1805_write_pgm_time 007A                                 __CFG_PLLEN$ON 0000  
                                       ?_idsn 0049                                         ?_main 0070  
                                       _ACKEN 10B4                                         _ACKDT 10B5  
                                       STR_10 0251                                         STR_11 012A  
                                       STR_20 020F                                         STR_12 01F6  
                                       STR_21 028C                                         STR_13 00E3  
                                       STR_22 016A                                         STR_14 014B  
                                       STR_15 01DD                                         STR_23 01A6  
                                       STR_16 0279                                         STR_24 0108  
                                       _BRG16 0CFB                                         STR_25 0188  
                                       STR_17 008C                                 __CFG_WDTE$OFF 0000  
                                       STR_18 00BC                                         STR_19 02EA  
                    __end_of_reset_ubx_struct 095A                                         _T2CON 001C  
                             __end_of___lwdiv 0CC8                         _am1805_start_ctdn_tmr 0B7C  
                             __end_of___lwmod 0C00                                         _RCREG 0199  
                                       _PORTA 000C                                         _PORTB 000D  
                                       _PORTC 000E                                         _TRISA 008C  
                                       _TRISB 008D                                         _TRISC 008E  
                                       _TXREG 019A                 __size_of_cti_instruction_loop 007A  
                              _adjusted_start 084F                     __end_of_is_usb_plugged_in 085A  
                ??_am1805_initiate_ctdn_sleep 0045                                         _blink 0901  
                              ??_i2c_gen_read 007A                               __end_of_dpowers 008C  
                           ?_hard_lockup_uart 0070                                  ?_eusart_init 0070  
                                       idsn@n 0049                            ??_hard_lockup_uart 0020  
                                       ltemp0 007E                                         ltemp1 0082  
                                       ltemp2 0086                                         ltemp3 0080  
                  __size_of_send_eeprom_write 0006                    __size_of_uart_write_string 001C  
                                       ttemp0 007E                                         ttemp1 0081  
                                       ttemp2 0084                                         ttemp3 0087  
                                       ttemp4 007F                                         status 0003  
                                       wtemp0 007E                                         wtemp1 0080  
                                       wtemp2 0082                   __end_of_eeprom_single_write 0AA9  
                                       wtemp3 0084                                         wtemp4 0086  
                                       wtemp5 0088                                         wtemp6 007F  
                             __end_of_sprintf 05B9                                    _GpsMinimum 00A0  
                                idsn@quotient 0063                 am1805_start_ctdn_tmr@amt_time 0048  
                          i2c_write_data@data 0042                                ??_i2c_send_ack 007A  
                              ?_i2c_send_nack 0070                               __initialization 003E  
                                __end_of_idsn 063E                                  __end_of_main 0744  
                     eeprom_single_write@addr 0043                              __end_of_i2c_init 08A4  
                     eeprom_single_write@data 0044                    __size_of_send_am1805_write 0015  
                            __end_of_i2c_stop 0996               ??_sort_pvt_data_into_gps_struct 0073  
                      ?_reset_instruction_ptr 0070                                        ??_idsn 004B  
                                      ??_main 00E0                             ?_i2c_wait_for_ack 0070  
                     _is_this_the_first_pwrup 08B8                        __end_of_adjusted_start 0852  
                ?_eeprom_write_nrf52_sig_byte 0070                          eeprom_page_write@len 0044  
                          ??_i2c_wait_for_ack 007A                          __size_of_have_3d_fix 0035  
                                      ?_blink 0070                                        _CCPR1L 0291  
                                      _CCPR2L 0298                                        _ANSELA 018C  
                  eeprom_seq_read@return_data 0043                  __end_of_am1805_write_to_addr 0A8B  
                                      i1l2238 0036                                        _FVRCON 0117  
                        __size_of_hard_lockup 005B                                        _FVRRDY 08BE  
                                      _OSCCON 0099                                        _TMR0IE 005D  
                                      _TMR0IF 005A                                        _TMR0CS 04AD  
                                      _TMR0SE 04AC                                        _TMR2ON 00E2  
                                      _WDTCON 0097                                        _SSPADD 0212  
                                      _SSPBUF 0211                            __size_of_i2c_start 0014  
                    __end_of_send_eeprom_read 086A                                __CFG_PWRTE$OFF 0000  
           __size_of_eeprom_write_gps_minimum 00ED                                        _i3gnav 063E  
                   ?_eeprom_write_gps_minimum 0070                                 idsn@remainder 0064  
                              __CFG_STVREN$ON 0000                      __size_of_eeprom_seq_read 004E  
                                ?_timer0_init 0070                                     ??___lwdiv 0077  
                                   ??___lwmod 0078                                  ?_sleep_start 0070  
                    __end_of_ubx_silence_nmea 0800                 __size_of_am1805_are_we_asleep 0030  
                                      _memset 0A01                              __end_of_pic_init 0AC9  
                 eeprom_page_write@start_addr 0048                        ?_am1805_start_ctdn_tmr 0070  
                        __size_of_get_pvt_str 002D                                        _strcpy 0A1A  
                             ?_adjusted_start 0070                     __size_of_setup_interrupts 0006  
                            __end_of_setup_io 08CF                        __size_of_error_blaster 0053  
                  __size_of_is_usb_plugged_in 0004                 ??_eeprom_write_nrf52_sig_byte 0045  
                 __size_of_eeprom_single_read 002E                                _i2c_write_data 09EA  
                            __end_of_pwm_init 0AEA                                     ??_sprintf 0035  
                     __end_of__initialization 007E                               ??_i2c_send_nack 007A  
                              __pcstackCOMMON 0070                                  __pidataBANK1 08F4  
                                __pidataBANK2 0E0D                                  __pidataBANK3 0AEA  
                          eeprom_seq_read@len 0044                                 __end_of_blink 0911  
                        __end_of_i2c_gen_read 096E                     __size_of_send_am1805_read 0015  
                   ??_is_this_the_first_pwrup 007A                             __end_of_i2c_start 0982  
                    am1805_write_to_addr@addr 0043                      am1805_write_to_addr@data 0044  
                      __end_of_i2c_write_data 0A01            __end_of_am1805_initiate_ctdn_sleep 0A6D  
                  _am1805_initiate_ctdn_sleep 0A50         __end_of_sort_pvt_data_into_gps_struct 03FE  
      __size_of_sort_pvt_data_into_gps_struct 0107                 _sort_pvt_data_into_gps_struct 02F7  
                        __end_of_i2c_send_ack 09EA                       ??_let_nrf_update_eeprom 0047  
                                     ??_blink 0073                   __end_of_is_nrfcomplete_high 085E  
                     ??_eeprom_write_defaults 004A                                    __pbssBANK1 00A0  
                                   ?_i2c_init 0070                __size_of_am1805_write_defaults 0024  
                                   ?_i2c_stop 0070                 __end_of_am1805_write_defaults 0B53  
                        __size_of_eusart_init 000A              eeprom_write_gps_minimum@gpspage1 004C  
            eeprom_write_gps_minimum@gpspage2 0054              eeprom_write_gps_minimum@gpspage3 005C  
            eeprom_write_gps_minimum@gpspage4 0064                         eeprom_page_write@page 0047  
        __size_of_eeprom_write_nrf52_sig_byte 000A                                       ?_i3gnav 0070  
                               _error_blaster 0EA5                                    __pmaintext 06C2  
             cti_instruction_loop@instruction 00D8                                    __pintentry 0004  
                                     _CM1CON0 0111                                       _CM1CON1 0112  
                                     _CCP1CON 0293                                       _CCP2CON 029A  
                          uart_write_string@i 0026                                       _ACKSTAT 10B6  
              __size_of_am1805_write_pgm_time 003D                                       ?_memset 0073  
               __end_of_am1805_write_pgm_time 0D3F                          _am1805_write_to_addr 0A6D  
                           _eeprom_page_write 0CC8                                       ?_strcpy 0073  
                          ?_eeprom_page_write 0043                             ??_eeprom_seq_read 0045  
                           ?_reset_ubx_struct 0070                               ?_i2c_write_data 0070  
                                     _SP1BRGL 019B                            ??_reset_ubx_struct 0079  
                                     _SSPCON1 0215                           ??_eeprom_page_write 0045  
                                     _SSPSTAT 0214               __end_of_is_this_the_first_pwrup 08C3  
                                 _UbxReceiver 2389                                    ??_i2c_init 0073  
                          hard_lockup@err_num 0041                                    ??_i2c_stop 007A  
                  __end_of_am1805_sleep_error 0004                          uart_write_string@str 0023  
                                   ?_pic_init 0070                                       _PicTime 00C7  
                               ?_set_led_duty 0073                  __end_of_cti_instruction_loop 07BE  
                              ?_error_blaster 0070                 __size_of_eval_ubx_buf_for_fix 000D  
                             __size_of_i3gnav 0084                         cti_instruction_loop@n 00D6  
                   __size_of_hard_lockup_uart 0057                                     ?_setup_io 0070  
                        _ubx_nmea_disable_ack 01A0                       ??_reset_instruction_ptr 0045  
                   __end_of_eeprom_page_write 0D02                                     ?_pwm_init 0070  
                                     ___lwdiv 0C93                                       ___lwmod 0BD3  
                                  _is_tc_high 0852                         ?_am1805_write_to_addr 0043  
                             __size_of_memset 0019                          __size_of_timer0_init 000A  
                                     __ptext1 0D7F                                       __ptext2 0E57  
                                     __ptext3 09D5                                       __ptext4 084F  
                                     __ptext5 0744                                       __ptext6 0911  
                                     __ptext7 05B9                                       __ptext8 04EB  
                                     __ptext9 0BD3                             _i2c_get_read_data 0876  
                __size_of_update_gps_fix_data 0006                             set_led_duty@color 0077  
                        __size_of_sleep_start 0046                               __size_of_strcpy 001A  
                                __size_of_ISR 0038                                       _dpowers 0082  
                            _setup_interrupts 086A                            ?_i2c_get_read_data 0070  
                                     _sprintf 04EB                                       clrloop0 08DC  
                     am1805_are_we_asleep@val 0044                          end_of_initialization 007E  
                         ??_i2c_get_read_data 0073                                       init_ram 08CF  
                                     memset@c 0075                     __size_of_i2c_wait_for_ack 0012  
                                     memset@n 0077                                       memset@p 0020  
                                     initloop 08D0                                    ??_pic_init 0078  
                              ??_set_led_duty 0075                    eeprom_write_defaults@F3293 00E3  
                  eeprom_write_defaults@F3295 00BF                         __size_of_i2c_gen_read 0014  
                           ?_send_eeprom_read 0070                                 ?_ubx_send_str 0023  
                          get_pvt_str@err_ctr 0044                              error_blaster@str 0028  
                          ??_send_eeprom_read 0073                                    ??_setup_io 0073  
                __size_of_eeprom_single_write 001E                       ??_am1805_start_ctdn_tmr 0045  
                            _send_am1805_read 0996                                    ??_pwm_init 0078  
                                __pstringtext 0082                              ??_adjusted_start 007A  
                   __end_of_i2c_get_read_data 087D  cti_instruction_loop@next_instruction_address 00DB  
                           ?_ubx_silence_nmea 0070                                    _uart_write 0934  
                       __size_of_i2c_send_ack 0015                                 ??_have_3d_fix 0042  
                          ??_ubx_silence_nmea 0027                                    _setup_fvrc 08A4  
                             _ubx_poll_posllr 0120                        eeprom_single_read@addr 0044  
                             _ubx_poll_status 00E7                                 ??_hard_lockup 003D  
                          have_3d_fix@err_ctr 0044                  __end_of_am1805_are_we_asleep 0C5E  
                                _i2c_gen_read 095A                               ??_error_blaster 007A  
               ubx_send_and_recv@expected_len 002A                          error_blaster@err_num 003C  
                              ??_ubx_send_str 007A                                  _i2c_send_ack 09D5  
                              __end_of_i3gnav 06C2                        ??_am1805_write_to_addr 007A  
                  __size_of_eeprom_page_write 003A                                 ??_get_pvt_str 0042  
                                 ?_is_tc_high 0070                                __end_of_memset 0A1A  
                  __end_of_eeprom_single_read 0C2E                                __end_of_strcpy 0A34  
                         start_initialization 003E                   ?_am1805_initiate_ctdn_sleep 0070  
                        _cti_instruction_loop 0744                                   __end_of_ISR 003C  
                            eeprom_seq_read@i 0048                                     _i2c_start 096E  
                         __end_of_have_3d_fix 0C93                __size_of_let_nrf_update_eeprom 0029  
                  cti_instruction_loop@high_n 00DA                 __end_of_let_nrf_update_eeprom 0B7C  
              __size_of_eeprom_write_defaults 0040                 __end_of_eeprom_write_defaults 0D7F  
                    _eeprom_write_gps_minimum 03FE                           __end_of_hard_lockup 1000  
                           __size_of_i2c_init 000A                             __size_of_i2c_stop 0014  
                           _first_pwrup_calls 087D                                      ??_i3gnav 006B  
                       __end_of_i2c_send_nack 09D5                              _hard_lockup_uart 0F4E  
                             _eeprom_seq_read 0E57                            ?_first_pwrup_calls 0070  
                                 __pdataBANK1 00E3                                   __pdataBANK2 0120  
                                 __pdataBANK3 01A0                    __size_of_i2c_get_read_data 0007  
                            ??_i2c_write_data 007A                                      ??_memset 0079  
                                 ?_uart_write 0070                           ??_first_pwrup_calls 007A  
                               _tmr0_overflow 007A                                      ??_strcpy 0075  
         __end_of_eeprom_write_nrf52_sig_byte 0890                   _eeprom_write_nrf52_sig_byte 0886  
                                 ?_setup_fvrc 0070                          __end_of_set_led_duty 0F4E  
                                 __pbssBIGRAM 2389                           __end_of_get_pvt_str 0BD3  
                       ?_cti_instruction_loop 0070                                   __pbssCOMMON 007A  
                                   ___latbits 0003                                 __pcstackBANK0 0020  
                               __pcstackBANK1 00D1                                 __pcstackBANK2 016A  
                                  ?_i2c_start 0070                                 ??_eusart_init 0073  
                         __size_of_is_tc_high 0004                              _i2c_wait_for_ack 0922  
                                 sprintf@flag 003A                     __end_of_first_pwrup_calls 0886  
         eeprom_write_nrf52_sig_byte@sig_byte 0046                                   sprintf@prec 003B  
                         _update_gps_fix_data 0870                     __size_of_reset_ubx_struct 0013  
                __size_of_is_nrfcomplete_high 0004                      __end_of_setup_interrupts 0870  
                       _am1805_write_defaults 0B2F                              ___lwdiv@dividend 0075  
                           __size_of_pic_init 0020                      ?_is_this_the_first_pwrup 0070  
                                    ?___lwdiv 0073                                      ?___lwmod 0023  
              __size_of_reset_instruction_ptr 0011                            _am1805_sleep_error 0003  
                        _am1805_are_we_asleep 0C2E                 __end_of_reset_instruction_ptr 0922  
                           __size_of_setup_io 000C                             __size_of_pwm_init 0021  
                        ?_update_gps_fix_data 0070                              sleep_start@F3275 00CD  
                       _am1805_write_pgm_time 0D02                                   _have_3d_fix 0C5E  
                __end_of_eval_ubx_buf_for_fix 08F4                           ?_am1805_sleep_error 0070  
                        __end_of_ubx_send_str 0B2F                              ___lwdiv@quotient 0021  
                              __size_of_blink 0010                           _eeprom_single_write 0A8B  
                                 _hard_lockup 0FA5                                      ?_sprintf 0027  
                    __end_of_send_am1805_read 09AB                              set_led_duty@duty 0073  
                     __end_of_eeprom_seq_read 0EA5                           __size_of_uart_write 0013  
                                   clear_ram0 08DB                           __end_of_eusart_init 089A  
                           hard_lockup_uart@i 0078                          ??_am1805_sleep_error 0073  
                         __size_of_setup_fvrc 000A                          ?_eeprom_single_write 0043  
         __size_of_am1805_initiate_ctdn_sleep 001D                                 ??_timer0_init 0073  
                               ??_sleep_start 006E                         ?_am1805_are_we_asleep 0070  
                                 _get_pvt_str 0BA6                __size_of_am1805_start_ctdn_tmr 002A  
               __end_of_am1805_start_ctdn_tmr 0BA6                         ??_update_gps_fix_data 007A  
                       eeprom_single_read@ret 0045                        ??_cti_instruction_loop 00D1  
                                   idsn@debug 004F                     __size_of_send_eeprom_read 0006  
                                 ??_i2c_start 007A                     __size_of_ubx_silence_nmea 0042  
                                    _i2c_init 089A                                      _i2c_stop 0982  
                  __size_of_first_pwrup_calls 0009                        ?_am1805_write_defaults 0070  
                           _ubx_send_and_recv 0DC5                            ubx_send_and_recv@i 002D  
                          ?_ubx_send_and_recv 0027                         ??_eeprom_single_write 007A  
                                ??_is_tc_high 0073                         __size_of_set_led_duty 0056  
                         ??_ubx_send_and_recv 002B                              __size_of___lwdiv 0035  
                            __size_of___lwmod 002D                        ?_am1805_write_pgm_time 0070  
                   eeprom_seq_read@start_addr 0047                           __end_of_timer0_init 08B8  
                                  sprintf@val 003C                           __end_of_sleep_start 0DC5  
                  ??_eeprom_write_gps_minimum 004A                               ___lwdiv@divisor 0073  
                             ___lwdiv@counter 0020                      __end_of_hard_lockup_uart 0FA5  
                                    __ptext10 0C93                                      __ptext11 0B7C  
                                    __ptext20 0B0C                                      __ptext12 0A50  
                                    __ptext21 0947                                      __ptext13 063E  
                                    __ptext30 0AC9                                      __ptext22 0A01  
                                    __ptext14 0870                                      __ptext31 089A  
                                    __ptext23 08E7                                      __ptext15 02F7  
                                    __ptext40 09C0                                      __ptext32 0890  
                                    __ptext24 03FE                                      __ptext16 0BA6  
                                    __ptext41 0852                                      __ptext33 0B53  
                                    __ptext25 0AA9                                      __ptext17 07BE  
                                    __ptext50 0901                                      __ptext42 087D  
                                    __ptext34 085A                                      __ptext26 08AE  
                                    __ptext18 0C5E                                      __ptext51 0003  
                                    __ptext43 0D3F                                      __ptext35 0886  
                                    __ptext27 08C3                                      __ptext19 0DC5  
                                    __ptext60 095A                                      __ptext52 0C2E  
                                    __ptext44 0A8B                                      __ptext36 0856  
                                    __ptext28 086A                                      __ptext61 0FA5  
                                    __ptext53 09AB                                      __ptext45 0CC8  
                                    __ptext37 08B8                                      __ptext29 08A4  
                                    __ptext62 0EA5                                      __ptext54 0996  
                                    __ptext46 085E                                      __ptext38 0C00  
                                    __ptext63 0A34                                      __ptext55 09EA  
                                    __ptext47 0D02                                      __ptext39 0864  
                                    __ptext64 0934                                      __ptext56 0922  
                                    __ptext48 0B2F                                      __ptext65 0F4E  
                                    __ptext57 0982                                      __ptext49 0A6D  
                                    __ptext66 0EF8                                      __ptext58 096E  
                                    __ptext67 0A1A                                      __ptext59 0876  
                                 _eusart_init 0890                              __size_of_sprintf 00CE  
                   __end_of_ubx_send_and_recv 0E0D                                    strcpy@from 0073  
                          _eeprom_single_read 0C00                            __end_of_is_tc_high 0856  
                               __size_of_idsn 0085                                 __size_of_main 0082  
                            ?_eeprom_seq_read 0043                              _reset_ubx_struct 0947  
                i2c_get_read_data@latest_byte 0074                ?_sort_pvt_data_into_gps_struct 0070  
                                    _pic_init 0AA9              eeprom_write_defaults@sp_defaults 004C  
                                _set_led_duty 0EF8                         __end_of_error_blaster 0EF8  
                        _eval_ubx_buf_for_fix 08E7                           ?_eeprom_single_read 0070  
                      ??_am1805_are_we_asleep 0043                                      _setup_io 08C3  
                                    int$flags 007E                                      _pwm_init 0AC9  
                                    main@mode 016A                 __size_of_am1805_write_to_addr 001E  
                                ??_uart_write 0079                         __size_of_ubx_send_str 0023  
                    __end_of_i2c_wait_for_ack 0934                                  ??_setup_fvrc 0073  
                         _is_nrfcomplete_high 085A                          ??_eeprom_single_read 0043  
                     __size_of_adjusted_start 0003                                      memset@p1 0073  
                       sleep_start@sleep_vals 00DC                                      intlevel1 0000  
                                   sprintf@ap 0039                                     sprintf@sp 003E  
                            ___lwmod@dividend 0025                         _let_nrf_update_eeprom 0B53  
                           __CFG_CLKOUTEN$OFF 0000                             _send_eeprom_write 085E  
                        ?_is_nrfcomplete_high 0070                            __end_of_uart_write 0947  
                       _eeprom_write_defaults 0D3F                             _uart_write_string 0A34  
                       ?_eval_ubx_buf_for_fix 0070                             ?_setup_interrupts 0070  
                          ?_send_eeprom_write 0070                            __end_of_setup_fvrc 08AE  
                                _ubx_send_str 0B0C                            ?_uart_write_string 0023  
                                _ubx_poll_pvt 0161                            ??_setup_interrupts 0073  
                                 _timer0_init 08AE                                   _sleep_start 0D7F  
                         ??_send_eeprom_write 0073                           ??_uart_write_string 0025  
                           _send_am1805_write 09AB                                      sprintf@c 003F  
                                    sprintf@f 0027                                  ?_have_3d_fix 0070  
                                hard_lockup@i 0040                              _send_eeprom_read 0864  
                             ___lwmod@divisor 0023                            ?_send_am1805_write 0070  
            __size_of_is_this_the_first_pwrup 000B                                      strcpy@cp 0076  
                    ubx_send_and_recv@ubx_cmd 0027                                      strcpy@to 0077  
                             ___lwmod@counter 0079                        __size_of_i2c_send_nack 0015  
                                ?_hard_lockup 0070                           ??_send_am1805_write 007A  
                           ?_send_am1805_read 0070                              _ubx_silence_nmea 07BE  
                  __size_of_ubx_send_and_recv 0048                     __end_of_send_eeprom_write 0864  
                   __end_of_uart_write_string 0A50                            ??_send_am1805_read 007A  
                       ??_is_nrfcomplete_high 0073                             _ubx_disable_gxgga 0131  
                           _ubx_disable_gxgll 013D                             _ubx_disable_gxgsa 0149  
                           _ubx_disable_gxgsv 0155                             _ubx_disable_gxrmc 01AA  
                           _ubx_disable_gxvtg 01B6                     cti_instruction_loop@low_n 00D9  
                             ubx_send_str@str 0023                                 ubx_send_str@i 0025  
